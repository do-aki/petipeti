/* DO NOT EDIT THIS FILE!!! It is auto generated by get_error_codes.php */
#ifdef ER_DUP_KEY
  case ER_DUP_KEY                           : return "23000";
#endif
#ifdef ER_OUTOFMEMORY
  case ER_OUTOFMEMORY                       : return "HY001";
#endif
#ifdef ER_OUT_OF_SORTMEMORY
  case ER_OUT_OF_SORTMEMORY                 : return "HY001";
#endif
#ifdef ER_CON_COUNT_ERROR
  case ER_CON_COUNT_ERROR                   : return "08004";
#endif
#ifdef ER_BAD_HOST_ERROR
  case ER_BAD_HOST_ERROR                    : return "08S01";
#endif
#ifdef ER_HANDSHAKE_ERROR
  case ER_HANDSHAKE_ERROR                   : return "08S01";
#endif
#ifdef ER_DBACCESS_DENIED_ERROR
  case ER_DBACCESS_DENIED_ERROR             : return "42000";
#endif
#ifdef ER_ACCESS_DENIED_ERROR
  case ER_ACCESS_DENIED_ERROR               : return "28000";
#endif
#ifdef ER_NO_DB_ERROR
  case ER_NO_DB_ERROR                       : return "3D000";
#endif
#ifdef ER_UNKNOWN_COM_ERROR
  case ER_UNKNOWN_COM_ERROR                 : return "08S01";
#endif
#ifdef ER_BAD_NULL_ERROR
  case ER_BAD_NULL_ERROR                    : return "23000";
#endif
#ifdef ER_BAD_DB_ERROR
  case ER_BAD_DB_ERROR                      : return "42000";
#endif
#ifdef ER_TABLE_EXISTS_ERROR
  case ER_TABLE_EXISTS_ERROR                : return "42S01";
#endif
#ifdef ER_BAD_TABLE_ERROR
  case ER_BAD_TABLE_ERROR                   : return "42S02";
#endif
#ifdef ER_NON_UNIQ_ERROR
  case ER_NON_UNIQ_ERROR                    : return "23000";
#endif
#ifdef ER_SERVER_SHUTDOWN
  case ER_SERVER_SHUTDOWN                   : return "08S01";
#endif
#ifdef ER_BAD_FIELD_ERROR
  case ER_BAD_FIELD_ERROR                   : return "42S22";
#endif
#ifdef ER_WRONG_FIELD_WITH_GROUP
  case ER_WRONG_FIELD_WITH_GROUP            : return "42000";
#endif
#ifdef ER_WRONG_GROUP_FIELD
  case ER_WRONG_GROUP_FIELD                 : return "42000";
#endif
#ifdef ER_WRONG_SUM_SELECT
  case ER_WRONG_SUM_SELECT                  : return "42000";
#endif
#ifdef ER_WRONG_VALUE_COUNT
  case ER_WRONG_VALUE_COUNT                 : return "21S01";
#endif
#ifdef ER_TOO_LONG_IDENT
  case ER_TOO_LONG_IDENT                    : return "42000";
#endif
#ifdef ER_DUP_FIELDNAME
  case ER_DUP_FIELDNAME                     : return "42S21";
#endif
#ifdef ER_DUP_KEYNAME
  case ER_DUP_KEYNAME                       : return "42000";
#endif
#ifdef ER_DUP_ENTRY
  case ER_DUP_ENTRY                         : return "23000";
#endif
#ifdef ER_WRONG_FIELD_SPEC
  case ER_WRONG_FIELD_SPEC                  : return "42000";
#endif
#ifdef ER_PARSE_ERROR
  case ER_PARSE_ERROR                       : return "42000";
#endif
#ifdef ER_NONUNIQ_TABLE
  case ER_NONUNIQ_TABLE                     : return "42000";
#endif
#ifdef ER_INVALID_DEFAULT
  case ER_INVALID_DEFAULT                   : return "42000";
#endif
#ifdef ER_MULTIPLE_PRI_KEY
  case ER_MULTIPLE_PRI_KEY                  : return "42000";
#endif
#ifdef ER_TOO_MANY_KEYS
  case ER_TOO_MANY_KEYS                     : return "42000";
#endif
#ifdef ER_TOO_MANY_KEY_PARTS
  case ER_TOO_MANY_KEY_PARTS                : return "42000";
#endif
#ifdef ER_TOO_LONG_KEY
  case ER_TOO_LONG_KEY                      : return "42000";
#endif
#ifdef ER_KEY_COLUMN_DOES_NOT_EXITS
  case ER_KEY_COLUMN_DOES_NOT_EXITS         : return "42000";
#endif
#ifdef ER_BLOB_USED_AS_KEY
  case ER_BLOB_USED_AS_KEY                  : return "42000";
#endif
#ifdef ER_TOO_BIG_FIELDLENGTH
  case ER_TOO_BIG_FIELDLENGTH               : return "42000";
#endif
#ifdef ER_WRONG_AUTO_KEY
  case ER_WRONG_AUTO_KEY                    : return "42000";
#endif
#ifdef ER_FORCING_CLOSE
  case ER_FORCING_CLOSE                     : return "08S01";
#endif
#ifdef ER_IPSOCK_ERROR
  case ER_IPSOCK_ERROR                      : return "08S01";
#endif
#ifdef ER_NO_SUCH_INDEX
  case ER_NO_SUCH_INDEX                     : return "42S12";
#endif
#ifdef ER_WRONG_FIELD_TERMINATORS
  case ER_WRONG_FIELD_TERMINATORS           : return "42000";
#endif
#ifdef ER_BLOBS_AND_NO_TERMINATED
  case ER_BLOBS_AND_NO_TERMINATED           : return "42000";
#endif
#ifdef ER_CANT_REMOVE_ALL_FIELDS
  case ER_CANT_REMOVE_ALL_FIELDS            : return "42000";
#endif
#ifdef ER_CANT_DROP_FIELD_OR_KEY
  case ER_CANT_DROP_FIELD_OR_KEY            : return "42000";
#endif
#ifdef ER_BLOB_CANT_HAVE_DEFAULT
  case ER_BLOB_CANT_HAVE_DEFAULT            : return "42000";
#endif
#ifdef ER_WRONG_DB_NAME
  case ER_WRONG_DB_NAME                     : return "42000";
#endif
#ifdef ER_WRONG_TABLE_NAME
  case ER_WRONG_TABLE_NAME                  : return "42000";
#endif
#ifdef ER_TOO_BIG_SELECT
  case ER_TOO_BIG_SELECT                    : return "42000";
#endif
#ifdef ER_UNKNOWN_PROCEDURE
  case ER_UNKNOWN_PROCEDURE                 : return "42000";
#endif
#ifdef ER_WRONG_PARAMCOUNT_TO_PROCEDURE
  case ER_WRONG_PARAMCOUNT_TO_PROCEDURE     : return "42000";
#endif
#ifdef ER_UNKNOWN_TABLE
  case ER_UNKNOWN_TABLE                     : return "42S02";
#endif
#ifdef ER_FIELD_SPECIFIED_TWICE
  case ER_FIELD_SPECIFIED_TWICE             : return "42000";
#endif
#ifdef ER_UNSUPPORTED_EXTENSION
  case ER_UNSUPPORTED_EXTENSION             : return "42000";
#endif
#ifdef ER_TABLE_MUST_HAVE_COLUMNS
  case ER_TABLE_MUST_HAVE_COLUMNS           : return "42000";
#endif
#ifdef ER_UNKNOWN_CHARACTER_SET
  case ER_UNKNOWN_CHARACTER_SET             : return "42000";
#endif
#ifdef ER_TOO_BIG_ROWSIZE
  case ER_TOO_BIG_ROWSIZE                   : return "42000";
#endif
#ifdef ER_WRONG_OUTER_JOIN
  case ER_WRONG_OUTER_JOIN                  : return "42000";
#endif
#ifdef ER_NULL_COLUMN_IN_INDEX
  case ER_NULL_COLUMN_IN_INDEX              : return "42000";
#endif
#ifdef ER_PASSWORD_ANONYMOUS_USER
  case ER_PASSWORD_ANONYMOUS_USER           : return "42000";
#endif
#ifdef ER_PASSWORD_NOT_ALLOWED
  case ER_PASSWORD_NOT_ALLOWED              : return "42000";
#endif
#ifdef ER_PASSWORD_NO_MATCH
  case ER_PASSWORD_NO_MATCH                 : return "42000";
#endif
#ifdef ER_WRONG_VALUE_COUNT_ON_ROW
  case ER_WRONG_VALUE_COUNT_ON_ROW          : return "21S01";
#endif
#ifdef ER_INVALID_USE_OF_NULL
  case ER_INVALID_USE_OF_NULL               : return "42000";
#endif
#ifdef ER_REGEXP_ERROR
  case ER_REGEXP_ERROR                      : return "42000";
#endif
#ifdef ER_NONEXISTING_GRANT
  case ER_NONEXISTING_GRANT                 : return "42000";
#endif
#ifdef ER_TABLEACCESS_DENIED_ERROR
  case ER_TABLEACCESS_DENIED_ERROR          : return "42000";
#endif
#ifdef ER_COLUMNACCESS_DENIED_ERROR
  case ER_COLUMNACCESS_DENIED_ERROR         : return "42000";
#endif
#ifdef ER_ILLEGAL_GRANT_FOR_TABLE
  case ER_ILLEGAL_GRANT_FOR_TABLE           : return "42000";
#endif
#ifdef ER_GRANT_WRONG_HOST_OR_USER
  case ER_GRANT_WRONG_HOST_OR_USER          : return "42000";
#endif
#ifdef ER_NO_SUCH_TABLE
  case ER_NO_SUCH_TABLE                     : return "42S02";
#endif
#ifdef ER_NONEXISTING_TABLE_GRANT
  case ER_NONEXISTING_TABLE_GRANT           : return "42000";
#endif
#ifdef ER_NOT_ALLOWED_COMMAND
  case ER_NOT_ALLOWED_COMMAND               : return "42000";
#endif
#ifdef ER_SYNTAX_ERROR
  case ER_SYNTAX_ERROR                      : return "42000";
#endif
#ifdef ER_ABORTING_CONNECTION
  case ER_ABORTING_CONNECTION               : return "08S01";
#endif
#ifdef ER_NET_PACKET_TOO_LARGE
  case ER_NET_PACKET_TOO_LARGE              : return "08S01";
#endif
#ifdef ER_NET_READ_ERROR_FROM_PIPE
  case ER_NET_READ_ERROR_FROM_PIPE          : return "08S01";
#endif
#ifdef ER_NET_FCNTL_ERROR
  case ER_NET_FCNTL_ERROR                   : return "08S01";
#endif
#ifdef ER_NET_PACKETS_OUT_OF_ORDER
  case ER_NET_PACKETS_OUT_OF_ORDER          : return "08S01";
#endif
#ifdef ER_NET_UNCOMPRESS_ERROR
  case ER_NET_UNCOMPRESS_ERROR              : return "08S01";
#endif
#ifdef ER_NET_READ_ERROR
  case ER_NET_READ_ERROR                    : return "08S01";
#endif
#ifdef ER_NET_READ_INTERRUPTED
  case ER_NET_READ_INTERRUPTED              : return "08S01";
#endif
#ifdef ER_NET_ERROR_ON_WRITE
  case ER_NET_ERROR_ON_WRITE                : return "08S01";
#endif
#ifdef ER_NET_WRITE_INTERRUPTED
  case ER_NET_WRITE_INTERRUPTED             : return "08S01";
#endif
#ifdef ER_TOO_LONG_STRING
  case ER_TOO_LONG_STRING                   : return "42000";
#endif
#ifdef ER_TABLE_CANT_HANDLE_BLOB
  case ER_TABLE_CANT_HANDLE_BLOB            : return "42000";
#endif
#ifdef ER_TABLE_CANT_HANDLE_AUTO_INCREMENT
  case ER_TABLE_CANT_HANDLE_AUTO_INCREMENT  : return "42000";
#endif
#ifdef ER_WRONG_COLUMN_NAME
  case ER_WRONG_COLUMN_NAME                 : return "42000";
#endif
#ifdef ER_WRONG_KEY_COLUMN
  case ER_WRONG_KEY_COLUMN                  : return "42000";
#endif
#ifdef ER_DUP_UNIQUE
  case ER_DUP_UNIQUE                        : return "23000";
#endif
#ifdef ER_BLOB_KEY_WITHOUT_LENGTH
  case ER_BLOB_KEY_WITHOUT_LENGTH           : return "42000";
#endif
#ifdef ER_PRIMARY_CANT_HAVE_NULL
  case ER_PRIMARY_CANT_HAVE_NULL            : return "42000";
#endif
#ifdef ER_TOO_MANY_ROWS
  case ER_TOO_MANY_ROWS                     : return "42000";
#endif
#ifdef ER_REQUIRES_PRIMARY_KEY
  case ER_REQUIRES_PRIMARY_KEY              : return "42000";
#endif
#ifdef ER_CHECK_NO_SUCH_TABLE
  case ER_CHECK_NO_SUCH_TABLE               : return "42000";
#endif
#ifdef ER_CHECK_NOT_IMPLEMENTED
  case ER_CHECK_NOT_IMPLEMENTED             : return "42000";
#endif
#ifdef ER_CANT_DO_THIS_DURING_AN_TRANSACTION
  case ER_CANT_DO_THIS_DURING_AN_TRANSACTION: return "25000";
#endif
#ifdef ER_NEW_ABORTING_CONNECTION
  case ER_NEW_ABORTING_CONNECTION           : return "08S01";
#endif
#ifdef ER_MASTER_NET_READ
  case ER_MASTER_NET_READ                   : return "08S01";
#endif
#ifdef ER_MASTER_NET_WRITE
  case ER_MASTER_NET_WRITE                  : return "08S01";
#endif
#ifdef ER_TOO_MANY_USER_CONNECTIONS
  case ER_TOO_MANY_USER_CONNECTIONS         : return "42000";
#endif
#ifdef ER_READ_ONLY_TRANSACTION
  case ER_READ_ONLY_TRANSACTION             : return "25000";
#endif
#ifdef ER_LOCK_DEADLOCK
  case ER_LOCK_DEADLOCK                     : return "40001";
#endif
#ifdef ER_NO_REFERENCED_ROW
  case ER_NO_REFERENCED_ROW                 : return "23000";
#endif
#ifdef ER_ROW_IS_REFERENCED
  case ER_ROW_IS_REFERENCED                 : return "23000";
#endif
#ifdef ER_CONNECT_TO_MASTER
  case ER_CONNECT_TO_MASTER                 : return "08S01";
#endif
#ifdef ER_USER_LIMIT_REACHED
  case ER_USER_LIMIT_REACHED                : return "42000";
#endif
#ifdef ER_NO_DEFAULT
  case ER_NO_DEFAULT                        : return "42000";
#endif
#ifdef ER_WRONG_VALUE_FOR_VAR
  case ER_WRONG_VALUE_FOR_VAR               : return "42000";
#endif
#ifdef ER_WRONG_TYPE_FOR_VAR
  case ER_WRONG_TYPE_FOR_VAR                : return "42000";
#endif
#ifdef ER_CANT_USE_OPTION_HERE
  case ER_CANT_USE_OPTION_HERE              : return "42000";
#endif
#ifdef ER_NOT_SUPPORTED_YET
  case ER_NOT_SUPPORTED_YET                 : return "42000";
#endif
#ifdef ER_WRONG_FK_DEF
  case ER_WRONG_FK_DEF                      : return "42000";
#endif
#ifdef ER_OPERAND_COLUMNS
  case ER_OPERAND_COLUMNS                   : return "21000";
#endif
#ifdef ER_SUBQUERY_NO_1_ROW
  case ER_SUBQUERY_NO_1_ROW                 : return "21000";
#endif
#ifdef ER_ILLEGAL_REFERENCE
  case ER_ILLEGAL_REFERENCE                 : return "42S22";
#endif
#ifdef ER_DERIVED_MUST_HAVE_ALIAS
  case ER_DERIVED_MUST_HAVE_ALIAS           : return "42000";
#endif
#ifdef ER_SELECT_REDUCED
  case ER_SELECT_REDUCED                    : return "01000";
#endif
#ifdef ER_TABLENAME_NOT_ALLOWED_HERE
  case ER_TABLENAME_NOT_ALLOWED_HERE        : return "42000";
#endif
#ifdef ER_NOT_SUPPORTED_AUTH_MODE
  case ER_NOT_SUPPORTED_AUTH_MODE           : return "08004";
#endif
#ifdef ER_SPATIAL_CANT_HAVE_NULL
  case ER_SPATIAL_CANT_HAVE_NULL            : return "42000";
#endif
#ifdef ER_COLLATION_CHARSET_MISMATCH
  case ER_COLLATION_CHARSET_MISMATCH        : return "42000";
#endif
#ifdef ER_WARN_TOO_FEW_RECORDS
  case ER_WARN_TOO_FEW_RECORDS              : return "01000";
#endif
#ifdef ER_WARN_TOO_MANY_RECORDS
  case ER_WARN_TOO_MANY_RECORDS             : return "01000";
#endif
#ifdef ER_WARN_NULL_TO_NOTNULL
  case ER_WARN_NULL_TO_NOTNULL              : return "01000";
#endif
#ifdef ER_WARN_DATA_OUT_OF_RANGE
  case ER_WARN_DATA_OUT_OF_RANGE            : return "01000";
#endif
#ifdef ER_WARN_DATA_TRUNCATED
  case ER_WARN_DATA_TRUNCATED               : return "01000";
#endif
#ifdef ER_WRONG_NAME_FOR_INDEX
  case ER_WRONG_NAME_FOR_INDEX              : return "42000";
#endif
#ifdef ER_WRONG_NAME_FOR_CATALOG
  case ER_WRONG_NAME_FOR_CATALOG            : return "42000";
#endif
#ifdef ER_UNKNOWN_STORAGE_ENGINE
  case ER_UNKNOWN_STORAGE_ENGINE            : return "42000";
#endif
