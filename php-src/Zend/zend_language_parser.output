Terminals unused in grammar

   T_CHARACTER
   T_BAD_CHARACTER
   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"


State 225 conflicts: 1 shift/reduce
State 829 conflicts: 2 shift/reduce


文法

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 $@1: /* 空 */

    3 top_statement_list: top_statement_list $@1 top_statement
    4                   | /* 空 */

    5 namespace_name: "identifier (T_STRING)"
    6               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

    7 top_statement: statement
    8              | function_declaration_statement
    9              | class_declaration_statement
   10              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   11              | "namespace (T_NAMESPACE)" namespace_name ';'

   12 $@2: /* 空 */

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}'

   14 $@3: /* 空 */

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}'
   16              | "use (T_USE)" use_declarations ';'
   17              | constant_declaration ';'

   18 use_declarations: use_declarations ',' use_declaration
   19                 | use_declaration

   20 use_declaration: namespace_name
   21                | namespace_name "as (T_AS)" "identifier (T_STRING)"
   22                | "\\ (T_NS_SEPARATOR)" namespace_name
   23                | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
   25                     | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

   26 $@4: /* 空 */

   27 inner_statement_list: inner_statement_list $@4 inner_statement
   28                     | /* 空 */

   29 inner_statement: statement
   30                | function_declaration_statement
   31                | class_declaration_statement
   32                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

   33 statement: unticked_statement
   34          | "identifier (T_STRING)" ':'

   35 unticked_statement: '{' inner_statement_list '}'

   36 $@5: /* 空 */

   37 $@6: /* 空 */

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 statement $@6 elseif_list else_single

   39 $@7: /* 空 */

   40 $@8: /* 空 */

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

   42 $@9: /* 空 */

   43 $@10: /* 空 */

   44 unticked_statement: T_JA_IF expr T_NARABA $@9 inner_statement_list $@10 ja_else_single T_OWARI

   45 $@11: /* 空 */

   46 $@12: /* 空 */

   47 unticked_statement: "while (T_WHILE)" '(' $@11 expr ')' $@12 while_statement

   48 $@13: /* 空 */

   49 $@14: /* 空 */

   50 unticked_statement: T_KURIKAESI $@13 expr T_AIDA $@14 while_statement

   51 $@15: /* 空 */

   52 $@16: /* 空 */

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' $@16 expr ')' ';'

   54 $@17: /* 空 */

   55 $@18: /* 空 */

   56 $@19: /* 空 */

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement

   58 $@20: /* 空 */

   59 unticked_statement: "switch (T_SWITCH)" '(' expr ')' $@20 switch_case_list
   60                   | "break (T_BREAK)" ';'
   61                   | "break (T_BREAK)" expr ';'
   62                   | "continue (T_CONTINUE)" ';'
   63                   | "continue (T_CONTINUE)" expr ';'
   64                   | "return (T_RETURN)" ';'
   65                   | "return (T_RETURN)" expr_without_variable ';'
   66                   | "return (T_RETURN)" variable ';'
   67                   | "global (T_GLOBAL)" global_var_list ';'
   68                   | "static (T_STATIC)" static_var_list ';'
   69                   | "echo (T_ECHO)" echo_expr_list ';'
   70                   | T_OPEN_OUTPUT echo_expr_list T_CLOSE_OUTPUT
   71                   | T_INLINE_HTML
   72                   | expr ';'
   73                   | "unset (T_UNSET)" '(' unset_variables ')' ';'

   74 $@21: /* 空 */

   75 $@22: /* 空 */

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement

   77 $@23: /* 空 */

   78 $@24: /* 空 */

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 foreach_statement

   80 $@25: /* 空 */

   81 unticked_statement: "declare (T_DECLARE)" $@25 '(' declare_list ')' declare_statement
   82                   | ';'

   83 $@26: /* 空 */

   84 $@27: /* 空 */

   85 $@28: /* 空 */

   86 $@29: /* 空 */

   87 $@30: /* 空 */

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches
   89                   | "throw (T_THROW)" expr ';'
   90                   | "goto (T_GOTO)" "identifier (T_STRING)" ';'

   91 additional_catches: non_empty_additional_catches
   92                   | /* 空 */

   93 non_empty_additional_catches: additional_catch
   94                             | non_empty_additional_catches additional_catch

   95 @31: /* 空 */

   96 $@32: /* 空 */

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}'

   98 unset_variables: unset_variable
   99                | unset_variables ',' unset_variable

  100 unset_variable: variable

  101 function_declaration_statement: unticked_function_declaration_statement

  102 class_declaration_statement: unticked_class_declaration_statement

  103 is_reference: /* 空 */
  104             | '&'

  105 $@33: /* 空 */

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' inner_statement_list '}'

  107 $@34: /* 空 */

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 implements_list '{' class_statement_list '}'

  109 $@35: /* 空 */

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 interface_extends_list '{' class_statement_list '}'

  111 class_entry_type: "class (T_CLASS)"
  112                 | "abstract (T_ABSTRACT)" "class (T_CLASS)"
  113                 | "trait (T_TRAIT)"
  114                 | "final (T_FINAL)" "class (T_CLASS)"

  115 extends_from: /* 空 */
  116             | "extends (T_EXTENDS)" fully_qualified_class_name

  117 interface_entry: "interface (T_INTERFACE)"

  118 interface_extends_list: /* 空 */
  119                       | "extends (T_EXTENDS)" interface_list

  120 implements_list: /* 空 */
  121                | "implements (T_IMPLEMENTS)" interface_list

  122 interface_list: fully_qualified_class_name
  123               | interface_list ',' fully_qualified_class_name

  124 foreach_optional_arg: /* 空 */
  125                     | "=> (T_DOUBLE_ARROW)" foreach_variable

  126 foreach_variable: variable
  127                 | '&' variable

  128 for_statement: statement
  129              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  130 foreach_statement: statement
  131                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  132 declare_statement: statement
  133                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  134 declare_list: "identifier (T_STRING)" '=' static_scalar
  135             | declare_list ',' "identifier (T_STRING)" '=' static_scalar

  136 switch_case_list: '{' case_list '}'
  137                 | '{' ';' case_list '}'
  138                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  139                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  140 case_list: /* 空 */

  141 $@36: /* 空 */

  142 case_list: case_list "case (T_CASE)" expr case_separator $@36 inner_statement_list

  143 $@37: /* 空 */

  144 case_list: case_list "default (T_DEFAULT)" case_separator $@37 inner_statement_list

  145 case_separator: ':'
  146               | ';'

  147 while_statement: statement
  148                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  149 elseif_list: /* 空 */

  150 $@38: /* 空 */

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' expr ')' $@38 statement

  152 new_elseif_list: /* 空 */

  153 $@39: /* 空 */

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr ')' ':' $@39 inner_statement_list

  155 else_single: /* 空 */
  156            | "else (T_ELSE)" statement

  157 ja_else_single: /* 空 */
  158               | T_JA_ELSE inner_statement_list

  159 new_else_single: /* 空 */
  160                | "else (T_ELSE)" ':' inner_statement_list

  161 parameter_list: non_empty_parameter_list
  162               | /* 空 */

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)"
  164                         | optional_class_type '&' "variable (T_VARIABLE)"
  165                         | optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type "variable (T_VARIABLE)" '=' static_scalar
  167                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

  171 optional_class_type: /* 空 */
  172                    | "array (T_ARRAY)"
  173                    | "callable (T_CALLABLE)"
  174                    | fully_qualified_class_name

  175 function_call_parameter_list: non_empty_function_call_parameter_list
  176                             | /* 空 */

  177 non_empty_function_call_parameter_list: expr_without_variable
  178                                       | variable
  179                                       | '&' w_variable
  180                                       | non_empty_function_call_parameter_list ',' expr_without_variable
  181                                       | non_empty_function_call_parameter_list ',' variable
  182                                       | non_empty_function_call_parameter_list ',' '&' w_variable

  183 global_var_list: global_var_list ',' global_var
  184                | global_var

  185 global_var: "variable (T_VARIABLE)"
  186           | '$' r_variable
  187           | T_HENSU r_variable
  188           | '$' '{' expr '}'
  189           | T_HENSU '{' expr '}'

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)"
  191                | static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar
  192                | "variable (T_VARIABLE)"
  193                | "variable (T_VARIABLE)" '=' static_scalar

  194 class_statement_list: class_statement_list class_statement
  195                     | /* 空 */

  196 $@40: /* 空 */

  197 class_statement: variable_modifiers $@40 class_variable_declaration ';'
  198                | class_constant_declaration ';'
  199                | trait_use_statement

  200 $@41: /* 空 */

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 '(' parameter_list ')' method_body

  202 trait_use_statement: "use (T_USE)" trait_list trait_adaptations

  203 trait_list: fully_qualified_class_name
  204           | trait_list ',' fully_qualified_class_name

  205 trait_adaptations: ';'
  206                  | '{' trait_adaptation_list '}'

  207 trait_adaptation_list: /* 空 */
  208                      | non_empty_trait_adaptation_list

  209 non_empty_trait_adaptation_list: trait_adaptation_statement
  210                                | non_empty_trait_adaptation_list trait_adaptation_statement

  211 trait_adaptation_statement: trait_precedence ';'
  212                           | trait_alias ';'

  213 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list

  214 trait_reference_list: fully_qualified_class_name
  215                     | trait_reference_list ',' fully_qualified_class_name

  216 trait_method_reference: "identifier (T_STRING)"
  217                       | trait_method_reference_fully_qualified

  218 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  219 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  220            | trait_method_reference "as (T_AS)" member_modifier

  221 trait_modifiers: /* 空 */
  222                | member_modifier

  223 method_body: ';'
  224            | '{' inner_statement_list '}'

  225 variable_modifiers: non_empty_member_modifiers
  226                   | "var (T_VAR)"

  227 method_modifiers: /* 空 */
  228                 | non_empty_member_modifiers

  229 non_empty_member_modifiers: member_modifier
  230                           | non_empty_member_modifiers member_modifier

  231 member_modifier: "public (T_PUBLIC)"
  232                | "protected (T_PROTECTED)"
  233                | "private (T_PRIVATE)"
  234                | "static (T_STATIC)"
  235                | "abstract (T_ABSTRACT)"
  236                | "final (T_FINAL)"

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)"
  238                           | class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar
  239                           | "variable (T_VARIABLE)"
  240                           | "variable (T_VARIABLE)" '=' static_scalar

  241 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
  242                           | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

  243 echo_expr_list: echo_expr_list ',' expr
  244               | expr

  245 for_expr: /* 空 */
  246         | non_empty_for_expr

  247 $@42: /* 空 */

  248 non_empty_for_expr: non_empty_for_expr ',' $@42 expr
  249                   | expr

  250 chaining_method_or_property: chaining_method_or_property variable_property
  251                            | variable_property

  252 chaining_dereference: chaining_dereference '[' dim_offset ']'
  253                     | '[' dim_offset ']'

  254 $@43: /* 空 */

  255 chaining_instance_call: chaining_dereference $@43 chaining_method_or_property
  256                       | chaining_dereference
  257                       | chaining_method_or_property

  258 instance_call: /* 空 */

  259 $@44: /* 空 */

  260 instance_call: $@44 chaining_instance_call

  261 $@45: /* 空 */

  262 new_expr: "new (T_NEW)" class_name_reference $@45 ctor_arguments

  263 $@46: /* 空 */

  264 expr_without_variable: "list (T_LIST)" '(' $@46 assignment_list ')' '=' expr
  265                      | variable '=' expr
  266                      | variable "T_HA" expr T_DESU
  267                      | variable "T_NI" expr T_DAINYU
  268                      | variable '=' '&' variable

  269 $@47: /* 空 */

  270 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  271                      | "clone (T_CLONE)" expr
  272                      | variable "+= (T_PLUS_EQUAL)" expr
  273                      | variable "-= (T_MINUS_EQUAL)" expr
  274                      | variable "*= (T_MUL_EQUAL)" expr
  275                      | variable "/= (T_DIV_EQUAL)" expr
  276                      | variable ".= (T_CONCAT_EQUAL)" expr
  277                      | variable "%= (T_MOD_EQUAL)" expr
  278                      | variable "&= (T_AND_EQUAL)" expr
  279                      | variable "|= (T_OR_EQUAL)" expr
  280                      | variable "^= (T_XOR_EQUAL)" expr
  281                      | variable "<<= (T_SL_EQUAL)" expr
  282                      | variable ">>= (T_SR_EQUAL)" expr
  283                      | rw_variable "++ (T_INC)"
  284                      | "++ (T_INC)" rw_variable
  285                      | rw_variable "-- (T_DEC)"
  286                      | "-- (T_DEC)" rw_variable

  287 $@48: /* 空 */

  288 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@48 expr

  289 $@49: /* 空 */

  290 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@49 expr

  291 $@50: /* 空 */

  292 expr_without_variable: expr "or (T_LOGICAL_OR)" $@50 expr

  293 $@51: /* 空 */

  294 expr_without_variable: expr "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr "xor (T_LOGICAL_XOR)" expr
  296                      | expr '|' expr
  297                      | expr '&' expr
  298                      | expr '^' expr
  299                      | expr '.' expr
  300                      | expr '+' expr
  301                      | expr "+" expr
  302                      | expr '-' expr
  303                      | expr "-" expr
  304                      | expr '*' expr
  305                      | expr "*" expr
  306                      | expr '/' expr
  307                      | expr "/" expr
  308                      | expr '%' expr
  309                      | expr "T_WO" expr "%"
  310                      | expr "<< (T_SL)" expr
  311                      | expr ">> (T_SR)" expr
  312                      | '+' expr
  313                      | '-' expr
  314                      | '!' expr
  315                      | '~' expr
  316                      | expr "=== (T_IS_IDENTICAL)" expr
  317                      | expr "T_GA" expr "EQ"
  318                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr "T_GA" expr "NE"
  320                      | expr "== (T_IS_EQUAL)" expr
  321                      | expr "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr '<' expr
  323                      | expr "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr '>' expr
  327                      | expr "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  331                      | '(' expr ')'
  332                      | new_expr

  333 @52: /* 空 */

  334 expr_without_variable: '(' new_expr ')' @52 instance_call

  335 $@53: /* 空 */

  336 $@54: /* 空 */

  337 expr_without_variable: expr '?' $@53 expr ':' $@54 expr

  338 $@55: /* 空 */

  339 expr_without_variable: expr '?' ':' $@55 expr
  340                      | internal_functions_in_yacc
  341                      | "(int) (T_INT_CAST)" expr
  342                      | "(double) (T_DOUBLE_CAST)" expr
  343                      | "(string) (T_STRING_CAST)" expr
  344                      | "(array) (T_ARRAY_CAST)" expr
  345                      | "(object) (T_OBJECT_CAST)" expr
  346                      | "(bool) (T_BOOL_CAST)" expr
  347                      | "(unset) (T_UNSET_CAST)" expr
  348                      | "exit (T_EXIT)" exit_expr

  349 $@56: /* 空 */

  350 expr_without_variable: '@' $@56 expr
  351                      | scalar
  352                      | "array (T_ARRAY)" '(' array_pair_list ')'
  353                      | '[' array_pair_list ']'
  354                      | '`' backticks_expr '`'
  355                      | "print (T_PRINT)" expr

  356 @57: /* 空 */

  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

  358 @58: /* 空 */

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'

  360 function: "function (T_FUNCTION)"

  361 lexical_vars: /* 空 */
  362             | "use (T_USE)" '(' lexical_var_list ')'

  363 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)"
  364                 | lexical_var_list ',' '&' "variable (T_VARIABLE)"
  365                 | "variable (T_VARIABLE)"
  366                 | '&' "variable (T_VARIABLE)"

  367 $@59: /* 空 */

  368 function_call: namespace_name '(' $@59 function_call_parameter_list ')'

  369 $@60: /* 空 */

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list ')'

  371 $@61: /* 空 */

  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name '(' $@61 function_call_parameter_list ')'

  373 $@62: /* 空 */

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 function_call_parameter_list ')'

  375 $@63: /* 空 */

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 function_call_parameter_list ')'

  377 $@64: /* 空 */

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 function_call_parameter_list ')'

  379 $@65: /* 空 */

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 function_call_parameter_list ')'

  381 $@66: /* 空 */

  382 function_call: variable_without_objects '(' $@66 function_call_parameter_list ')'

  383 class_name: "static (T_STATIC)"
  384           | namespace_name
  385           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  386           | "\\ (T_NS_SEPARATOR)" namespace_name

  387 fully_qualified_class_name: namespace_name
  388                           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  389                           | "\\ (T_NS_SEPARATOR)" namespace_name

  390 class_name_reference: class_name
  391                     | dynamic_class_name_reference

  392 $@67: /* 空 */

  393 $@68: /* 空 */

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@67 object_property $@68 dynamic_class_name_variable_properties
  395                             | base_variable

  396 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
  397                                       | /* 空 */

  398 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property

  399 exit_expr: /* 空 */
  400          | '(' ')'
  401          | '(' expr ')'

  402 backticks_expr: /* 空 */
  403               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  404               | encaps_list

  405 ctor_arguments: /* 空 */
  406               | '(' function_call_parameter_list ')'

  407 common_scalar: "integer number (T_LNUMBER)"
  408              | "floating-point number (T_DNUMBER)"
  409              | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"
  410              | "__LINE__ (T_LINE)"
  411              | "__FILE__ (T_FILE)"
  412              | "__DIR__ (T_DIR)"
  413              | "__TRAIT__ (T_TRAIT_C)"
  414              | "__METHOD__ (T_METHOD_C)"
  415              | "__FUNCTION__ (T_FUNC_C)"
  416              | "__NAMESPACE__ (T_NS_C)"
  417              | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  418              | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"

  419 static_scalar: common_scalar
  420              | namespace_name
  421              | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  422              | "\\ (T_NS_SEPARATOR)" namespace_name
  423              | '+' static_scalar
  424              | '-' static_scalar
  425              | "array (T_ARRAY)" '(' static_array_pair_list ')'
  426              | '[' static_array_pair_list ']'
  427              | static_class_constant
  428              | "__CLASS__ (T_CLASS_C)"

  429 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  430 scalar: "variable name (T_STRING_VARNAME)"
  431       | class_constant
  432       | namespace_name
  433       | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  434       | "\\ (T_NS_SEPARATOR)" namespace_name
  435       | common_scalar
  436       | '"' encaps_list '"'
  437       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  438       | "__CLASS__ (T_CLASS_C)"

  439 static_array_pair_list: /* 空 */
  440                       | non_empty_static_array_pair_list possible_comma

  441 possible_comma: /* 空 */
  442               | ','

  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | non_empty_static_array_pair_list ',' static_scalar
  445                                 | static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  446                                 | static_scalar

  447 expr: r_variable
  448     | expr_without_variable

  449 r_variable: variable

  450 w_variable: variable

  451 rw_variable: variable

  452 $@69: /* 空 */

  453 $@70: /* 空 */

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 object_property $@70 method_or_not variable_properties
  455         | base_variable_with_function_calls

  456 variable_properties: variable_properties variable_property
  457                    | /* 空 */

  458 $@71: /* 空 */

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@71 method_or_not

  460 array_method_dereference: array_method_dereference '[' dim_offset ']'
  461                         | method '[' dim_offset ']'

  462 $@72: /* 空 */

  463 method: '(' $@72 function_call_parameter_list ')'

  464 method_or_not: method
  465              | array_method_dereference
  466              | /* 空 */

  467 variable_without_objects: reference_variable
  468                         | simple_indirect_reference reference_variable

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  470              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

  471 variable_class_name: reference_variable

  472 array_function_dereference: array_function_dereference '[' dim_offset ']'

  473 $@73: /* 空 */

  474 array_function_dereference: function_call $@73 '[' dim_offset ']'

  475 base_variable_with_function_calls: base_variable
  476                                  | array_function_dereference
  477                                  | function_call

  478 base_variable: reference_variable
  479              | simple_indirect_reference reference_variable
  480              | static_member

  481 reference_variable: reference_variable '[' dim_offset ']'
  482                   | reference_variable '{' expr '}'
  483                   | compound_variable

  484 compound_variable: "variable (T_VARIABLE)"
  485                  | '$' '{' expr '}'
  486                  | T_HENSU '{' expr '}'

  487 dim_offset: /* 空 */
  488           | expr

  489 object_property: object_dim_list

  490 $@74: /* 空 */

  491 object_property: variable_without_objects $@74

  492 object_dim_list: object_dim_list '[' dim_offset ']'
  493                | object_dim_list '{' expr '}'
  494                | variable_name

  495 variable_name: "identifier (T_STRING)"
  496              | '{' expr '}'

  497 simple_indirect_reference: '$'
  498                          | T_HENSU
  499                          | simple_indirect_reference '$'
  500                          | simple_indirect_reference T_HENSU

  501 assignment_list: assignment_list ',' assignment_list_element
  502                | assignment_list_element

  503 assignment_list_element: variable

  504 $@75: /* 空 */

  505 assignment_list_element: "list (T_LIST)" '(' $@75 assignment_list ')'
  506                        | /* 空 */

  507 array_pair_list: /* 空 */
  508                | non_empty_array_pair_list possible_comma

  509 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr
  510                          | non_empty_array_pair_list ',' expr
  511                          | expr "=> (T_DOUBLE_ARROW)" expr
  512                          | expr
  513                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  514                          | non_empty_array_pair_list ',' '&' w_variable
  515                          | expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  516                          | '&' w_variable

  517 encaps_list: encaps_list encaps_var
  518            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  519            | encaps_var
  520            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var

  521 encaps_var: "variable (T_VARIABLE)"

  522 $@76: /* 空 */

  523 encaps_var: "variable (T_VARIABLE)" '[' $@76 encaps_var_offset ']'
  524           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  525           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  526           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  527           | "{$ (T_CURLY_OPEN)" variable '}'

  528 encaps_var_offset: "identifier (T_STRING)"
  529                  | "number (T_NUM_STRING)"
  530                  | "variable (T_VARIABLE)"

  531 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  532                           | "empty (T_EMPTY)" '(' variable ')'
  533                           | "include (T_INCLUDE)" expr
  534                           | "include_once (T_INCLUDE_ONCE)" expr
  535                           | "eval (T_EVAL)" '(' expr ')'
  536                           | "require (T_REQUIRE)" expr
  537                           | "require_once (T_REQUIRE_ONCE)" expr

  538 isset_variables: variable

  539 $@77: /* 空 */

  540 isset_variables: isset_variables ',' $@77 variable

  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  542               | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"


出現位置の規則による終端

"end of file" (0) 0
'!' (33) 314
'"' (34) 436
'$' (36) 186 188 485 497 499
'%' (37) 308
'&' (38) 104 127 164 165 168 169 179 182 268 270 297 364 366 513 514
    515 516
'(' (40) 10 32 38 41 47 53 57 59 73 76 79 81 88 97 106 151 154 201
    264 331 334 352 357 359 362 368 370 372 374 376 378 380 382 400
    401 406 425 463 505 531 532 535
')' (41) 10 32 38 41 47 53 57 59 73 76 79 81 88 97 106 151 154 201
    264 331 334 352 357 359 362 368 370 372 374 376 378 380 382 400
    401 406 425 463 505 531 532 535
'*' (42) 304
'+' (43) 300 312 423
',' (44) 18 24 99 123 135 167 168 169 170 180 181 182 183 190 191 204
    215 237 238 241 243 248 363 364 442 443 444 501 509 510 513 514
    540
'-' (45) 302 313 424
'.' (46) 299
'/' (47) 306
':' (58) 34 41 129 131 133 138 139 145 148 154 160 337 339
';' (59) 10 11 16 17 32 41 53 57 60 61 62 63 64 65 66 67 68 69 72 73
    82 89 90 129 131 133 137 138 139 146 148 197 198 205 211 212 223
'<' (60) 322
'=' (61) 24 25 134 135 165 166 169 170 191 193 238 240 241 242 264
    265 268 270
'>' (62) 326
'?' (63) 337 339
'@' (64) 350
'[' (91) 252 253 353 426 460 461 472 474 481 492 523 526
']' (93) 252 253 353 426 460 461 472 474 481 492 523 526
'^' (94) 298
'`' (96) 354
'{' (123) 13 15 35 88 97 106 108 110 136 137 188 189 206 224 357 359
    482 485 486 493 496
'|' (124) 296
'}' (125) 13 15 35 88 97 106 108 110 136 137 188 189 206 224 357 359
    482 485 486 493 496 525 526 527
'~' (126) 315
error (256)
"require_once (T_REQUIRE_ONCE)" (258) 537
"require (T_REQUIRE)" (259) 536
"eval (T_EVAL)" (260) 535
"include_once (T_INCLUDE_ONCE)" (261) 534
"include (T_INCLUDE)" (262) 533
"or (T_LOGICAL_OR)" (263) 292
"xor (T_LOGICAL_XOR)" (264) 295
"and (T_LOGICAL_AND)" (265) 294
"print (T_PRINT)" (266) 355
">>= (T_SR_EQUAL)" (267) 282
"<<= (T_SL_EQUAL)" (268) 281
"^= (T_XOR_EQUAL)" (269) 280
"|= (T_OR_EQUAL)" (270) 279
"&= (T_AND_EQUAL)" (271) 278
"%= (T_MOD_EQUAL)" (272) 277
".= (T_CONCAT_EQUAL)" (273) 276
"/= (T_DIV_EQUAL)" (274) 275
"*= (T_MUL_EQUAL)" (275) 274
"-= (T_MINUS_EQUAL)" (276) 273
"+= (T_PLUS_EQUAL)" (277) 272
"|| (T_BOOLEAN_OR)" (278) 288
"&& (T_BOOLEAN_AND)" (279) 290
"!== (T_IS_NOT_IDENTICAL)" (280) 318
"=== (T_IS_IDENTICAL)" (281) 316
"!= (T_IS_NOT_EQUAL)" (282) 321
"== (T_IS_EQUAL)" (283) 320
"> (T_YORI_OOKII)" (284) 327
"< (T_YORI_TIISAI)" (285) 323
">= (T_IS_GREATER_OR_EQUAL)" (286) 328 329
"<= (T_IS_SMALLER_OR_EQUAL)" (287) 324 325
">> (T_SR)" (288) 311
"<< (T_SL)" (289) 310
"instanceof (T_INSTANCEOF)" (290) 330
"(unset) (T_UNSET_CAST)" (291) 347
"(bool) (T_BOOL_CAST)" (292) 346
"(object) (T_OBJECT_CAST)" (293) 345
"(array) (T_ARRAY_CAST)" (294) 344
"(string) (T_STRING_CAST)" (295) 343
"(double) (T_DOUBLE_CAST)" (296) 342
"(int) (T_INT_CAST)" (297) 341
"-- (T_DEC)" (298) 285 286
"++ (T_INC)" (299) 283 284
"clone (T_CLONE)" (300) 271
"new (T_NEW)" (301) 262 270
"exit (T_EXIT)" (302) 348
"if (T_IF)" (303) 38 41
"elseif (T_ELSEIF)" (304) 151 154
"else (T_ELSE)" (305) 156 160
"endif (T_ENDIF)" (306) 41
"integer number (T_LNUMBER)" (307) 407
"floating-point number (T_DNUMBER)" (308) 408
"identifier (T_STRING)" (309) 5 6 21 23 24 25 34 90 106 108 110 134
    135 201 216 218 219 241 242 429 495 524 528 541 542
"variable name (T_STRING_VARNAME)" (310) 430 526
"variable (T_VARIABLE)" (311) 88 97 163 164 165 166 167 168 169 170
    185 190 191 192 193 237 238 239 240 363 364 365 366 484 521 523
    524 530
"number (T_NUM_STRING)" (312) 529
T_INLINE_HTML (313) 71
T_CHARACTER (314)
T_BAD_CHARACTER (315)
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (316) 403
    417 518 520
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (317) 409
"echo (T_ECHO)" (318) 69
"do (T_DO)" (319) 53
"while (T_WHILE)" (320) 47 53
"endwhile (T_ENDWHILE)" (321) 148
"for (T_FOR)" (322) 57
"endfor (T_ENDFOR)" (323) 129
"foreach (T_FOREACH)" (324) 76 79
"endforeach (T_ENDFOREACH)" (325) 131
"declare (T_DECLARE)" (326) 81
"enddeclare (T_ENDDECLARE)" (327) 133
"as (T_AS)" (328) 21 23 76 79 219 220
"switch (T_SWITCH)" (329) 59
"endswitch (T_ENDSWITCH)" (330) 138 139
"case (T_CASE)" (331) 142
"default (T_DEFAULT)" (332) 144
"break (T_BREAK)" (333) 60 61
"continue (T_CONTINUE)" (334) 62 63
"goto (T_GOTO)" (335) 90
"function (T_FUNCTION)" (336) 360
"const (T_CONST)" (337) 25 242
"return (T_RETURN)" (338) 64 65 66
"try (T_TRY)" (339) 88
"catch (T_CATCH)" (340) 88 97
"throw (T_THROW)" (341) 89
"use (T_USE)" (342) 16 202 362
"insteadof (T_INSTEADOF)" (343) 213
"global (T_GLOBAL)" (344) 67
"public (T_PUBLIC)" (345) 231
"protected (T_PROTECTED)" (346) 232
"private (T_PRIVATE)" (347) 233
"final (T_FINAL)" (348) 114 236
"abstract (T_ABSTRACT)" (349) 112 235
"static (T_STATIC)" (350) 68 234 359 383
"var (T_VAR)" (351) 226
"unset (T_UNSET)" (352) 73
"isset (T_ISSET)" (353) 531
"empty (T_EMPTY)" (354) 532
"__halt_compiler (T_HALT_COMPILER)" (355) 10 32
"class (T_CLASS)" (356) 111 112 114
"trait (T_TRAIT)" (357) 113
"interface (T_INTERFACE)" (358) 117
"extends (T_EXTENDS)" (359) 116 119
"implements (T_IMPLEMENTS)" (360) 121
"-> (T_OBJECT_OPERATOR)" (361) 394 398 454 459 524
"=> (T_DOUBLE_ARROW)" (362) 125 443 445 509 511 513 515
"list (T_LIST)" (363) 264 505
"array (T_ARRAY)" (364) 172 352 425
"callable (T_CALLABLE)" (365) 173
"__CLASS__ (T_CLASS_C)" (366) 428 438
"__TRAIT__ (T_TRAIT_C)" (367) 413
"__METHOD__ (T_METHOD_C)" (368) 414
"__FUNCTION__ (T_FUNC_C)" (369) 415
"__LINE__ (T_LINE)" (370) 410
"__FILE__ (T_FILE)" (371) 411
"comment (T_COMMENT)" (372)
"doc comment (T_DOC_COMMENT)" (373)
"open tag (T_OPEN_TAG)" (374)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (375)
"close tag (T_CLOSE_TAG)" (376)
"whitespace (T_WHITESPACE)" (377)
"heredoc start (T_START_HEREDOC)" (378) 417 418 437
"heredoc end (T_END_HEREDOC)" (379) 417 418 437
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (380) 525 526
"{$ (T_CURLY_OPEN)" (381) 527
":: (T_PAAMAYIM_NEKUDOTAYIM)" (382) 218 374 376 378 380 429 469 470
    541 542
"namespace (T_NAMESPACE)" (383) 11 13 15 370 385 388 421 433
"__NAMESPACE__ (T_NS_C)" (384) 416
"__DIR__ (T_DIR)" (385) 412
"\\ (T_NS_SEPARATOR)" (386) 6 22 23 370 372 385 386 388 389 421 422
    433 434
"T_WO" (387) 309
"%" (388) 309
"/" (389) 307
"*" (390) 305
"-" (391) 303
"+" (392) 301
"T_GA" (393) 317 319 323 325 327 329
"NE" (394) 319
"EQ" (395) 317
T_OPEN_OUTPUT (396) 70
T_CLOSE_OUTPUT (397) 70
T_JA_IF (398) 44
T_JA_ELSE (399) 158
T_OWARI (400) 44
T_NARABA (401) 44
"T_HA" (402) 266
T_DESU (403) 266
"T_NI" (404) 267
T_DAINYU (405) 267
T_KURIKAESI (406) 50
T_AIDA (407) 50
T_HENSU (408) 187 189 486 498 500


出現位置の規則による非終端

$accept (182)
    左辺: 0
start (183)
    左辺: 1, 右辺: 0
top_statement_list (184)
    左辺: 3 4, 右辺: 1 3 13 15
$@1 (185)
    左辺: 2, 右辺: 3
namespace_name (186)
    左辺: 5 6, 右辺: 6 11 13 20 21 22 23 368 370 372 384 385 386
    387 388 389 420 421 422 432 433 434
top_statement (187)
    左辺: 7 8 9 10 11 13 15 16 17, 右辺: 3
$@2 (188)
    左辺: 12, 右辺: 13
$@3 (189)
    左辺: 14, 右辺: 15
use_declarations (190)
    左辺: 18 19, 右辺: 16 18
use_declaration (191)
    左辺: 20 21 22 23, 右辺: 18 19
constant_declaration (192)
    左辺: 24 25, 右辺: 17 24
inner_statement_list (193)
    左辺: 27 28, 右辺: 27 35 41 44 88 97 106 129 131 133 142 144
    148 154 158 160 224 357 359
$@4 (194)
    左辺: 26, 右辺: 27
inner_statement (195)
    左辺: 29 30 31 32, 右辺: 27
statement (196)
    左辺: 33 34, 右辺: 7 29 38 53 128 130 132 147 151 156
unticked_statement (197)
    左辺: 35 38 41 44 47 50 53 57 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 76 79 81 82 88 89 90, 右辺: 33
$@5 (198)
    左辺: 36, 右辺: 38
$@6 (199)
    左辺: 37, 右辺: 38
$@7 (200)
    左辺: 39, 右辺: 41
$@8 (201)
    左辺: 40, 右辺: 41
$@9 (202)
    左辺: 42, 右辺: 44
$@10 (203)
    左辺: 43, 右辺: 44
$@11 (204)
    左辺: 45, 右辺: 47
$@12 (205)
    左辺: 46, 右辺: 47
$@13 (206)
    左辺: 48, 右辺: 50
$@14 (207)
    左辺: 49, 右辺: 50
$@15 (208)
    左辺: 51, 右辺: 53
$@16 (209)
    左辺: 52, 右辺: 53
$@17 (210)
    左辺: 54, 右辺: 57
$@18 (211)
    左辺: 55, 右辺: 57
$@19 (212)
    左辺: 56, 右辺: 57
$@20 (213)
    左辺: 58, 右辺: 59
$@21 (214)
    左辺: 74, 右辺: 76
$@22 (215)
    左辺: 75, 右辺: 76
$@23 (216)
    左辺: 77, 右辺: 79
$@24 (217)
    左辺: 78, 右辺: 79
$@25 (218)
    左辺: 80, 右辺: 81
$@26 (219)
    左辺: 83, 右辺: 88
$@27 (220)
    左辺: 84, 右辺: 88
$@28 (221)
    左辺: 85, 右辺: 88
$@29 (222)
    左辺: 86, 右辺: 88
$@30 (223)
    左辺: 87, 右辺: 88
additional_catches (224)
    左辺: 91 92, 右辺: 88
non_empty_additional_catches (225)
    左辺: 93 94, 右辺: 91 94
additional_catch (226)
    左辺: 97, 右辺: 93 94
@31 (227)
    左辺: 95, 右辺: 97
$@32 (228)
    左辺: 96, 右辺: 97
unset_variables (229)
    左辺: 98 99, 右辺: 73 99
unset_variable (230)
    左辺: 100, 右辺: 98 99
function_declaration_statement (231)
    左辺: 101, 右辺: 8 30
class_declaration_statement (232)
    左辺: 102, 右辺: 9 31
is_reference (233)
    左辺: 103 104, 右辺: 106 201 357 359
unticked_function_declaration_statement (234)
    左辺: 106, 右辺: 101
$@33 (235)
    左辺: 105, 右辺: 106
unticked_class_declaration_statement (236)
    左辺: 108 110, 右辺: 102
$@34 (237)
    左辺: 107, 右辺: 108
$@35 (238)
    左辺: 109, 右辺: 110
class_entry_type (239)
    左辺: 111 112 113 114, 右辺: 108
extends_from (240)
    左辺: 115 116, 右辺: 108
interface_entry (241)
    左辺: 117, 右辺: 110
interface_extends_list (242)
    左辺: 118 119, 右辺: 110
implements_list (243)
    左辺: 120 121, 右辺: 108
interface_list (244)
    左辺: 122 123, 右辺: 119 121 123
foreach_optional_arg (245)
    左辺: 124 125, 右辺: 76 79
foreach_variable (246)
    左辺: 126 127, 右辺: 76 125
for_statement (247)
    左辺: 128 129, 右辺: 57
foreach_statement (248)
    左辺: 130 131, 右辺: 76 79
declare_statement (249)
    左辺: 132 133, 右辺: 81
declare_list (250)
    左辺: 134 135, 右辺: 81 135
switch_case_list (251)
    左辺: 136 137 138 139, 右辺: 59
case_list (252)
    左辺: 140 142 144, 右辺: 136 137 138 139 142 144
$@36 (253)
    左辺: 141, 右辺: 142
$@37 (254)
    左辺: 143, 右辺: 144
case_separator (255)
    左辺: 145 146, 右辺: 142 144
while_statement (256)
    左辺: 147 148, 右辺: 47 50
elseif_list (257)
    左辺: 149 151, 右辺: 38 151
$@38 (258)
    左辺: 150, 右辺: 151
new_elseif_list (259)
    左辺: 152 154, 右辺: 41 154
$@39 (260)
    左辺: 153, 右辺: 154
else_single (261)
    左辺: 155 156, 右辺: 38
ja_else_single (262)
    左辺: 157 158, 右辺: 44
new_else_single (263)
    左辺: 159 160, 右辺: 41
parameter_list (264)
    左辺: 161 162, 右辺: 106 201 357 359
non_empty_parameter_list (265)
    左辺: 163 164 165 166 167 168 169 170, 右辺: 161 167 168 169
    170
optional_class_type (266)
    左辺: 171 172 173 174, 右辺: 163 164 165 166 167 168 169 170
function_call_parameter_list (267)
    左辺: 175 176, 右辺: 368 370 372 374 376 378 380 382 406 463
non_empty_function_call_parameter_list (268)
    左辺: 177 178 179 180 181 182, 右辺: 175 180 181 182
global_var_list (269)
    左辺: 183 184, 右辺: 67 183
global_var (270)
    左辺: 185 186 187 188 189, 右辺: 183 184
static_var_list (271)
    左辺: 190 191 192 193, 右辺: 68 190 191
class_statement_list (272)
    左辺: 194 195, 右辺: 108 110 194
class_statement (273)
    左辺: 197 198 199 201, 右辺: 194
$@40 (274)
    左辺: 196, 右辺: 197
$@41 (275)
    左辺: 200, 右辺: 201
trait_use_statement (276)
    左辺: 202, 右辺: 199
trait_list (277)
    左辺: 203 204, 右辺: 202 204
trait_adaptations (278)
    左辺: 205 206, 右辺: 202
trait_adaptation_list (279)
    左辺: 207 208, 右辺: 206
non_empty_trait_adaptation_list (280)
    左辺: 209 210, 右辺: 208 210
trait_adaptation_statement (281)
    左辺: 211 212, 右辺: 209 210
trait_precedence (282)
    左辺: 213, 右辺: 211
trait_reference_list (283)
    左辺: 214 215, 右辺: 213 215
trait_method_reference (284)
    左辺: 216 217, 右辺: 219 220
trait_method_reference_fully_qualified (285)
    左辺: 218, 右辺: 213 217
trait_alias (286)
    左辺: 219 220, 右辺: 212
trait_modifiers (287)
    左辺: 221 222, 右辺: 219
method_body (288)
    左辺: 223 224, 右辺: 201
variable_modifiers (289)
    左辺: 225 226, 右辺: 197
method_modifiers (290)
    左辺: 227 228, 右辺: 201
non_empty_member_modifiers (291)
    左辺: 229 230, 右辺: 225 228 230
member_modifier (292)
    左辺: 231 232 233 234 235 236, 右辺: 220 222 229 230
class_variable_declaration (293)
    左辺: 237 238 239 240, 右辺: 197 237 238
class_constant_declaration (294)
    左辺: 241 242, 右辺: 198 241
echo_expr_list (295)
    左辺: 243 244, 右辺: 69 70 243
for_expr (296)
    左辺: 245 246, 右辺: 57
non_empty_for_expr (297)
    左辺: 248 249, 右辺: 246 248
$@42 (298)
    左辺: 247, 右辺: 248
chaining_method_or_property (299)
    左辺: 250 251, 右辺: 250 255 257
chaining_dereference (300)
    左辺: 252 253, 右辺: 252 255 256
chaining_instance_call (301)
    左辺: 255 256 257, 右辺: 260
$@43 (302)
    左辺: 254, 右辺: 255
instance_call (303)
    左辺: 258 260, 右辺: 334
$@44 (304)
    左辺: 259, 右辺: 260
new_expr (305)
    左辺: 262, 右辺: 332 334
$@45 (306)
    左辺: 261, 右辺: 262
expr_without_variable (307)
    左辺: 264 265 266 267 268 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 288 290 292 294 295 296 297 298
    299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314
    315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330
    331 332 334 337 339 340 341 342 343 344 345 346 347 348 350 351
    352 353 354 355 357 359, 右辺: 65 79 177 180 448
$@46 (308)
    左辺: 263, 右辺: 264
$@47 (309)
    左辺: 269, 右辺: 270
$@48 (310)
    左辺: 287, 右辺: 288
$@49 (311)
    左辺: 289, 右辺: 290
$@50 (312)
    左辺: 291, 右辺: 292
$@51 (313)
    左辺: 293, 右辺: 294
@52 (314)
    左辺: 333, 右辺: 334
$@53 (315)
    左辺: 335, 右辺: 337
$@54 (316)
    左辺: 336, 右辺: 337
$@55 (317)
    左辺: 338, 右辺: 339
$@56 (318)
    左辺: 349, 右辺: 350
@57 (319)
    左辺: 356, 右辺: 357
@58 (320)
    左辺: 358, 右辺: 359
function (321)
    左辺: 360, 右辺: 106 201 357 359
lexical_vars (322)
    左辺: 361 362, 右辺: 357 359
lexical_var_list (323)
    左辺: 363 364 365 366, 右辺: 362 363 364
function_call (324)
    左辺: 368 370 372 374 376 378 380 382, 右辺: 474 477
$@59 (325)
    左辺: 367, 右辺: 368
$@60 (326)
    左辺: 369, 右辺: 370
$@61 (327)
    左辺: 371, 右辺: 372
$@62 (328)
    左辺: 373, 右辺: 374
$@63 (329)
    左辺: 375, 右辺: 376
$@64 (330)
    左辺: 377, 右辺: 378
$@65 (331)
    左辺: 379, 右辺: 380
$@66 (332)
    左辺: 381, 右辺: 382
class_name (333)
    左辺: 383 384 385 386, 右辺: 374 376 390 429 469 541
fully_qualified_class_name (334)
    左辺: 387 388 389, 右辺: 88 97 116 122 123 174 203 204 214
    215 218
class_name_reference (335)
    左辺: 390 391, 右辺: 262 270 330
dynamic_class_name_reference (336)
    左辺: 394 395, 右辺: 391
$@67 (337)
    左辺: 392, 右辺: 394
$@68 (338)
    左辺: 393, 右辺: 394
dynamic_class_name_variable_properties (339)
    左辺: 396 397, 右辺: 394 396
dynamic_class_name_variable_property (340)
    左辺: 398, 右辺: 396
exit_expr (341)
    左辺: 399 400 401, 右辺: 348
backticks_expr (342)
    左辺: 402 403 404, 右辺: 354
ctor_arguments (343)
    左辺: 405 406, 右辺: 262 270
common_scalar (344)
    左辺: 407 408 409 410 411 412 413 414 415 416 417 418, 右辺:
    419 435
static_scalar (345)
    左辺: 419 420 421 422 423 424 425 426 427 428, 右辺: 24 25
    134 135 165 166 169 170 191 193 238 240 241 242 423 424 443 444
    445 446
static_class_constant (346)
    左辺: 429, 右辺: 427
scalar (347)
    左辺: 430 431 432 433 434 435 436 437 438, 右辺: 351
static_array_pair_list (348)
    左辺: 439 440, 右辺: 425 426
possible_comma (349)
    左辺: 441 442, 右辺: 440 508
non_empty_static_array_pair_list (350)
    左辺: 443 444 445 446, 右辺: 440 443 444
expr (351)
    左辺: 447 448, 右辺: 38 41 44 47 50 53 59 61 63 72 89 142 151
    154 188 189 243 244 248 249 264 265 266 267 271 272 273 274 275
    276 277 278 279 280 281 282 288 290 292 294 295 296 297 298 299
    300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315
    316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331
    337 339 341 342 343 344 345 346 347 350 355 401 482 485 486 488
    493 496 509 510 511 512 513 515 525 526 533 534 535 536 537
r_variable (352)
    左辺: 449, 右辺: 186 187 447
w_variable (353)
    左辺: 450, 右辺: 179 182 513 514 515 516
rw_variable (354)
    左辺: 451, 右辺: 283 284 285 286
variable (355)
    左辺: 454 455, 右辺: 66 76 79 100 126 127 178 181 265 266 267
    268 270 272 273 274 275 276 277 278 279 280 281 282 449 450 451
    503 527 532 538 540
$@69 (356)
    左辺: 452, 右辺: 454
$@70 (357)
    左辺: 453, 右辺: 454
variable_properties (358)
    左辺: 456 457, 右辺: 454 456
variable_property (359)
    左辺: 459, 右辺: 250 251 456
$@71 (360)
    左辺: 458, 右辺: 459
array_method_dereference (361)
    左辺: 460 461, 右辺: 460 465
method (362)
    左辺: 463, 右辺: 461 464
$@72 (363)
    左辺: 462, 右辺: 463
method_or_not (364)
    左辺: 464 465 466, 右辺: 454 459
variable_without_objects (365)
    左辺: 467 468, 右辺: 376 380 382 469 470 491
static_member (366)
    左辺: 469 470, 右辺: 480
variable_class_name (367)
    左辺: 471, 右辺: 378 380 470 542
array_function_dereference (368)
    左辺: 472 474, 右辺: 472 476
$@73 (369)
    左辺: 473, 右辺: 474
base_variable_with_function_calls (370)
    左辺: 475 476 477, 右辺: 454 455
base_variable (371)
    左辺: 478 479 480, 右辺: 394 395 475
reference_variable (372)
    左辺: 481 482 483, 右辺: 467 468 471 478 479 481 482
compound_variable (373)
    左辺: 484 485 486, 右辺: 483
dim_offset (374)
    左辺: 487 488, 右辺: 252 253 460 461 472 474 481 492
object_property (375)
    左辺: 489 491, 右辺: 394 398 454 459
$@74 (376)
    左辺: 490, 右辺: 491
object_dim_list (377)
    左辺: 492 493 494, 右辺: 489 492 493
variable_name (378)
    左辺: 495 496, 右辺: 374 378 494
simple_indirect_reference (379)
    左辺: 497 498 499 500, 右辺: 468 479 499 500
assignment_list (380)
    左辺: 501 502, 右辺: 264 501 505
assignment_list_element (381)
    左辺: 503 505 506, 右辺: 501 502
$@75 (382)
    左辺: 504, 右辺: 505
array_pair_list (383)
    左辺: 507 508, 右辺: 352 353
non_empty_array_pair_list (384)
    左辺: 509 510 511 512 513 514 515 516, 右辺: 508 509 510 513
    514
encaps_list (385)
    左辺: 517 518 519 520, 右辺: 404 436 437 517 518
encaps_var (386)
    左辺: 521 523 524 525 526 527, 右辺: 517 519 520
$@76 (387)
    左辺: 522, 右辺: 523
encaps_var_offset (388)
    左辺: 528 529 530, 右辺: 523
internal_functions_in_yacc (389)
    左辺: 531 532 533 534 535 536 537, 右辺: 340
isset_variables (390)
    左辺: 538 540, 右辺: 531 540
$@77 (391)
    左辺: 539, 右辺: 540
class_constant (392)
    左辺: 541 542, 右辺: 431


状態 0

    0 $accept: . start "end of file"

    $default  reduce using rule 4 (top_statement_list)

    start               go to state 1
    top_statement_list  go to state 2


状態 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


状態 2

    1 start: top_statement_list .
    3 top_statement_list: top_statement_list . $@1 top_statement

    "end of file"  reduce using rule 1 (start)
    $default       reduce using rule 2 ($@1)

    $@1  go to state 4


状態 3

    0 $accept: start "end of file" .

    $default  accept


状態 4

    3 top_statement_list: top_statement_list $@1 . top_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "const (T_CONST)"                             shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "use (T_USE)"                                 shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 53
    "final (T_FINAL)"                             shift, and go to state 54
    "abstract (T_ABSTRACT)"                       shift, and go to state 55
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 73
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                           go to state 87
    top_statement                            go to state 88
    constant_declaration                     go to state 89
    statement                                go to state 90
    unticked_statement                       go to state 91
    function_declaration_statement           go to state 92
    class_declaration_statement              go to state 93
    unticked_function_declaration_statement  go to state 94
    unticked_class_declaration_statement     go to state 95
    class_entry_type                         go to state 96
    interface_entry                          go to state 97
    new_expr                                 go to state 98
    expr_without_variable                    go to state 99
    function                                 go to state 100
    function_call                            go to state 101
    class_name                               go to state 102
    common_scalar                            go to state 103
    scalar                                   go to state 104
    expr                                     go to state 105
    r_variable                               go to state 106
    rw_variable                              go to state 107
    variable                                 go to state 108
    variable_without_objects                 go to state 109
    static_member                            go to state 110
    variable_class_name                      go to state 111
    array_function_dereference               go to state 112
    base_variable_with_function_calls        go to state 113
    base_variable                            go to state 114
    reference_variable                       go to state 115
    compound_variable                        go to state 116
    simple_indirect_reference                go to state 117
    internal_functions_in_yacc               go to state 118
    class_constant                           go to state 119


状態 5

  537 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 124
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 6

  536 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 125
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 7

  535 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  shift, and go to state 126


状態 8

  534 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 127
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 9

  533 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 128
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 10

  355 expr_without_variable: "print (T_PRINT)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 129
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 11

  312 expr_without_variable: '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 130
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 12

  313 expr_without_variable: '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 131
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 13

  314 expr_without_variable: '!' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 132
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 14

  315 expr_without_variable: '~' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 133
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 15

  350 expr_without_variable: '@' . $@56 expr

    $default  reduce using rule 349 ($@56)

    $@56  go to state 134


状態 16

  347 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 135
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 17

  346 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 136
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 18

  345 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 137
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 19

  344 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 138
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 20

  343 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 139
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 21

  342 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 140
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 22

  341 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 141
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 23

  286 expr_without_variable: "-- (T_DEC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    rw_variable                        go to state 147
    variable                           go to state 148
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 24

  284 expr_without_variable: "++ (T_INC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    rw_variable                        go to state 150
    variable                           go to state 148
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 25

  353 expr_without_variable: '[' . array_pair_list ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 151
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 507 (array_pair_list)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 152
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    array_pair_list                    go to state 153
    non_empty_array_pair_list          go to state 154
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 26

  271 expr_without_variable: "clone (T_CLONE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 155
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 27

  262 new_expr: "new (T_NEW)" . class_name_reference $@45 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 156
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 157
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                go to state 158
    class_name                    go to state 159
    class_name_reference          go to state 160
    dynamic_class_name_reference  go to state 161
    static_member                 go to state 110
    variable_class_name           go to state 162
    base_variable                 go to state 163
    reference_variable            go to state 164
    compound_variable             go to state 116
    simple_indirect_reference     go to state 165


状態 28

  348 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  shift, and go to state 166

    $default  reduce using rule 399 (exit_expr)

    exit_expr  go to state 167


状態 29

   38 unticked_statement: "if (T_IF)" . '(' expr ')' $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" . '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    '('  shift, and go to state 168


状態 30

  407 common_scalar: "integer number (T_LNUMBER)" .

    $default  reduce using rule 407 (common_scalar)


状態 31

  408 common_scalar: "floating-point number (T_DNUMBER)" .

    $default  reduce using rule 408 (common_scalar)


状態 32

    5 namespace_name: "identifier (T_STRING)" .
   34 statement: "identifier (T_STRING)" . ':'

    ':'  shift, and go to state 169

    $default  reduce using rule 5 (namespace_name)


状態 33

  430 scalar: "variable name (T_STRING_VARNAME)" .

    $default  reduce using rule 430 (scalar)


状態 34

  484 compound_variable: "variable (T_VARIABLE)" .

    $default  reduce using rule 484 (compound_variable)


状態 35

   71 unticked_statement: T_INLINE_HTML .

    $default  reduce using rule 71 (unticked_statement)


状態 36

  409 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 409 (common_scalar)


状態 37

   69 unticked_statement: "echo (T_ECHO)" . echo_expr_list ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    echo_expr_list                     go to state 170
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 171
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 38

   53 unticked_statement: "do (T_DO)" . $@15 statement "while (T_WHILE)" '(' $@16 expr ')' ';'

    $default  reduce using rule 51 ($@15)

    $@15  go to state 172


状態 39

   47 unticked_statement: "while (T_WHILE)" . '(' $@11 expr ')' $@12 while_statement

    '('  shift, and go to state 173


状態 40

   57 unticked_statement: "for (T_FOR)" . '(' for_expr ';' $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement

    '('  shift, and go to state 174


状態 41

   76 unticked_statement: "foreach (T_FOREACH)" . '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement
   79                   | "foreach (T_FOREACH)" . '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 foreach_statement

    '('  shift, and go to state 175


状態 42

   81 unticked_statement: "declare (T_DECLARE)" . $@25 '(' declare_list ')' declare_statement

    $default  reduce using rule 80 ($@25)

    $@25  go to state 176


状態 43

   59 unticked_statement: "switch (T_SWITCH)" . '(' expr ')' $@20 switch_case_list

    '('  shift, and go to state 177


状態 44

   60 unticked_statement: "break (T_BREAK)" . ';'
   61                   | "break (T_BREAK)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 178
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 179
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 45

   62 unticked_statement: "continue (T_CONTINUE)" . ';'
   63                   | "continue (T_CONTINUE)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 180
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 181
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 46

   90 unticked_statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  shift, and go to state 182


状態 47

  360 function: "function (T_FUNCTION)" .

    $default  reduce using rule 360 (function)


状態 48

   25 constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 183


状態 49

   64 unticked_statement: "return (T_RETURN)" . ';'
   65                   | "return (T_RETURN)" . expr_without_variable ';'
   66                   | "return (T_RETURN)" . variable ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 184
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 185
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 186
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 187
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 50

   88 unticked_statement: "try (T_TRY)" . $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 83 ($@26)

    $@26  go to state 188


状態 51

   89 unticked_statement: "throw (T_THROW)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 189
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 52

   16 top_statement: "use (T_USE)" . use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 120
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 190

    namespace_name    go to state 191
    use_declarations  go to state 192
    use_declaration   go to state 193


状態 53

   67 unticked_statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 194
    T_HENSU                  shift, and go to state 195
    '$'                      shift, and go to state 196

    global_var_list  go to state 197
    global_var       go to state 198


状態 54

  114 class_entry_type: "final (T_FINAL)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 199


状態 55

  112 class_entry_type: "abstract (T_ABSTRACT)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 200


状態 56

   68 unticked_statement: "static (T_STATIC)" . static_var_list ';'
  359 expr_without_variable: "static (T_STATIC)" . function is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'
  383 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  shift, and go to state 201
    "function (T_FUNCTION)"  shift, and go to state 47

    $default  reduce using rule 383 (class_name)

    static_var_list  go to state 202
    function         go to state 203


状態 57

   73 unticked_statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  shift, and go to state 204


状態 58

  531 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  shift, and go to state 205


状態 59

  532 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' variable ')'

    '('  shift, and go to state 206


状態 60

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 207


状態 61

  111 class_entry_type: "class (T_CLASS)" .

    $default  reduce using rule 111 (class_entry_type)


状態 62

  113 class_entry_type: "trait (T_TRAIT)" .

    $default  reduce using rule 113 (class_entry_type)


状態 63

  117 interface_entry: "interface (T_INTERFACE)" .

    $default  reduce using rule 117 (interface_entry)


状態 64

  264 expr_without_variable: "list (T_LIST)" . '(' $@46 assignment_list ')' '=' expr

    '('  shift, and go to state 208


状態 65

  352 expr_without_variable: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 209


状態 66

  438 scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 438 (scalar)


状態 67

  413 common_scalar: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 413 (common_scalar)


状態 68

  414 common_scalar: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 414 (common_scalar)


状態 69

  415 common_scalar: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 415 (common_scalar)


状態 70

  410 common_scalar: "__LINE__ (T_LINE)" .

    $default  reduce using rule 410 (common_scalar)


状態 71

  411 common_scalar: "__FILE__ (T_FILE)" .

    $default  reduce using rule 411 (common_scalar)


状態 72

  417 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  418              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  437 scalar: "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 211
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 212
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214

    encaps_list  go to state 215
    encaps_var   go to state 216


状態 73

   11 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   13              | "namespace (T_NAMESPACE)" . namespace_name '{' $@2 top_statement_list '}'
   15              | "namespace (T_NAMESPACE)" . '{' $@3 top_statement_list '}'
  370 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  433 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "identifier (T_STRING)"  shift, and go to state 120
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 217
    '{'                      shift, and go to state 218

    namespace_name  go to state 219


状態 74

  416 common_scalar: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 416 (common_scalar)


状態 75

  412 common_scalar: "__DIR__ (T_DIR)" .

    $default  reduce using rule 412 (common_scalar)


状態 76

  372 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name '(' $@61 function_call_parameter_list ')'
  386 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  434 scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 220


状態 77

   70 unticked_statement: T_OPEN_OUTPUT . echo_expr_list T_CLOSE_OUTPUT

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    echo_expr_list                     go to state 221
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 171
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 78

   44 unticked_statement: T_JA_IF . expr T_NARABA $@9 inner_statement_list $@10 ja_else_single T_OWARI

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 222
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 79

   50 unticked_statement: T_KURIKAESI . $@13 expr T_AIDA $@14 while_statement

    $default  reduce using rule 48 ($@13)

    $@13  go to state 223


状態 80

  486 compound_variable: T_HENSU . '{' expr '}'
  498 simple_indirect_reference: T_HENSU .

    '{'  shift, and go to state 224

    $default  reduce using rule 498 (simple_indirect_reference)


状態 81

  331 expr_without_variable: '(' . expr ')'
  334                      | '(' . new_expr ')' @52 instance_call

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 225
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 226
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 82

   82 unticked_statement: ';' .

    $default  reduce using rule 82 (unticked_statement)


状態 83

   35 unticked_statement: '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 227


状態 84

  485 compound_variable: '$' . '{' expr '}'
  497 simple_indirect_reference: '$' .

    '{'  shift, and go to state 228

    $default  reduce using rule 497 (simple_indirect_reference)


状態 85

  354 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 229
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214

    $default  reduce using rule 402 (backticks_expr)

    backticks_expr  go to state 230
    encaps_list     go to state 231
    encaps_var      go to state 216


状態 86

  436 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 232
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214

    encaps_list  go to state 233
    encaps_var   go to state 216


状態 87

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: namespace_name . '(' $@59 function_call_parameter_list ')'
  384 class_name: namespace_name .
  432 scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 235

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 384 (class_name)
    $default                       reduce using rule 432 (scalar)


状態 88

    3 top_statement_list: top_statement_list $@1 top_statement .

    $default  reduce using rule 3 (top_statement_list)


状態 89

   17 top_statement: constant_declaration . ';'
   24 constant_declaration: constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 236
    ';'  shift, and go to state 237


状態 90

    7 top_statement: statement .

    $default  reduce using rule 7 (top_statement)


状態 91

   33 statement: unticked_statement .

    $default  reduce using rule 33 (statement)


状態 92

    8 top_statement: function_declaration_statement .

    $default  reduce using rule 8 (top_statement)


状態 93

    9 top_statement: class_declaration_statement .

    $default  reduce using rule 9 (top_statement)


状態 94

  101 function_declaration_statement: unticked_function_declaration_statement .

    $default  reduce using rule 101 (function_declaration_statement)


状態 95

  102 class_declaration_statement: unticked_class_declaration_statement .

    $default  reduce using rule 102 (class_declaration_statement)


状態 96

  108 unticked_class_declaration_statement: class_entry_type . "identifier (T_STRING)" extends_from $@34 implements_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 238


状態 97

  110 unticked_class_declaration_statement: interface_entry . "identifier (T_STRING)" $@35 interface_extends_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 239


状態 98

  332 expr_without_variable: new_expr .

    $default  reduce using rule 332 (expr_without_variable)


状態 99

  448 expr: expr_without_variable .

    $default  reduce using rule 448 (expr)


状態 100

  106 unticked_function_declaration_statement: function . is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' inner_statement_list '}'
  357 expr_without_variable: function . is_reference '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 240

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 241


状態 101

  474 array_function_dereference: function_call . $@73 '[' dim_offset ']'
  477 base_variable_with_function_calls: function_call .

    '['       reduce using rule 473 ($@73)
    $default  reduce using rule 477 (base_variable_with_function_calls)

    $@73  go to state 242


状態 102

  374 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 function_call_parameter_list ')'
  376              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 function_call_parameter_list ')'
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  541 class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 243


状態 103

  435 scalar: common_scalar .

    $default  reduce using rule 435 (scalar)


状態 104

  351 expr_without_variable: scalar .

    $default  reduce using rule 351 (expr_without_variable)


状態 105

   72 unticked_statement: expr . ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ';'                           shift, and go to state 276


状態 106

  447 expr: r_variable .

    $default  reduce using rule 447 (expr)


状態 107

  283 expr_without_variable: rw_variable . "++ (T_INC)"
  285                      | rw_variable . "-- (T_DEC)"

    "-- (T_DEC)"  shift, and go to state 277
    "++ (T_INC)"  shift, and go to state 278


状態 108

  265 expr_without_variable: variable . '=' expr
  266                      | variable . "T_HA" expr T_DESU
  267                      | variable . "T_NI" expr T_DAINYU
  268                      | variable . '=' '&' variable
  270                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  272                      | variable . "+= (T_PLUS_EQUAL)" expr
  273                      | variable . "-= (T_MINUS_EQUAL)" expr
  274                      | variable . "*= (T_MUL_EQUAL)" expr
  275                      | variable . "/= (T_DIV_EQUAL)" expr
  276                      | variable . ".= (T_CONCAT_EQUAL)" expr
  277                      | variable . "%= (T_MOD_EQUAL)" expr
  278                      | variable . "&= (T_AND_EQUAL)" expr
  279                      | variable . "|= (T_OR_EQUAL)" expr
  280                      | variable . "^= (T_XOR_EQUAL)" expr
  281                      | variable . "<<= (T_SL_EQUAL)" expr
  282                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 279
    ">>= (T_SR_EQUAL)"     shift, and go to state 280
    "<<= (T_SL_EQUAL)"     shift, and go to state 281
    "^= (T_XOR_EQUAL)"     shift, and go to state 282
    "|= (T_OR_EQUAL)"      shift, and go to state 283
    "&= (T_AND_EQUAL)"     shift, and go to state 284
    "%= (T_MOD_EQUAL)"     shift, and go to state 285
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 286
    "/= (T_DIV_EQUAL)"     shift, and go to state 287
    "*= (T_MUL_EQUAL)"     shift, and go to state 288
    "-= (T_MINUS_EQUAL)"   shift, and go to state 289
    "+= (T_PLUS_EQUAL)"    shift, and go to state 290
    "T_HA"                 shift, and go to state 291
    "T_NI"                 shift, and go to state 292

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


状態 109

  382 function_call: variable_without_objects . '(' $@66 function_call_parameter_list ')'

    '('  shift, and go to state 293


状態 110

  480 base_variable: static_member .

    $default  reduce using rule 480 (base_variable)


状態 111

  378 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 function_call_parameter_list ')'
  380              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 function_call_parameter_list ')'
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  542 class_constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 294


状態 112

  472 array_function_dereference: array_function_dereference . '[' dim_offset ']'
  476 base_variable_with_function_calls: array_function_dereference .

    '['  shift, and go to state 295

    $default  reduce using rule 476 (base_variable_with_function_calls)


状態 113

  454 variable: base_variable_with_function_calls . "-> (T_OBJECT_OPERATOR)" $@69 object_property $@70 method_or_not variable_properties
  455         | base_variable_with_function_calls .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 296

    $default  reduce using rule 455 (variable)


状態 114

  475 base_variable_with_function_calls: base_variable .

    $default  reduce using rule 475 (base_variable_with_function_calls)


状態 115

  467 variable_without_objects: reference_variable .
  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 471 (variable_class_name)
    '('                            reduce using rule 467 (variable_without_objects)
    $default                       reduce using rule 478 (base_variable)


状態 116

  483 reference_variable: compound_variable .

    $default  reduce using rule 483 (reference_variable)


状態 117

  468 variable_without_objects: simple_indirect_reference . reference_variable
  479 base_variable: simple_indirect_reference . reference_variable
  499 simple_indirect_reference: simple_indirect_reference . '$'
  500                          | simple_indirect_reference . T_HENSU

    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 299
    '$'                      shift, and go to state 300

    reference_variable  go to state 301
    compound_variable   go to state 116


状態 118

  340 expr_without_variable: internal_functions_in_yacc .

    $default  reduce using rule 340 (expr_without_variable)


状態 119

  431 scalar: class_constant .

    $default  reduce using rule 431 (scalar)


状態 120

    5 namespace_name: "identifier (T_STRING)" .

    $default  reduce using rule 5 (namespace_name)


状態 121

  359 expr_without_variable: "static (T_STATIC)" . function is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'
  383 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  shift, and go to state 47

    $default  reduce using rule 383 (class_name)

    function  go to state 203


状態 122

  370 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  433 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 217


状態 123

  357 expr_without_variable: function . is_reference '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 240

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 302


状態 124

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  537 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 537 (internal_functions_in_yacc)


状態 125

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  536 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 536 (internal_functions_in_yacc)


状態 126

  535 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 303
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 127

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  534 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 534 (internal_functions_in_yacc)


状態 128

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  533 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 533 (internal_functions_in_yacc)


状態 129

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  355                      | "print (T_PRINT)" expr .

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 355 (expr_without_variable)


状態 130

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  312                      | '+' expr .
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 312 (expr_without_variable)


状態 131

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  313                      | '-' expr .
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 313 (expr_without_variable)


状態 132

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  314                      | '!' expr .
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 314 (expr_without_variable)


状態 133

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  315                      | '~' expr .
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 315 (expr_without_variable)


状態 134

  350 expr_without_variable: '@' $@56 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 304
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 135

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  347                      | "(unset) (T_UNSET_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 347 (expr_without_variable)


状態 136

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  346                      | "(bool) (T_BOOL_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 346 (expr_without_variable)


状態 137

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  345                      | "(object) (T_OBJECT_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 345 (expr_without_variable)


状態 138

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  344                      | "(array) (T_ARRAY_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 344 (expr_without_variable)


状態 139

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  343                      | "(string) (T_STRING_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 343 (expr_without_variable)


状態 140

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  342                      | "(double) (T_DOUBLE_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 342 (expr_without_variable)


状態 141

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  341                      | "(int) (T_INT_CAST)" expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 341 (expr_without_variable)


状態 142

  383 class_name: "static (T_STATIC)" .

    $default  reduce using rule 383 (class_name)


状態 143

  370 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 305


状態 144

  372 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name '(' $@61 function_call_parameter_list ')'
  386 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 306


状態 145

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: namespace_name . '(' $@59 function_call_parameter_list ')'
  384 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 235

    $default  reduce using rule 384 (class_name)


状態 146

  374 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 function_call_parameter_list ')'
  376              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 function_call_parameter_list ')'
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 307


状態 147

  286 expr_without_variable: "-- (T_DEC)" rw_variable .

    $default  reduce using rule 286 (expr_without_variable)


状態 148

  451 rw_variable: variable .

    $default  reduce using rule 451 (rw_variable)


状態 149

  378 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 function_call_parameter_list ')'
  380              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 function_call_parameter_list ')'
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 308


状態 150

  284 expr_without_variable: "++ (T_INC)" rw_variable .

    $default  reduce using rule 284 (expr_without_variable)


状態 151

  516 non_empty_array_pair_list: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 309
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 152

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  511 non_empty_array_pair_list: expr . "=> (T_DOUBLE_ARROW)" expr
  512                          | expr .
  515                          | expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 311
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 512 (non_empty_array_pair_list)


状態 153

  353 expr_without_variable: '[' array_pair_list . ']'

    ']'  shift, and go to state 312


状態 154

  508 array_pair_list: non_empty_array_pair_list . possible_comma
  509 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" expr
  510                          | non_empty_array_pair_list . ',' expr
  513                          | non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  514                          | non_empty_array_pair_list . ',' '&' w_variable

    ','  shift, and go to state 313

    $default  reduce using rule 441 (possible_comma)

    possible_comma  go to state 314


状態 155

  271 expr_without_variable: "clone (T_CLONE)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 271 (expr_without_variable)


状態 156

  385 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 315


状態 157

  386 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 316


状態 158

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  384 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 384 (class_name)


状態 159

  390 class_name_reference: class_name .
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 317

    $default  reduce using rule 390 (class_name_reference)


状態 160

  262 new_expr: "new (T_NEW)" class_name_reference . $@45 ctor_arguments

    $default  reduce using rule 261 ($@45)

    $@45  go to state 318


状態 161

  391 class_name_reference: dynamic_class_name_reference .

    $default  reduce using rule 391 (class_name_reference)


状態 162

  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 319


状態 163

  394 dynamic_class_name_reference: base_variable . "-> (T_OBJECT_OPERATOR)" $@67 object_property $@68 dynamic_class_name_variable_properties
  395                             | base_variable .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 320

    $default  reduce using rule 395 (dynamic_class_name_reference)


状態 164

  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 471 (variable_class_name)
    $default                       reduce using rule 478 (base_variable)


状態 165

  479 base_variable: simple_indirect_reference . reference_variable
  499 simple_indirect_reference: simple_indirect_reference . '$'
  500                          | simple_indirect_reference . T_HENSU

    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 299
    '$'                      shift, and go to state 300

    reference_variable  go to state 321
    compound_variable   go to state 116


状態 166

  400 exit_expr: '(' . ')'
  401          | '(' . expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ')'                                           shift, and go to state 322
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 323
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 167

  348 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $default  reduce using rule 348 (expr_without_variable)


状態 168

   38 unticked_statement: "if (T_IF)" '(' . expr ')' $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" '(' . expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 324
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 169

   34 statement: "identifier (T_STRING)" ':' .

    $default  reduce using rule 34 (statement)


状態 170

   69 unticked_statement: "echo (T_ECHO)" echo_expr_list . ';'
  243 echo_expr_list: echo_expr_list . ',' expr

    ','  shift, and go to state 325
    ';'  shift, and go to state 326


状態 171

  244 echo_expr_list: expr .
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 244 (echo_expr_list)


状態 172

   53 unticked_statement: "do (T_DO)" $@15 . statement "while (T_WHILE)" '(' $@16 expr ')' ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 327
    unticked_statement                 go to state 91
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 173

   47 unticked_statement: "while (T_WHILE)" '(' . $@11 expr ')' $@12 while_statement

    $default  reduce using rule 45 ($@11)

    $@11  go to state 328


状態 174

   57 unticked_statement: "for (T_FOR)" '(' . for_expr ';' $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 245 (for_expr)

    namespace_name                     go to state 87
    for_expr                           go to state 329
    non_empty_for_expr                 go to state 330
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 331
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 175

   76 unticked_statement: "foreach (T_FOREACH)" '(' . variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement
   79                   | "foreach (T_FOREACH)" '(' . expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 332
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 186
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 333
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 176

   81 unticked_statement: "declare (T_DECLARE)" $@25 . '(' declare_list ')' declare_statement

    '('  shift, and go to state 334


状態 177

   59 unticked_statement: "switch (T_SWITCH)" '(' . expr ')' $@20 switch_case_list

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 335
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 178

   60 unticked_statement: "break (T_BREAK)" ';' .

    $default  reduce using rule 60 (unticked_statement)


状態 179

   61 unticked_statement: "break (T_BREAK)" expr . ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ';'                           shift, and go to state 336


状態 180

   62 unticked_statement: "continue (T_CONTINUE)" ';' .

    $default  reduce using rule 62 (unticked_statement)


状態 181

   63 unticked_statement: "continue (T_CONTINUE)" expr . ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ';'                           shift, and go to state 337


状態 182

   90 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  shift, and go to state 338


状態 183

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 339


状態 184

   64 unticked_statement: "return (T_RETURN)" ';' .

    $default  reduce using rule 64 (unticked_statement)


状態 185

   65 unticked_statement: "return (T_RETURN)" expr_without_variable . ';'
  448 expr: expr_without_variable .

    ';'  shift, and go to state 340

    $default  reduce using rule 448 (expr)


状態 186

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275


状態 187

   66 unticked_statement: "return (T_RETURN)" variable . ';'
  265 expr_without_variable: variable . '=' expr
  266                      | variable . "T_HA" expr T_DESU
  267                      | variable . "T_NI" expr T_DAINYU
  268                      | variable . '=' '&' variable
  270                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  272                      | variable . "+= (T_PLUS_EQUAL)" expr
  273                      | variable . "-= (T_MINUS_EQUAL)" expr
  274                      | variable . "*= (T_MUL_EQUAL)" expr
  275                      | variable . "/= (T_DIV_EQUAL)" expr
  276                      | variable . ".= (T_CONCAT_EQUAL)" expr
  277                      | variable . "%= (T_MOD_EQUAL)" expr
  278                      | variable . "&= (T_AND_EQUAL)" expr
  279                      | variable . "|= (T_OR_EQUAL)" expr
  280                      | variable . "^= (T_XOR_EQUAL)" expr
  281                      | variable . "<<= (T_SL_EQUAL)" expr
  282                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 279
    ">>= (T_SR_EQUAL)"     shift, and go to state 280
    "<<= (T_SL_EQUAL)"     shift, and go to state 281
    "^= (T_XOR_EQUAL)"     shift, and go to state 282
    "|= (T_OR_EQUAL)"      shift, and go to state 283
    "&= (T_AND_EQUAL)"     shift, and go to state 284
    "%= (T_MOD_EQUAL)"     shift, and go to state 285
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 286
    "/= (T_DIV_EQUAL)"     shift, and go to state 287
    "*= (T_MUL_EQUAL)"     shift, and go to state 288
    "-= (T_MINUS_EQUAL)"   shift, and go to state 289
    "+= (T_PLUS_EQUAL)"    shift, and go to state 290
    "T_HA"                 shift, and go to state 291
    "T_NI"                 shift, and go to state 292
    ';'                    shift, and go to state 341

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


状態 188

   88 unticked_statement: "try (T_TRY)" $@26 . '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    '{'  shift, and go to state 342


状態 189

   89 unticked_statement: "throw (T_THROW)" expr . ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ';'                           shift, and go to state 343


状態 190

   22 use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   23                | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 344


状態 191

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   20 use_declaration: namespace_name .
   21                | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 345
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 20 (use_declaration)


状態 192

   16 top_statement: "use (T_USE)" use_declarations . ';'
   18 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 346
    ';'  shift, and go to state 347


状態 193

   19 use_declarations: use_declaration .

    $default  reduce using rule 19 (use_declarations)


状態 194

  185 global_var: "variable (T_VARIABLE)" .

    $default  reduce using rule 185 (global_var)


状態 195

  187 global_var: T_HENSU . r_variable
  189           | T_HENSU . '{' expr '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '{'                        shift, and go to state 348
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    r_variable                         go to state 349
    variable                           go to state 350
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 196

  186 global_var: '$' . r_variable
  188           | '$' . '{' expr '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '{'                        shift, and go to state 351
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    r_variable                         go to state 352
    variable                           go to state 350
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 197

   67 unticked_statement: "global (T_GLOBAL)" global_var_list . ';'
  183 global_var_list: global_var_list . ',' global_var

    ','  shift, and go to state 353
    ';'  shift, and go to state 354


状態 198

  184 global_var_list: global_var .

    $default  reduce using rule 184 (global_var_list)


状態 199

  114 class_entry_type: "final (T_FINAL)" "class (T_CLASS)" .

    $default  reduce using rule 114 (class_entry_type)


状態 200

  112 class_entry_type: "abstract (T_ABSTRACT)" "class (T_CLASS)" .

    $default  reduce using rule 112 (class_entry_type)


状態 201

  192 static_var_list: "variable (T_VARIABLE)" .
  193                | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 355

    $default  reduce using rule 192 (static_var_list)


状態 202

   68 unticked_statement: "static (T_STATIC)" static_var_list . ';'
  190 static_var_list: static_var_list . ',' "variable (T_VARIABLE)"
  191                | static_var_list . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 356
    ';'  shift, and go to state 357


状態 203

  359 expr_without_variable: "static (T_STATIC)" function . is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 240

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 358


状態 204

   73 unticked_statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    unset_variables                    go to state 359
    unset_variable                     go to state 360
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 361
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 205

  531 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 362
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    isset_variables                    go to state 363


状態 206

  532 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . variable ')'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 364
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 207

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 365


状態 208

  264 expr_without_variable: "list (T_LIST)" '(' . $@46 assignment_list ')' '=' expr

    $default  reduce using rule 263 ($@46)

    $@46  go to state 366


状態 209

  352 expr_without_variable: "array (T_ARRAY)" '(' . array_pair_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 151
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 507 (array_pair_list)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 152
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    array_pair_list                    go to state 367
    non_empty_array_pair_list          go to state 154
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 210

  521 encaps_var: "variable (T_VARIABLE)" .
  523           | "variable (T_VARIABLE)" . '[' $@76 encaps_var_offset ']'
  524           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       shift, and go to state 368
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 369

    $default  reduce using rule 521 (encaps_var)


状態 211

  417 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  520 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 210
    "heredoc end (T_END_HEREDOC)"      shift, and go to state 370
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                shift, and go to state 214

    encaps_var  go to state 371


状態 212

  418 common_scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 418 (common_scalar)


状態 213

  525 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  526           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 372
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 373
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 214

  527 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 374
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 215

  437 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  517 encaps_list: encaps_list . encaps_var
  518            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 375
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 376
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214

    encaps_var  go to state 377


状態 216

  519 encaps_list: encaps_var .

    $default  reduce using rule 519 (encaps_list)


状態 217

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  433 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 378


状態 218

   15 top_statement: "namespace (T_NAMESPACE)" '{' . $@3 top_statement_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 379


状態 219

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   11 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   13              | "namespace (T_NAMESPACE)" namespace_name . '{' $@2 top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    ';'                    shift, and go to state 380
    '{'                    shift, and go to state 381


状態 220

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . '(' $@61 function_call_parameter_list ')'
  386 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  434 scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 382

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 386 (class_name)
    $default                       reduce using rule 434 (scalar)


状態 221

   70 unticked_statement: T_OPEN_OUTPUT echo_expr_list . T_CLOSE_OUTPUT
  243 echo_expr_list: echo_expr_list . ',' expr

    ','             shift, and go to state 325
    T_CLOSE_OUTPUT  shift, and go to state 383


状態 222

   44 unticked_statement: T_JA_IF expr . T_NARABA $@9 inner_statement_list $@10 ja_else_single T_OWARI
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    T_NARABA                      shift, and go to state 384


状態 223

   50 unticked_statement: T_KURIKAESI $@13 . expr T_AIDA $@14 while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 385
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 224

  486 compound_variable: T_HENSU '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 386
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 225

  332 expr_without_variable: new_expr .
  334                      | '(' new_expr . ')' @52 instance_call

    ')'  shift, and go to state 387

    ')'       [reduce using rule 332 (expr_without_variable)]
    $default  reduce using rule 332 (expr_without_variable)


状態 226

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  331                      | '(' expr . ')'
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 388


状態 227

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   35 unticked_statement: '{' inner_statement_list . '}'

    '}'  shift, and go to state 389

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 228

  485 compound_variable: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 391
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 229

  403 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  520 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 210
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                shift, and go to state 214

    $default  reduce using rule 403 (backticks_expr)

    encaps_var  go to state 371


状態 230

  354 expr_without_variable: '`' backticks_expr . '`'

    '`'  shift, and go to state 392


状態 231

  404 backticks_expr: encaps_list .
  517 encaps_list: encaps_list . encaps_var
  518            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 375
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214

    $default  reduce using rule 404 (backticks_expr)

    encaps_var  go to state 377


状態 232

  520 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 210
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                shift, and go to state 214

    encaps_var  go to state 371


状態 233

  436 scalar: '"' encaps_list . '"'
  517 encaps_list: encaps_list . encaps_var
  518            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 210
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 375
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 213
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 214
    '"'                                                         shift, and go to state 393

    encaps_var  go to state 377


状態 234

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 394


状態 235

  368 function_call: namespace_name '(' . $@59 function_call_parameter_list ')'

    $default  reduce using rule 367 ($@59)

    $@59  go to state 395


状態 236

   24 constant_declaration: constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 396


状態 237

   17 top_statement: constant_declaration ';' .

    $default  reduce using rule 17 (top_statement)


状態 238

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" . extends_from $@34 implements_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 397

    $default  reduce using rule 115 (extends_from)

    extends_from  go to state 398


状態 239

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" . $@35 interface_extends_list '{' class_statement_list '}'

    $default  reduce using rule 109 ($@35)

    $@35  go to state 399


状態 240

  104 is_reference: '&' .

    $default  reduce using rule 104 (is_reference)


状態 241

  106 unticked_function_declaration_statement: function is_reference . "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' inner_statement_list '}'
  357 expr_without_variable: function is_reference . '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 400
    '('                      shift, and go to state 401


状態 242

  474 array_function_dereference: function_call $@73 . '[' dim_offset ']'

    '['  shift, and go to state 402


状態 243

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name '(' $@62 function_call_parameter_list ')'
  376              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects '(' $@63 function_call_parameter_list ')'
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 403
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 405
    reference_variable         go to state 406
    compound_variable          go to state 116
    variable_name              go to state 407
    simple_indirect_reference  go to state 408


状態 244

  292 expr_without_variable: expr "or (T_LOGICAL_OR)" . $@50 expr

    $default  reduce using rule 291 ($@50)

    $@50  go to state 409


状態 245

  295 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 410
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 246

  294 expr_without_variable: expr "and (T_LOGICAL_AND)" . $@51 expr

    $default  reduce using rule 293 ($@51)

    $@51  go to state 411


状態 247

  337 expr_without_variable: expr '?' . $@53 expr ':' $@54 expr
  339                      | expr '?' . ':' $@55 expr

    ':'  shift, and go to state 412

    $default  reduce using rule 335 ($@53)

    $@53  go to state 413


状態 248

  288 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . $@48 expr

    $default  reduce using rule 287 ($@48)

    $@48  go to state 414


状態 249

  290 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . $@49 expr

    $default  reduce using rule 289 ($@49)

    $@49  go to state 415


状態 250

  296 expr_without_variable: expr '|' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 416
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 251

  298 expr_without_variable: expr '^' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 417
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 252

  297 expr_without_variable: expr '&' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 418
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 253

  318 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 419
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 254

  316 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 420
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 255

  321 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 421
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 256

  320 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 422
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 257

  322 expr_without_variable: expr '<' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 423
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 258

  326 expr_without_variable: expr '>' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 424
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 259

  328 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 425
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 260

  324 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 426
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 261

  311 expr_without_variable: expr ">> (T_SR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 427
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 262

  310 expr_without_variable: expr "<< (T_SL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 428
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 263

  300 expr_without_variable: expr '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 429
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 264

  302 expr_without_variable: expr '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 430
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 265

  299 expr_without_variable: expr '.' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 431
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 266

  304 expr_without_variable: expr '*' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 432
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 267

  306 expr_without_variable: expr '/' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 433
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 268

  308 expr_without_variable: expr '%' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 434
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 269

  330 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 156
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 157
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                go to state 158
    class_name                    go to state 159
    class_name_reference          go to state 435
    dynamic_class_name_reference  go to state 161
    static_member                 go to state 110
    variable_class_name           go to state 162
    base_variable                 go to state 163
    reference_variable            go to state 164
    compound_variable             go to state 116
    simple_indirect_reference     go to state 165


状態 270

  309 expr_without_variable: expr "T_WO" . expr "%"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 436
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 271

  307 expr_without_variable: expr "/" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 437
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 272

  305 expr_without_variable: expr "*" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 438
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 273

  303 expr_without_variable: expr "-" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 439
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 274

  301 expr_without_variable: expr "+" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 440
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 275

  317 expr_without_variable: expr "T_GA" . expr "EQ"
  319                      | expr "T_GA" . expr "NE"
  323                      | expr "T_GA" . expr "< (T_YORI_TIISAI)"
  325                      | expr "T_GA" . expr "<= (T_IS_SMALLER_OR_EQUAL)"
  327                      | expr "T_GA" . expr "> (T_YORI_OOKII)"
  329                      | expr "T_GA" . expr ">= (T_IS_GREATER_OR_EQUAL)"

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 441
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 276

   72 unticked_statement: expr ';' .

    $default  reduce using rule 72 (unticked_statement)


状態 277

  285 expr_without_variable: rw_variable "-- (T_DEC)" .

    $default  reduce using rule 285 (expr_without_variable)


状態 278

  283 expr_without_variable: rw_variable "++ (T_INC)" .

    $default  reduce using rule 283 (expr_without_variable)


状態 279

  265 expr_without_variable: variable '=' . expr
  268                      | variable '=' . '&' variable
  270                      | variable '=' . '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 442
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 443
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 280

  282 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 444
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 281

  281 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 445
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 282

  280 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 446
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 283

  279 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 447
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 284

  278 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 448
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 285

  277 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 449
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 286

  276 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 450
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 287

  275 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 451
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 288

  274 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 452
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 289

  273 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 453
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 290

  272 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 454
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 291

  266 expr_without_variable: variable "T_HA" . expr T_DESU

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 455
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 292

  267 expr_without_variable: variable "T_NI" . expr T_DAINYU

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 456
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 293

  382 function_call: variable_without_objects '(' . $@66 function_call_parameter_list ')'

    $default  reduce using rule 381 ($@66)

    $@66  go to state 457


状態 294

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name '(' $@64 function_call_parameter_list ')'
  380              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects '(' $@65 function_call_parameter_list ')'
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 458
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 459
    reference_variable         go to state 406
    compound_variable          go to state 116
    variable_name              go to state 460
    simple_indirect_reference  go to state 408


状態 295

  472 array_function_dereference: array_function_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 462
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 296

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" . $@69 object_property $@70 method_or_not variable_properties

    $default  reduce using rule 452 ($@69)

    $@69  go to state 463


状態 297

  481 reference_variable: reference_variable '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 464
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 298

  482 reference_variable: reference_variable '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 465
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 299

  486 compound_variable: T_HENSU . '{' expr '}'
  500 simple_indirect_reference: simple_indirect_reference T_HENSU .

    '{'  shift, and go to state 224

    $default  reduce using rule 500 (simple_indirect_reference)


状態 300

  485 compound_variable: '$' . '{' expr '}'
  499 simple_indirect_reference: simple_indirect_reference '$' .

    '{'  shift, and go to state 228

    $default  reduce using rule 499 (simple_indirect_reference)


状態 301

  468 variable_without_objects: simple_indirect_reference reference_variable .
  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    '('       reduce using rule 468 (variable_without_objects)
    $default  reduce using rule 479 (base_variable)


状態 302

  357 expr_without_variable: function is_reference . '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 401


状態 303

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  535 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 466


状態 304

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  350                      | '@' $@56 expr .

    "T_WO"  shift, and go to state 270
    "/"     shift, and go to state 271
    "*"     shift, and go to state 272
    "-"     shift, and go to state 273
    "+"     shift, and go to state 274
    "T_GA"  shift, and go to state 275

    $default  reduce using rule 350 (expr_without_variable)


状態 305

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 467


状態 306

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . '(' $@61 function_call_parameter_list ')'
  386 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 382

    $default  reduce using rule 386 (class_name)


状態 307

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name '(' $@62 function_call_parameter_list ')'
  376              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects '(' $@63 function_call_parameter_list ')'
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 405
    reference_variable         go to state 406
    compound_variable          go to state 116
    variable_name              go to state 407
    simple_indirect_reference  go to state 408


状態 308

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name '(' $@64 function_call_parameter_list ')'
  380              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects '(' $@65 function_call_parameter_list ')'
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 459
    reference_variable         go to state 406
    compound_variable          go to state 116
    variable_name              go to state 460
    simple_indirect_reference  go to state 408


状態 309

  516 non_empty_array_pair_list: '&' w_variable .

    $default  reduce using rule 516 (non_empty_array_pair_list)


状態 310

  450 w_variable: variable .

    $default  reduce using rule 450 (w_variable)


状態 311

  511 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" . expr
  515                          | expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 469
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 470
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 312

  353 expr_without_variable: '[' array_pair_list ']' .

    $default  reduce using rule 353 (expr_without_variable)


状態 313

  442 possible_comma: ',' .
  509 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" expr
  510                          | non_empty_array_pair_list ',' . expr
  513                          | non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  514                          | non_empty_array_pair_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 471
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 442 (possible_comma)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 472
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 314

  508 array_pair_list: non_empty_array_pair_list possible_comma .

    $default  reduce using rule 508 (array_pair_list)


状態 315

  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 473


状態 316

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  386 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 386 (class_name)


状態 317

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 474
    reference_variable         go to state 406
    compound_variable          go to state 116
    simple_indirect_reference  go to state 408


状態 318

  262 new_expr: "new (T_NEW)" class_name_reference $@45 . ctor_arguments

    '('  shift, and go to state 475

    $default  reduce using rule 405 (ctor_arguments)

    ctor_arguments  go to state 476


状態 319

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 477
    reference_variable         go to state 406
    compound_variable          go to state 116
    simple_indirect_reference  go to state 408


状態 320

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" . $@67 object_property $@68 dynamic_class_name_variable_properties

    $default  reduce using rule 392 ($@67)

    $@67  go to state 478


状態 321

  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 479 (base_variable)


状態 322

  400 exit_expr: '(' ')' .

    $default  reduce using rule 400 (exit_expr)


状態 323

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  401 exit_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 479


状態 324

   38 unticked_statement: "if (T_IF)" '(' expr . ')' $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" '(' expr . ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 480


状態 325

  243 echo_expr_list: echo_expr_list ',' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 481
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 326

   69 unticked_statement: "echo (T_ECHO)" echo_expr_list ';' .

    $default  reduce using rule 69 (unticked_statement)


状態 327

   53 unticked_statement: "do (T_DO)" $@15 statement . "while (T_WHILE)" '(' $@16 expr ')' ';'

    "while (T_WHILE)"  shift, and go to state 482


状態 328

   47 unticked_statement: "while (T_WHILE)" '(' $@11 . expr ')' $@12 while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 483
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 329

   57 unticked_statement: "for (T_FOR)" '(' for_expr . ';' $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement

    ';'  shift, and go to state 484


状態 330

  246 for_expr: non_empty_for_expr .
  248 non_empty_for_expr: non_empty_for_expr . ',' $@42 expr

    ','  shift, and go to state 485

    $default  reduce using rule 246 (for_expr)


状態 331

  249 non_empty_for_expr: expr .
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 249 (non_empty_for_expr)


状態 332

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable . "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 foreach_statement
  448 expr: expr_without_variable .

    "as (T_AS)"  shift, and go to state 486

    $default  reduce using rule 448 (expr)


状態 333

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable . "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement
  265 expr_without_variable: variable . '=' expr
  266                      | variable . "T_HA" expr T_DESU
  267                      | variable . "T_NI" expr T_DAINYU
  268                      | variable . '=' '&' variable
  270                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  272                      | variable . "+= (T_PLUS_EQUAL)" expr
  273                      | variable . "-= (T_MINUS_EQUAL)" expr
  274                      | variable . "*= (T_MUL_EQUAL)" expr
  275                      | variable . "/= (T_DIV_EQUAL)" expr
  276                      | variable . ".= (T_CONCAT_EQUAL)" expr
  277                      | variable . "%= (T_MOD_EQUAL)" expr
  278                      | variable . "&= (T_AND_EQUAL)" expr
  279                      | variable . "|= (T_OR_EQUAL)" expr
  280                      | variable . "^= (T_XOR_EQUAL)" expr
  281                      | variable . "<<= (T_SL_EQUAL)" expr
  282                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 279
    ">>= (T_SR_EQUAL)"     shift, and go to state 280
    "<<= (T_SL_EQUAL)"     shift, and go to state 281
    "^= (T_XOR_EQUAL)"     shift, and go to state 282
    "|= (T_OR_EQUAL)"      shift, and go to state 283
    "&= (T_AND_EQUAL)"     shift, and go to state 284
    "%= (T_MOD_EQUAL)"     shift, and go to state 285
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 286
    "/= (T_DIV_EQUAL)"     shift, and go to state 287
    "*= (T_MUL_EQUAL)"     shift, and go to state 288
    "-= (T_MINUS_EQUAL)"   shift, and go to state 289
    "+= (T_PLUS_EQUAL)"    shift, and go to state 290
    "as (T_AS)"            shift, and go to state 487
    "T_HA"                 shift, and go to state 291
    "T_NI"                 shift, and go to state 292

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


状態 334

   81 unticked_statement: "declare (T_DECLARE)" $@25 '(' . declare_list ')' declare_statement

    "identifier (T_STRING)"  shift, and go to state 488

    declare_list  go to state 489


状態 335

   59 unticked_statement: "switch (T_SWITCH)" '(' expr . ')' $@20 switch_case_list
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 490


状態 336

   61 unticked_statement: "break (T_BREAK)" expr ';' .

    $default  reduce using rule 61 (unticked_statement)


状態 337

   63 unticked_statement: "continue (T_CONTINUE)" expr ';' .

    $default  reduce using rule 63 (unticked_statement)


状態 338

   90 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $default  reduce using rule 90 (unticked_statement)


状態 339

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 502
    static_class_constant  go to state 503


状態 340

   65 unticked_statement: "return (T_RETURN)" expr_without_variable ';' .

    $default  reduce using rule 65 (unticked_statement)


状態 341

   66 unticked_statement: "return (T_RETURN)" variable ';' .

    $default  reduce using rule 66 (unticked_statement)


状態 342

   88 unticked_statement: "try (T_TRY)" $@26 '{' . inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 504


状態 343

   89 unticked_statement: "throw (T_THROW)" expr ';' .

    $default  reduce using rule 89 (unticked_statement)


状態 344

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   22 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   23                | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 505
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 22 (use_declaration)


状態 345

   21 use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 506


状態 346

   18 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  shift, and go to state 120
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 190

    namespace_name   go to state 191
    use_declaration  go to state 507


状態 347

   16 top_statement: "use (T_USE)" use_declarations ';' .

    $default  reduce using rule 16 (top_statement)


状態 348

  189 global_var: T_HENSU '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 508
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 349

  187 global_var: T_HENSU r_variable .

    $default  reduce using rule 187 (global_var)


状態 350

  449 r_variable: variable .

    $default  reduce using rule 449 (r_variable)


状態 351

  188 global_var: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 509
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 352

  186 global_var: '$' r_variable .

    $default  reduce using rule 186 (global_var)


状態 353

  183 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  shift, and go to state 194
    T_HENSU                  shift, and go to state 195
    '$'                      shift, and go to state 196

    global_var  go to state 510


状態 354

   67 unticked_statement: "global (T_GLOBAL)" global_var_list ';' .

    $default  reduce using rule 67 (unticked_statement)


状態 355

  193 static_var_list: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 511
    static_class_constant  go to state 503


状態 356

  190 static_var_list: static_var_list ',' . "variable (T_VARIABLE)"
  191                | static_var_list ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 512


状態 357

   68 unticked_statement: "static (T_STATIC)" static_var_list ';' .

    $default  reduce using rule 68 (unticked_statement)


状態 358

  359 expr_without_variable: "static (T_STATIC)" function is_reference . '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 513


状態 359

   73 unticked_statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
   99 unset_variables: unset_variables . ',' unset_variable

    ','  shift, and go to state 514
    ')'  shift, and go to state 515


状態 360

   98 unset_variables: unset_variable .

    $default  reduce using rule 98 (unset_variables)


状態 361

  100 unset_variable: variable .

    $default  reduce using rule 100 (unset_variable)


状態 362

  538 isset_variables: variable .

    $default  reduce using rule 538 (isset_variables)


状態 363

  531 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  540 isset_variables: isset_variables . ',' $@77 variable

    ','  shift, and go to state 516
    ')'  shift, and go to state 517


状態 364

  532 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable . ')'

    ')'  shift, and go to state 518


状態 365

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 519


状態 366

  264 expr_without_variable: "list (T_LIST)" '(' $@46 . assignment_list ')' '=' expr

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "list (T_LIST)"            shift, and go to state 520
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    $default  reduce using rule 506 (assignment_list_element)

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 521
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    assignment_list                    go to state 522
    assignment_list_element            go to state 523


状態 367

  352 expr_without_variable: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 524


状態 368

  523 encaps_var: "variable (T_VARIABLE)" '[' . $@76 encaps_var_offset ']'

    $default  reduce using rule 522 ($@76)

    $@76  go to state 525


状態 369

  524 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 526


状態 370

  417 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 417 (common_scalar)


状態 371

  520 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $default  reduce using rule 520 (encaps_list)


状態 372

  430 scalar: "variable name (T_STRING_VARNAME)" .
  526 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  shift, and go to state 527

    $default  reduce using rule 430 (scalar)


状態 373

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  525 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 528


状態 374

  527 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  shift, and go to state 529


状態 375

  518 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 518 (encaps_list)


状態 376

  437 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 437 (scalar)


状態 377

  517 encaps_list: encaps_list encaps_var .

    $default  reduce using rule 517 (encaps_list)


状態 378

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  433 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 530

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 385 (class_name)
    $default                       reduce using rule 433 (scalar)


状態 379

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 531


状態 380

   11 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $default  reduce using rule 11 (top_statement)


状態 381

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' . $@2 top_statement_list '}'

    $default  reduce using rule 12 ($@2)

    $@2  go to state 532


状態 382

  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name '(' . $@61 function_call_parameter_list ')'

    $default  reduce using rule 371 ($@61)

    $@61  go to state 533


状態 383

   70 unticked_statement: T_OPEN_OUTPUT echo_expr_list T_CLOSE_OUTPUT .

    $default  reduce using rule 70 (unticked_statement)


状態 384

   44 unticked_statement: T_JA_IF expr T_NARABA . $@9 inner_statement_list $@10 ja_else_single T_OWARI

    $default  reduce using rule 42 ($@9)

    $@9  go to state 534


状態 385

   50 unticked_statement: T_KURIKAESI $@13 expr . T_AIDA $@14 while_statement
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    T_AIDA                        shift, and go to state 535


状態 386

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  486 compound_variable: T_HENSU '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 536


状態 387

  334 expr_without_variable: '(' new_expr ')' . @52 instance_call

    $default  reduce using rule 333 (@52)

    @52  go to state 537


状態 388

  331 expr_without_variable: '(' expr ')' .

    $default  reduce using rule 331 (expr_without_variable)


状態 389

   35 unticked_statement: '{' inner_statement_list '}' .

    $default  reduce using rule 35 (unticked_statement)


状態 390

   27 inner_statement_list: inner_statement_list $@4 . inner_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "final (T_FINAL)"                             shift, and go to state 54
    "abstract (T_ABSTRACT)"                       shift, and go to state 55
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 538
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                           go to state 87
    inner_statement                          go to state 539
    statement                                go to state 540
    unticked_statement                       go to state 91
    function_declaration_statement           go to state 541
    class_declaration_statement              go to state 542
    unticked_function_declaration_statement  go to state 94
    unticked_class_declaration_statement     go to state 95
    class_entry_type                         go to state 96
    interface_entry                          go to state 97
    new_expr                                 go to state 98
    expr_without_variable                    go to state 99
    function                                 go to state 100
    function_call                            go to state 101
    class_name                               go to state 102
    common_scalar                            go to state 103
    scalar                                   go to state 104
    expr                                     go to state 105
    r_variable                               go to state 106
    rw_variable                              go to state 107
    variable                                 go to state 108
    variable_without_objects                 go to state 109
    static_member                            go to state 110
    variable_class_name                      go to state 111
    array_function_dereference               go to state 112
    base_variable_with_function_calls        go to state 113
    base_variable                            go to state 114
    reference_variable                       go to state 115
    compound_variable                        go to state 116
    simple_indirect_reference                go to state 117
    internal_functions_in_yacc               go to state 118
    class_constant                           go to state 119


状態 391

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  485 compound_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 543


状態 392

  354 expr_without_variable: '`' backticks_expr '`' .

    $default  reduce using rule 354 (expr_without_variable)


状態 393

  436 scalar: '"' encaps_list '"' .

    $default  reduce using rule 436 (scalar)


状態 394

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 6 (namespace_name)


状態 395

  368 function_call: namespace_name '(' $@59 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 545
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 396

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 549


状態 397

  116 extends_from: "extends (T_EXTENDS)" . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 553


状態 398

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from . $@34 implements_list '{' class_statement_list '}'

    $default  reduce using rule 107 ($@34)

    $@34  go to state 554


状態 399

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 . interface_extends_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 555

    $default  reduce using rule 118 (interface_extends_list)

    interface_extends_list  go to state 556


状態 400

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" . $@33 '(' parameter_list ')' '{' inner_statement_list '}'

    $default  reduce using rule 105 ($@33)

    $@33  go to state 557


状態 401

  357 expr_without_variable: function is_reference '(' . @57 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 356 (@57)

    @57  go to state 558


状態 402

  474 array_function_dereference: function_call $@73 '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 559
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 403

  495 variable_name: "identifier (T_STRING)" .
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 495 (variable_name)
    $default  reduce using rule 541 (class_constant)


状態 404

  496 variable_name: '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 560
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 405

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . '(' $@63 function_call_parameter_list ')'
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('  shift, and go to state 561

    $default  reduce using rule 469 (static_member)


状態 406

  467 variable_without_objects: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 467 (variable_without_objects)


状態 407

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . '(' $@62 function_call_parameter_list ')'

    '('  shift, and go to state 562


状態 408

  468 variable_without_objects: simple_indirect_reference . reference_variable
  499 simple_indirect_reference: simple_indirect_reference . '$'
  500                          | simple_indirect_reference . T_HENSU

    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 299
    '$'                      shift, and go to state 300

    reference_variable  go to state 563
    compound_variable   go to state 116


状態 409

  292 expr_without_variable: expr "or (T_LOGICAL_OR)" $@50 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 564
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 410

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  295                      | expr "xor (T_LOGICAL_XOR)" expr .
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 295 (expr_without_variable)


状態 411

  294 expr_without_variable: expr "and (T_LOGICAL_AND)" $@51 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 565
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 412

  339 expr_without_variable: expr '?' ':' . $@55 expr

    $default  reduce using rule 338 ($@55)

    $@55  go to state 566


状態 413

  337 expr_without_variable: expr '?' $@53 . expr ':' $@54 expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 567
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 414

  288 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@48 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 568
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 415

  290 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@49 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 569
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 416

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  296                      | expr '|' expr .
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 296 (expr_without_variable)


状態 417

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  298                      | expr '^' expr .
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 298 (expr_without_variable)


状態 418

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  297                      | expr '&' expr .
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 297 (expr_without_variable)


状態 419

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  318                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 318 (expr_without_variable)


状態 420

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  316                      | expr "=== (T_IS_IDENTICAL)" expr .
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 316 (expr_without_variable)


状態 421

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  321                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 321 (expr_without_variable)


状態 422

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  320                      | expr "== (T_IS_EQUAL)" expr .
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 320 (expr_without_variable)


状態 423

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  322                      | expr '<' expr .
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    ">> (T_SR)"                  shift, and go to state 261
    "<< (T_SL)"                  shift, and go to state 262
    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 322 (expr_without_variable)


状態 424

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  326                      | expr '>' expr .
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    ">> (T_SR)"                  shift, and go to state 261
    "<< (T_SL)"                  shift, and go to state 262
    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 326 (expr_without_variable)


状態 425

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  328                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    ">> (T_SR)"                  shift, and go to state 261
    "<< (T_SL)"                  shift, and go to state 262
    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 328 (expr_without_variable)


状態 426

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  324                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    ">> (T_SR)"                  shift, and go to state 261
    "<< (T_SL)"                  shift, and go to state 262
    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 324 (expr_without_variable)


状態 427

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  311                      | expr ">> (T_SR)" expr .
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 311 (expr_without_variable)


状態 428

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  310                      | expr "<< (T_SL)" expr .
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '+'                          shift, and go to state 263
    '-'                          shift, and go to state 264
    '.'                          shift, and go to state 265
    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 310 (expr_without_variable)


状態 429

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  300                      | expr '+' expr .
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 300 (expr_without_variable)


状態 430

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  302                      | expr '-' expr .
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 302 (expr_without_variable)


状態 431

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  299                      | expr '.' expr .
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '*'                          shift, and go to state 266
    '/'                          shift, and go to state 267
    '%'                          shift, and go to state 268
    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 299 (expr_without_variable)


状態 432

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  304                      | expr '*' expr .
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 304 (expr_without_variable)


状態 433

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  306                      | expr '/' expr .
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 306 (expr_without_variable)


状態 434

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  308                      | expr '%' expr .
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 269
    "T_WO"                       shift, and go to state 270
    "/"                          shift, and go to state 271
    "*"                          shift, and go to state 272
    "-"                          shift, and go to state 273
    "+"                          shift, and go to state 274
    "T_GA"                       shift, and go to state 275

    $default  reduce using rule 308 (expr_without_variable)


状態 435

  330 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $default  reduce using rule 330 (expr_without_variable)


状態 436

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  309                      | expr "T_WO" expr . "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "%"                           shift, and go to state 570
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275


状態 437

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  307                      | expr "/" expr .
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_GA"  shift, and go to state 275

    $default  reduce using rule 307 (expr_without_variable)


状態 438

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  305                      | expr "*" expr .
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_GA"  shift, and go to state 275

    $default  reduce using rule 305 (expr_without_variable)


状態 439

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  303                      | expr "-" expr .
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_GA"  shift, and go to state 275

    $default  reduce using rule 303 (expr_without_variable)


状態 440

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  301                      | expr "+" expr .
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "T_GA"  shift, and go to state 275

    $default  reduce using rule 301 (expr_without_variable)


状態 441

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  317                      | expr "T_GA" expr . "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  319                      | expr "T_GA" expr . "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  323                      | expr "T_GA" expr . "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  325                      | expr "T_GA" expr . "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  327                      | expr "T_GA" expr . "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  329                      | expr "T_GA" expr . ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    "> (T_YORI_OOKII)"            shift, and go to state 571
    "< (T_YORI_TIISAI)"           shift, and go to state 572
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 573
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 574
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    "NE"                          shift, and go to state 575
    "EQ"                          shift, and go to state 576


状態 442

  268 expr_without_variable: variable '=' '&' . variable
  270                      | variable '=' '&' . "new (T_NEW)" class_name_reference $@47 ctor_arguments

    "new (T_NEW)"              shift, and go to state 577
    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 578
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 443

  265 expr_without_variable: variable '=' expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 265 (expr_without_variable)


状態 444

  282 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 282 (expr_without_variable)


状態 445

  281 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 281 (expr_without_variable)


状態 446

  280 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 280 (expr_without_variable)


状態 447

  279 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 279 (expr_without_variable)


状態 448

  278 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 278 (expr_without_variable)


状態 449

  277 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 277 (expr_without_variable)


状態 450

  276 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 276 (expr_without_variable)


状態 451

  275 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 275 (expr_without_variable)


状態 452

  274 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 274 (expr_without_variable)


状態 453

  273 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 273 (expr_without_variable)


状態 454

  272 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 272 (expr_without_variable)


状態 455

  266 expr_without_variable: variable "T_HA" expr . T_DESU
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    T_DESU                        shift, and go to state 579


状態 456

  267 expr_without_variable: variable "T_NI" expr . T_DAINYU
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    T_DAINYU                      shift, and go to state 580


状態 457

  382 function_call: variable_without_objects '(' $@66 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 581
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 458

  495 variable_name: "identifier (T_STRING)" .
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 495 (variable_name)
    $default  reduce using rule 542 (class_constant)


状態 459

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . '(' $@65 function_call_parameter_list ')'
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('  shift, and go to state 582

    $default  reduce using rule 470 (static_member)


状態 460

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . '(' $@64 function_call_parameter_list ')'

    '('  shift, and go to state 583


状態 461

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  488 dim_offset: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 488 (dim_offset)


状態 462

  472 array_function_dereference: array_function_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 584


状態 463

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 . object_property $@70 method_or_not variable_properties

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 585
    reference_variable         go to state 406
    compound_variable          go to state 116
    object_property            go to state 586
    object_dim_list            go to state 587
    variable_name              go to state 588
    simple_indirect_reference  go to state 408


状態 464

  481 reference_variable: reference_variable '[' dim_offset . ']'

    ']'  shift, and go to state 589


状態 465

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  482 reference_variable: reference_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 590


状態 466

  535 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $default  reduce using rule 535 (internal_functions_in_yacc)


状態 467

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . '(' $@60 function_call_parameter_list ')'
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234
    '('                    shift, and go to state 530

    $default  reduce using rule 385 (class_name)


状態 468

  495 variable_name: "identifier (T_STRING)" .

    $default  reduce using rule 495 (variable_name)


状態 469

  515 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 591
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 470

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  511 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 511 (non_empty_array_pair_list)


状態 471

  514 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 592
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 472

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  509 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" expr
  510                          | non_empty_array_pair_list ',' expr .
  513                          | non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 593
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 510 (non_empty_array_pair_list)


状態 473

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 385 (class_name)


状態 474

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 469 (static_member)


状態 475

  406 ctor_arguments: '(' . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 594
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 476

  262 new_expr: "new (T_NEW)" class_name_reference $@45 ctor_arguments .

    $default  reduce using rule 262 (new_expr)


状態 477

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 470 (static_member)


状態 478

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@67 . object_property $@68 dynamic_class_name_variable_properties

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 585
    reference_variable         go to state 406
    compound_variable          go to state 116
    object_property            go to state 595
    object_dim_list            go to state 587
    variable_name              go to state 588
    simple_indirect_reference  go to state 408


状態 479

  401 exit_expr: '(' expr ')' .

    $default  reduce using rule 401 (exit_expr)


状態 480

   38 unticked_statement: "if (T_IF)" '(' expr ')' . $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" '(' expr ')' . ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    ':'  shift, and go to state 596

    $default  reduce using rule 36 ($@5)

    $@5  go to state 597


状態 481

  243 echo_expr_list: echo_expr_list ',' expr .
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 243 (echo_expr_list)


状態 482

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" . '(' $@16 expr ')' ';'

    '('  shift, and go to state 598


状態 483

   47 unticked_statement: "while (T_WHILE)" '(' $@11 expr . ')' $@12 while_statement
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 599


状態 484

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' . $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement

    $default  reduce using rule 54 ($@17)

    $@17  go to state 600


状態 485

  248 non_empty_for_expr: non_empty_for_expr ',' . $@42 expr

    $default  reduce using rule 247 ($@42)

    $@42  go to state 601


状態 486

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" . $@23 variable foreach_optional_arg ')' $@24 foreach_statement

    $default  reduce using rule 77 ($@23)

    $@23  go to state 602


状態 487

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" . $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement

    $default  reduce using rule 74 ($@21)

    $@21  go to state 603


状態 488

  134 declare_list: "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 604


状態 489

   81 unticked_statement: "declare (T_DECLARE)" $@25 '(' declare_list . ')' declare_statement
  135 declare_list: declare_list . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 605
    ')'  shift, and go to state 606


状態 490

   59 unticked_statement: "switch (T_SWITCH)" '(' expr ')' . $@20 switch_case_list

    $default  reduce using rule 58 ($@20)

    $@20  go to state 607


状態 491

  423 static_scalar: '+' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 608
    static_class_constant  go to state 503


状態 492

  424 static_scalar: '-' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 609
    static_class_constant  go to state 503


状態 493

  426 static_scalar: '[' . static_array_pair_list ']'

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    $default  reduce using rule 439 (static_array_pair_list)

    namespace_name                    go to state 499
    class_name                        go to state 500
    common_scalar                     go to state 501
    static_scalar                     go to state 610
    static_class_constant             go to state 503
    static_array_pair_list            go to state 611
    non_empty_static_array_pair_list  go to state 612


状態 494

  425 static_scalar: "array (T_ARRAY)" . '(' static_array_pair_list ')'

    '('  shift, and go to state 613


状態 495

  428 static_scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 428 (static_scalar)


状態 496

  417 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  418              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"

    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 614
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 212


状態 497

  385 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  421 static_scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 615


状態 498

  386 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  422 static_scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 616


状態 499

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  384 class_name: namespace_name .
  420 static_scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 384 (class_name)
    $default                       reduce using rule 420 (static_scalar)


状態 500

  429 static_class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 617


状態 501

  419 static_scalar: common_scalar .

    $default  reduce using rule 419 (static_scalar)


状態 502

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 25 (constant_declaration)


状態 503

  427 static_scalar: static_class_constant .

    $default  reduce using rule 427 (static_scalar)


状態 504

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list . '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    '}'  shift, and go to state 618

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 505

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 619


状態 506

   21 use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 21 (use_declaration)


状態 507

   18 use_declarations: use_declarations ',' use_declaration .

    $default  reduce using rule 18 (use_declarations)


状態 508

  189 global_var: T_HENSU '{' expr . '}'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 620


状態 509

  188 global_var: '$' '{' expr . '}'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 621


状態 510

  183 global_var_list: global_var_list ',' global_var .

    $default  reduce using rule 183 (global_var_list)


状態 511

  193 static_var_list: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 193 (static_var_list)


状態 512

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)" .
  191                | static_var_list ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 622

    $default  reduce using rule 190 (static_var_list)


状態 513

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' . @58 parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 358 (@58)

    @58  go to state 623


状態 514

   99 unset_variables: unset_variables ',' . unset_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    unset_variable                     go to state 624
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 361
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 515

   73 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  shift, and go to state 625


状態 516

  540 isset_variables: isset_variables ',' . $@77 variable

    $default  reduce using rule 539 ($@77)

    $@77  go to state 626


状態 517

  531 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $default  reduce using rule 531 (internal_functions_in_yacc)


状態 518

  532 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable ')' .

    $default  reduce using rule 532 (internal_functions_in_yacc)


状態 519

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 10 (top_statement)


状態 520

  505 assignment_list_element: "list (T_LIST)" . '(' $@75 assignment_list ')'

    '('  shift, and go to state 627


状態 521

  503 assignment_list_element: variable .

    $default  reduce using rule 503 (assignment_list_element)


状態 522

  264 expr_without_variable: "list (T_LIST)" '(' $@46 assignment_list . ')' '=' expr
  501 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 628
    ')'  shift, and go to state 629


状態 523

  502 assignment_list: assignment_list_element .

    $default  reduce using rule 502 (assignment_list)


状態 524

  352 expr_without_variable: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 352 (expr_without_variable)


状態 525

  523 encaps_var: "variable (T_VARIABLE)" '[' $@76 . encaps_var_offset ']'

    "identifier (T_STRING)"  shift, and go to state 630
    "variable (T_VARIABLE)"  shift, and go to state 631
    "number (T_NUM_STRING)"  shift, and go to state 632

    encaps_var_offset  go to state 633


状態 526

  524 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 524 (encaps_var)


状態 527

  526 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 634
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 528

  525 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $default  reduce using rule 525 (encaps_var)


状態 529

  527 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $default  reduce using rule 527 (encaps_var)


状態 530

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name '(' . $@60 function_call_parameter_list ')'

    $default  reduce using rule 369 ($@60)

    $@60  go to state 635


状態 531

    3 top_statement_list: top_statement_list . $@1 top_statement
   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list . '}'

    '}'  shift, and go to state 636

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


状態 532

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 637


状態 533

  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name '(' $@61 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 638
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 534

   44 unticked_statement: T_JA_IF expr T_NARABA $@9 . inner_statement_list $@10 ja_else_single T_OWARI

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 639


状態 535

   50 unticked_statement: T_KURIKAESI $@13 expr T_AIDA . $@14 while_statement

    $default  reduce using rule 49 ($@14)

    $@14  go to state 640


状態 536

  486 compound_variable: T_HENSU '{' expr '}' .

    $default  reduce using rule 486 (compound_variable)


状態 537

  334 expr_without_variable: '(' new_expr ')' @52 . instance_call

    '['                       reduce using rule 259 ($@44)
    "-> (T_OBJECT_OPERATOR)"  reduce using rule 259 ($@44)
    $default                  reduce using rule 258 (instance_call)

    instance_call  go to state 641
    $@44           go to state 642


状態 538

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 643


状態 539

   27 inner_statement_list: inner_statement_list $@4 inner_statement .

    $default  reduce using rule 27 (inner_statement_list)


状態 540

   29 inner_statement: statement .

    $default  reduce using rule 29 (inner_statement)


状態 541

   30 inner_statement: function_declaration_statement .

    $default  reduce using rule 30 (inner_statement)


状態 542

   31 inner_statement: class_declaration_statement .

    $default  reduce using rule 31 (inner_statement)


状態 543

  485 compound_variable: '$' '{' expr '}' .

    $default  reduce using rule 485 (compound_variable)


状態 544

  179 non_empty_function_call_parameter_list: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 644
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 545

  368 function_call: namespace_name '(' $@59 function_call_parameter_list . ')'

    ')'  shift, and go to state 645


状態 546

  175 function_call_parameter_list: non_empty_function_call_parameter_list .
  180 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
  181                                       | non_empty_function_call_parameter_list . ',' variable
  182                                       | non_empty_function_call_parameter_list . ',' '&' w_variable

    ','  shift, and go to state 646

    $default  reduce using rule 175 (function_call_parameter_list)


状態 547

  177 non_empty_function_call_parameter_list: expr_without_variable .
  448 expr: expr_without_variable .

    ','       reduce using rule 177 (non_empty_function_call_parameter_list)
    ')'       reduce using rule 177 (non_empty_function_call_parameter_list)
    $default  reduce using rule 448 (expr)


状態 548

  178 non_empty_function_call_parameter_list: variable .
  265 expr_without_variable: variable . '=' expr
  266                      | variable . "T_HA" expr T_DESU
  267                      | variable . "T_NI" expr T_DAINYU
  268                      | variable . '=' '&' variable
  270                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  272                      | variable . "+= (T_PLUS_EQUAL)" expr
  273                      | variable . "-= (T_MINUS_EQUAL)" expr
  274                      | variable . "*= (T_MUL_EQUAL)" expr
  275                      | variable . "/= (T_DIV_EQUAL)" expr
  276                      | variable . ".= (T_CONCAT_EQUAL)" expr
  277                      | variable . "%= (T_MOD_EQUAL)" expr
  278                      | variable . "&= (T_AND_EQUAL)" expr
  279                      | variable . "|= (T_OR_EQUAL)" expr
  280                      | variable . "^= (T_XOR_EQUAL)" expr
  281                      | variable . "<<= (T_SL_EQUAL)" expr
  282                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 279
    ">>= (T_SR_EQUAL)"     shift, and go to state 280
    "<<= (T_SL_EQUAL)"     shift, and go to state 281
    "^= (T_XOR_EQUAL)"     shift, and go to state 282
    "|= (T_OR_EQUAL)"      shift, and go to state 283
    "&= (T_AND_EQUAL)"     shift, and go to state 284
    "%= (T_MOD_EQUAL)"     shift, and go to state 285
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 286
    "/= (T_DIV_EQUAL)"     shift, and go to state 287
    "*= (T_MUL_EQUAL)"     shift, and go to state 288
    "-= (T_MINUS_EQUAL)"   shift, and go to state 289
    "+= (T_PLUS_EQUAL)"    shift, and go to state 290
    "T_HA"                 shift, and go to state 291
    "T_NI"                 shift, and go to state 292

    ','           reduce using rule 178 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 178 (non_empty_function_call_parameter_list)
    $default      reduce using rule 449 (r_variable)


状態 549

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 647
    static_class_constant  go to state 503


状態 550

  388 fully_qualified_class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 648


状態 551

  389 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 649


状態 552

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  387 fully_qualified_class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 387 (fully_qualified_class_name)


状態 553

  116 extends_from: "extends (T_EXTENDS)" fully_qualified_class_name .

    $default  reduce using rule 116 (extends_from)


状態 554

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 . implements_list '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 650

    $default  reduce using rule 120 (implements_list)

    implements_list  go to state 651


状態 555

  119 interface_extends_list: "extends (T_EXTENDS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    interface_list              go to state 652
    fully_qualified_class_name  go to state 653


状態 556

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 interface_extends_list . '{' class_statement_list '}'

    '{'  shift, and go to state 654


状態 557

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 . '(' parameter_list ')' '{' inner_statement_list '}'

    '('  shift, and go to state 655


状態 558

  357 expr_without_variable: function is_reference '(' @57 . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "array (T_ARRAY)"          shift, and go to state 656
    "callable (T_CALLABLE)"    shift, and go to state 657
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 658
    non_empty_parameter_list    go to state 659
    optional_class_type         go to state 660
    fully_qualified_class_name  go to state 661


状態 559

  474 array_function_dereference: function_call $@73 '[' dim_offset . ']'

    ']'  shift, and go to state 662


状態 560

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  496 variable_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 663


状態 561

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' . $@63 function_call_parameter_list ')'

    $default  reduce using rule 375 ($@63)

    $@63  go to state 664


状態 562

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' . $@62 function_call_parameter_list ')'

    $default  reduce using rule 373 ($@62)

    $@62  go to state 665


状態 563

  468 variable_without_objects: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 468 (variable_without_objects)


状態 564

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  292                      | expr "or (T_LOGICAL_OR)" $@50 expr .
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 292 (expr_without_variable)


状態 565

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  294                      | expr "and (T_LOGICAL_AND)" $@51 expr .
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 294 (expr_without_variable)


状態 566

  339 expr_without_variable: expr '?' ':' $@55 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 666
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 567

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  337                      | expr '?' $@53 expr . ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    ':'                           shift, and go to state 667
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275


状態 568

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  288                      | expr "|| (T_BOOLEAN_OR)" $@48 expr .
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 288 (expr_without_variable)


状態 569

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  290                      | expr "&& (T_BOOLEAN_AND)" $@49 expr .
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 290 (expr_without_variable)


状態 570

  309 expr_without_variable: expr "T_WO" expr "%" .

    $default  reduce using rule 309 (expr_without_variable)


状態 571

  327 expr_without_variable: expr "T_GA" expr "> (T_YORI_OOKII)" .

    $default  reduce using rule 327 (expr_without_variable)


状態 572

  323 expr_without_variable: expr "T_GA" expr "< (T_YORI_TIISAI)" .

    $default  reduce using rule 323 (expr_without_variable)


状態 573

  328 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr
  329                      | expr "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 329 (expr_without_variable)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 425
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 574

  324 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr
  325                      | expr "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)" .

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 325 (expr_without_variable)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 426
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 575

  319 expr_without_variable: expr "T_GA" expr "NE" .

    $default  reduce using rule 319 (expr_without_variable)


状態 576

  317 expr_without_variable: expr "T_GA" expr "EQ" .

    $default  reduce using rule 317 (expr_without_variable)


状態 577

  270 expr_without_variable: variable '=' '&' "new (T_NEW)" . class_name_reference $@47 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 156
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 157
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                go to state 158
    class_name                    go to state 159
    class_name_reference          go to state 668
    dynamic_class_name_reference  go to state 161
    static_member                 go to state 110
    variable_class_name           go to state 162
    base_variable                 go to state 163
    reference_variable            go to state 164
    compound_variable             go to state 116
    simple_indirect_reference     go to state 165


状態 578

  268 expr_without_variable: variable '=' '&' variable .

    $default  reduce using rule 268 (expr_without_variable)


状態 579

  266 expr_without_variable: variable "T_HA" expr T_DESU .

    $default  reduce using rule 266 (expr_without_variable)


状態 580

  267 expr_without_variable: variable "T_NI" expr T_DAINYU .

    $default  reduce using rule 267 (expr_without_variable)


状態 581

  382 function_call: variable_without_objects '(' $@66 function_call_parameter_list . ')'

    ')'  shift, and go to state 669


状態 582

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' . $@65 function_call_parameter_list ')'

    $default  reduce using rule 379 ($@65)

    $@65  go to state 670


状態 583

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' . $@64 function_call_parameter_list ')'

    $default  reduce using rule 377 ($@64)

    $@64  go to state 671


状態 584

  472 array_function_dereference: array_function_dereference '[' dim_offset ']' .

    $default  reduce using rule 472 (array_function_dereference)


状態 585

  491 object_property: variable_without_objects . $@74

    $default  reduce using rule 490 ($@74)

    $@74  go to state 672


状態 586

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 object_property . $@70 method_or_not variable_properties

    $default  reduce using rule 453 ($@70)

    $@70  go to state 673


状態 587

  489 object_property: object_dim_list .
  492 object_dim_list: object_dim_list . '[' dim_offset ']'
  493                | object_dim_list . '{' expr '}'

    '['  shift, and go to state 674
    '{'  shift, and go to state 675

    $default  reduce using rule 489 (object_property)


状態 588

  494 object_dim_list: variable_name .

    $default  reduce using rule 494 (object_dim_list)


状態 589

  481 reference_variable: reference_variable '[' dim_offset ']' .

    $default  reduce using rule 481 (reference_variable)


状態 590

  482 reference_variable: reference_variable '{' expr '}' .

    $default  reduce using rule 482 (reference_variable)


状態 591

  515 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 515 (non_empty_array_pair_list)


状態 592

  514 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .

    $default  reduce using rule 514 (non_empty_array_pair_list)


状態 593

  509 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . expr
  513                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 676
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 677
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 594

  406 ctor_arguments: '(' function_call_parameter_list . ')'

    ')'  shift, and go to state 678


状態 595

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@67 object_property . $@68 dynamic_class_name_variable_properties

    $default  reduce using rule 393 ($@68)

    $@68  go to state 679


状態 596

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' . $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 39 ($@7)

    $@7  go to state 680


状態 597

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 . statement $@6 elseif_list else_single

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 681
    unticked_statement                 go to state 91
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 598

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' . $@16 expr ')' ';'

    $default  reduce using rule 52 ($@16)

    $@16  go to state 682


状態 599

   47 unticked_statement: "while (T_WHILE)" '(' $@11 expr ')' . $@12 while_statement

    $default  reduce using rule 46 ($@12)

    $@12  go to state 683


状態 600

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 . for_expr ';' $@18 for_expr ')' $@19 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 245 (for_expr)

    namespace_name                     go to state 87
    for_expr                           go to state 684
    non_empty_for_expr                 go to state 330
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 331
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 601

  248 non_empty_for_expr: non_empty_for_expr ',' $@42 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 685
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 602

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 . variable foreach_optional_arg ')' $@24 foreach_statement

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 686
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 603

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 . foreach_variable foreach_optional_arg ')' $@22 foreach_statement

    '&'                        shift, and go to state 687
    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    foreach_variable                   go to state 688
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 689
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 604

  134 declare_list: "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 690
    static_class_constant  go to state 503


状態 605

  135 declare_list: declare_list ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 691


状態 606

   81 unticked_statement: "declare (T_DECLARE)" $@25 '(' declare_list ')' . declare_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 692
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 693
    unticked_statement                 go to state 91
    declare_statement                  go to state 694
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 607

   59 unticked_statement: "switch (T_SWITCH)" '(' expr ')' $@20 . switch_case_list

    ':'  shift, and go to state 695
    '{'  shift, and go to state 696

    switch_case_list  go to state 697


状態 608

  423 static_scalar: '+' static_scalar .

    $default  reduce using rule 423 (static_scalar)


状態 609

  424 static_scalar: '-' static_scalar .

    $default  reduce using rule 424 (static_scalar)


状態 610

  445 non_empty_static_array_pair_list: static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  446                                 | static_scalar .

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 698

    $default  reduce using rule 446 (non_empty_static_array_pair_list)


状態 611

  426 static_scalar: '[' static_array_pair_list . ']'

    ']'  shift, and go to state 699


状態 612

  440 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | non_empty_static_array_pair_list . ',' static_scalar

    ','  shift, and go to state 700

    $default  reduce using rule 441 (possible_comma)

    possible_comma  go to state 701


状態 613

  425 static_scalar: "array (T_ARRAY)" '(' . static_array_pair_list ')'

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    $default  reduce using rule 439 (static_array_pair_list)

    namespace_name                    go to state 499
    class_name                        go to state 500
    common_scalar                     go to state 501
    static_scalar                     go to state 610
    static_class_constant             go to state 503
    static_array_pair_list            go to state 702
    non_empty_static_array_pair_list  go to state 612


状態 614

  417 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"

    "heredoc end (T_END_HEREDOC)"  shift, and go to state 370


状態 615

  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  421 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 703


状態 616

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  386 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  422 static_scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 386 (class_name)
    $default                       reduce using rule 422 (static_scalar)


状態 617

  429 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 704


状態 618

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' . "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    "catch (T_CATCH)"  shift, and go to state 705


状態 619

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 23 (use_declaration)


状態 620

  189 global_var: T_HENSU '{' expr '}' .

    $default  reduce using rule 189 (global_var)


状態 621

  188 global_var: '$' '{' expr '}' .

    $default  reduce using rule 188 (global_var)


状態 622

  191 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 706
    static_class_constant  go to state 503


状態 623

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "array (T_ARRAY)"          shift, and go to state 656
    "callable (T_CALLABLE)"    shift, and go to state 657
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 707
    non_empty_parameter_list    go to state 659
    optional_class_type         go to state 660
    fully_qualified_class_name  go to state 661


状態 624

   99 unset_variables: unset_variables ',' unset_variable .

    $default  reduce using rule 99 (unset_variables)


状態 625

   73 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $default  reduce using rule 73 (unticked_statement)


状態 626

  540 isset_variables: isset_variables ',' $@77 . variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 708
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 627

  505 assignment_list_element: "list (T_LIST)" '(' . $@75 assignment_list ')'

    $default  reduce using rule 504 ($@75)

    $@75  go to state 709


状態 628

  501 assignment_list: assignment_list ',' . assignment_list_element

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "list (T_LIST)"            shift, and go to state 520
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    $default  reduce using rule 506 (assignment_list_element)

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 521
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    assignment_list_element            go to state 710


状態 629

  264 expr_without_variable: "list (T_LIST)" '(' $@46 assignment_list ')' . '=' expr

    '='  shift, and go to state 711


状態 630

  528 encaps_var_offset: "identifier (T_STRING)" .

    $default  reduce using rule 528 (encaps_var_offset)


状態 631

  530 encaps_var_offset: "variable (T_VARIABLE)" .

    $default  reduce using rule 530 (encaps_var_offset)


状態 632

  529 encaps_var_offset: "number (T_NUM_STRING)" .

    $default  reduce using rule 529 (encaps_var_offset)


状態 633

  523 encaps_var: "variable (T_VARIABLE)" '[' $@76 encaps_var_offset . ']'

    ']'  shift, and go to state 712


状態 634

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  526 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ']'                           shift, and go to state 713


状態 635

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 714
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 636

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}' .

    $default  reduce using rule 15 (top_statement)


状態 637

    3 top_statement_list: top_statement_list . $@1 top_statement
   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list . '}'

    '}'  shift, and go to state 715

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


状態 638

  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name '(' $@61 function_call_parameter_list . ')'

    ')'  shift, and go to state 716


状態 639

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   44 unticked_statement: T_JA_IF expr T_NARABA $@9 inner_statement_list . $@10 ja_else_single T_OWARI

    T_JA_ELSE  reduce using rule 43 ($@10)
    T_OWARI    reduce using rule 43 ($@10)
    $default   reduce using rule 26 ($@4)

    $@4   go to state 390
    $@10  go to state 717


状態 640

   50 unticked_statement: T_KURIKAESI $@13 expr T_AIDA $@14 . while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 718
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 719
    unticked_statement                 go to state 91
    while_statement                    go to state 720
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 641

  334 expr_without_variable: '(' new_expr ')' @52 instance_call .

    $default  reduce using rule 334 (expr_without_variable)


状態 642

  260 instance_call: $@44 . chaining_instance_call

    '['                       shift, and go to state 721
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 722

    chaining_method_or_property  go to state 723
    chaining_dereference         go to state 724
    chaining_instance_call       go to state 725
    variable_property            go to state 726


状態 643

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 727


状態 644

  179 non_empty_function_call_parameter_list: '&' w_variable .

    $default  reduce using rule 179 (non_empty_function_call_parameter_list)


状態 645

  368 function_call: namespace_name '(' $@59 function_call_parameter_list ')' .

    $default  reduce using rule 368 (function_call)


状態 646

  180 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
  181                                       | non_empty_function_call_parameter_list ',' . variable
  182                                       | non_empty_function_call_parameter_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 728
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 729
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 186
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 730
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 647

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 24 (constant_declaration)


状態 648

  388 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 120

    namespace_name  go to state 731


状態 649

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  389 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 389 (fully_qualified_class_name)


状態 650

  121 implements_list: "implements (T_IMPLEMENTS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    interface_list              go to state 732
    fully_qualified_class_name  go to state 653


状態 651

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 implements_list . '{' class_statement_list '}'

    '{'  shift, and go to state 733


状態 652

  119 interface_extends_list: "extends (T_EXTENDS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 734

    $default  reduce using rule 119 (interface_extends_list)


状態 653

  122 interface_list: fully_qualified_class_name .

    $default  reduce using rule 122 (interface_list)


状態 654

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 interface_extends_list '{' . class_statement_list '}'

    $default  reduce using rule 195 (class_statement_list)

    class_statement_list  go to state 735


状態 655

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' . parameter_list ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "array (T_ARRAY)"          shift, and go to state 656
    "callable (T_CALLABLE)"    shift, and go to state 657
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 736
    non_empty_parameter_list    go to state 659
    optional_class_type         go to state 660
    fully_qualified_class_name  go to state 661


状態 656

  172 optional_class_type: "array (T_ARRAY)" .

    $default  reduce using rule 172 (optional_class_type)


状態 657

  173 optional_class_type: "callable (T_CALLABLE)" .

    $default  reduce using rule 173 (optional_class_type)


状態 658

  357 expr_without_variable: function is_reference '(' @57 parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 737


状態 659

  161 parameter_list: non_empty_parameter_list .
  167 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 738

    $default  reduce using rule 161 (parameter_list)


状態 660

  163 non_empty_parameter_list: optional_class_type . "variable (T_VARIABLE)"
  164                         | optional_class_type . '&' "variable (T_VARIABLE)"
  165                         | optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      shift, and go to state 739
    "variable (T_VARIABLE)"  shift, and go to state 740


状態 661

  174 optional_class_type: fully_qualified_class_name .

    $default  reduce using rule 174 (optional_class_type)


状態 662

  474 array_function_dereference: function_call $@73 '[' dim_offset ']' .

    $default  reduce using rule 474 (array_function_dereference)


状態 663

  496 variable_name: '{' expr '}' .

    $default  reduce using rule 496 (variable_name)


状態 664

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 741
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 665

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 742
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 666

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  339                      | expr '?' ':' $@55 expr .

    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 339 (expr_without_variable)


状態 667

  337 expr_without_variable: expr '?' $@53 expr ':' . $@54 expr

    $default  reduce using rule 336 ($@54)

    $@54  go to state 743


状態 668

  270 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference . $@47 ctor_arguments

    $default  reduce using rule 269 ($@47)

    $@47  go to state 744


状態 669

  382 function_call: variable_without_objects '(' $@66 function_call_parameter_list ')' .

    $default  reduce using rule 382 (function_call)


状態 670

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 745
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 671

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 746
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 672

  491 object_property: variable_without_objects $@74 .

    $default  reduce using rule 491 (object_property)


状態 673

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 object_property $@70 . method_or_not variable_properties

    '('  shift, and go to state 747

    $default  reduce using rule 466 (method_or_not)

    array_method_dereference  go to state 748
    method                    go to state 749
    method_or_not             go to state 750


状態 674

  492 object_dim_list: object_dim_list '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 751
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 675

  493 object_dim_list: object_dim_list '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 752
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 676

  513 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 753
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 677

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  509 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 509 (non_empty_array_pair_list)


状態 678

  406 ctor_arguments: '(' function_call_parameter_list ')' .

    $default  reduce using rule 406 (ctor_arguments)


状態 679

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@67 object_property $@68 . dynamic_class_name_variable_properties

    $default  reduce using rule 397 (dynamic_class_name_variable_properties)

    dynamic_class_name_variable_properties  go to state 754


状態 680

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 . inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 755


状態 681

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 statement . $@6 elseif_list else_single

    $default  reduce using rule 37 ($@6)

    $@6  go to state 756


状態 682

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' $@16 . expr ')' ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 757
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 683

   47 unticked_statement: "while (T_WHILE)" '(' $@11 expr ')' $@12 . while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 718
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 719
    unticked_statement                 go to state 91
    while_statement                    go to state 758
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 684

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr . ';' $@18 for_expr ')' $@19 for_statement

    ';'  shift, and go to state 759


状態 685

  248 non_empty_for_expr: non_empty_for_expr ',' $@42 expr .
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 248 (non_empty_for_expr)


状態 686

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable . foreach_optional_arg ')' $@24 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 760

    $default  reduce using rule 124 (foreach_optional_arg)

    foreach_optional_arg  go to state 761


状態 687

  127 foreach_variable: '&' . variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 762
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 688

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable . foreach_optional_arg ')' $@22 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 760

    $default  reduce using rule 124 (foreach_optional_arg)

    foreach_optional_arg  go to state 763


状態 689

  126 foreach_variable: variable .

    $default  reduce using rule 126 (foreach_variable)


状態 690

  134 declare_list: "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 134 (declare_list)


状態 691

  135 declare_list: declare_list ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 764


状態 692

  133 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 765


状態 693

  132 declare_statement: statement .

    $default  reduce using rule 132 (declare_statement)


状態 694

   81 unticked_statement: "declare (T_DECLARE)" $@25 '(' declare_list ')' declare_statement .

    $default  reduce using rule 81 (unticked_statement)


状態 695

  138 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  139                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  shift, and go to state 766

    $default  reduce using rule 140 (case_list)

    case_list  go to state 767


状態 696

  136 switch_case_list: '{' . case_list '}'
  137                 | '{' . ';' case_list '}'

    ';'  shift, and go to state 768

    $default  reduce using rule 140 (case_list)

    case_list  go to state 769


状態 697

   59 unticked_statement: "switch (T_SWITCH)" '(' expr ')' $@20 switch_case_list .

    $default  reduce using rule 59 (unticked_statement)


状態 698

  445 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 770
    static_class_constant  go to state 503


状態 699

  426 static_scalar: '[' static_array_pair_list ']' .

    $default  reduce using rule 426 (static_scalar)


状態 700

  442 possible_comma: ',' .
  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | non_empty_static_array_pair_list ',' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    $default  reduce using rule 442 (possible_comma)

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 771
    static_class_constant  go to state 503


状態 701

  440 static_array_pair_list: non_empty_static_array_pair_list possible_comma .

    $default  reduce using rule 440 (static_array_pair_list)


状態 702

  425 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list . ')'

    ')'  shift, and go to state 772


状態 703

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  385 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  421 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 385 (class_name)
    $default                       reduce using rule 421 (static_scalar)


状態 704

  429 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 429 (static_class_constant)


状態 705

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" . '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    '('  shift, and go to state 773


状態 706

  191 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 191 (static_var_list)


状態 707

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 774


状態 708

  540 isset_variables: isset_variables ',' $@77 variable .

    $default  reduce using rule 540 (isset_variables)


状態 709

  505 assignment_list_element: "list (T_LIST)" '(' $@75 . assignment_list ')'

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "list (T_LIST)"            shift, and go to state 520
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    $default  reduce using rule 506 (assignment_list_element)

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 521
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    assignment_list                    go to state 775
    assignment_list_element            go to state 523


状態 710

  501 assignment_list: assignment_list ',' assignment_list_element .

    $default  reduce using rule 501 (assignment_list)


状態 711

  264 expr_without_variable: "list (T_LIST)" '(' $@46 assignment_list ')' '=' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 776
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 712

  523 encaps_var: "variable (T_VARIABLE)" '[' $@76 encaps_var_offset ']' .

    $default  reduce using rule 523 (encaps_var)


状態 713

  526 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  shift, and go to state 777


状態 714

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list . ')'

    ')'  shift, and go to state 778


状態 715

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}' .

    $default  reduce using rule 13 (top_statement)


状態 716

  372 function_call: "\\ (T_NS_SEPARATOR)" namespace_name '(' $@61 function_call_parameter_list ')' .

    $default  reduce using rule 372 (function_call)


状態 717

   44 unticked_statement: T_JA_IF expr T_NARABA $@9 inner_statement_list $@10 . ja_else_single T_OWARI

    T_JA_ELSE  shift, and go to state 779

    $default  reduce using rule 157 (ja_else_single)

    ja_else_single  go to state 780


状態 718

  148 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 781


状態 719

  147 while_statement: statement .

    $default  reduce using rule 147 (while_statement)


状態 720

   50 unticked_statement: T_KURIKAESI $@13 expr T_AIDA $@14 while_statement .

    $default  reduce using rule 50 (unticked_statement)


状態 721

  253 chaining_dereference: '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 782
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 722

  459 variable_property: "-> (T_OBJECT_OPERATOR)" . object_property $@71 method_or_not

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 585
    reference_variable         go to state 406
    compound_variable          go to state 116
    object_property            go to state 783
    object_dim_list            go to state 587
    variable_name              go to state 588
    simple_indirect_reference  go to state 408


状態 723

  250 chaining_method_or_property: chaining_method_or_property . variable_property
  257 chaining_instance_call: chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 722

    $default  reduce using rule 257 (chaining_instance_call)

    variable_property  go to state 784


状態 724

  252 chaining_dereference: chaining_dereference . '[' dim_offset ']'
  255 chaining_instance_call: chaining_dereference . $@43 chaining_method_or_property
  256                       | chaining_dereference .

    '['  shift, and go to state 785

    "-> (T_OBJECT_OPERATOR)"  reduce using rule 254 ($@43)
    $default                  reduce using rule 256 (chaining_instance_call)

    $@43  go to state 786


状態 725

  260 instance_call: $@44 chaining_instance_call .

    $default  reduce using rule 260 (instance_call)


状態 726

  251 chaining_method_or_property: variable_property .

    $default  reduce using rule 251 (chaining_method_or_property)


状態 727

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 787


状態 728

  182 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    function_call                      go to state 101
    class_name                         go to state 146
    w_variable                         go to state 788
    variable                           go to state 310
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 729

  180 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
  448 expr: expr_without_variable .

    ','       reduce using rule 180 (non_empty_function_call_parameter_list)
    ')'       reduce using rule 180 (non_empty_function_call_parameter_list)
    $default  reduce using rule 448 (expr)


状態 730

  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
  265 expr_without_variable: variable . '=' expr
  266                      | variable . "T_HA" expr T_DESU
  267                      | variable . "T_NI" expr T_DAINYU
  268                      | variable . '=' '&' variable
  270                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments
  272                      | variable . "+= (T_PLUS_EQUAL)" expr
  273                      | variable . "-= (T_MINUS_EQUAL)" expr
  274                      | variable . "*= (T_MUL_EQUAL)" expr
  275                      | variable . "/= (T_DIV_EQUAL)" expr
  276                      | variable . ".= (T_CONCAT_EQUAL)" expr
  277                      | variable . "%= (T_MOD_EQUAL)" expr
  278                      | variable . "&= (T_AND_EQUAL)" expr
  279                      | variable . "|= (T_OR_EQUAL)" expr
  280                      | variable . "^= (T_XOR_EQUAL)" expr
  281                      | variable . "<<= (T_SL_EQUAL)" expr
  282                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 279
    ">>= (T_SR_EQUAL)"     shift, and go to state 280
    "<<= (T_SL_EQUAL)"     shift, and go to state 281
    "^= (T_XOR_EQUAL)"     shift, and go to state 282
    "|= (T_OR_EQUAL)"      shift, and go to state 283
    "&= (T_AND_EQUAL)"     shift, and go to state 284
    "%= (T_MOD_EQUAL)"     shift, and go to state 285
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 286
    "/= (T_DIV_EQUAL)"     shift, and go to state 287
    "*= (T_MUL_EQUAL)"     shift, and go to state 288
    "-= (T_MINUS_EQUAL)"   shift, and go to state 289
    "+= (T_PLUS_EQUAL)"    shift, and go to state 290
    "T_HA"                 shift, and go to state 291
    "T_NI"                 shift, and go to state 292

    ','           reduce using rule 181 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 181 (non_empty_function_call_parameter_list)
    $default      reduce using rule 449 (r_variable)


状態 731

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  388 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 234

    $default  reduce using rule 388 (fully_qualified_class_name)


状態 732

  121 implements_list: "implements (T_IMPLEMENTS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 734

    $default  reduce using rule 121 (implements_list)


状態 733

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 implements_list '{' . class_statement_list '}'

    $default  reduce using rule 195 (class_statement_list)

    class_statement_list  go to state 789


状態 734

  123 interface_list: interface_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 790


状態 735

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 interface_extends_list '{' class_statement_list . '}'
  194 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 791
    "use (T_USE)"              shift, and go to state 792
    "public (T_PUBLIC)"        shift, and go to state 793
    "protected (T_PROTECTED)"  shift, and go to state 794
    "private (T_PRIVATE)"      shift, and go to state 795
    "final (T_FINAL)"          shift, and go to state 796
    "abstract (T_ABSTRACT)"    shift, and go to state 797
    "static (T_STATIC)"        shift, and go to state 798
    "var (T_VAR)"              shift, and go to state 799
    '}'                        shift, and go to state 800

    $default  reduce using rule 227 (method_modifiers)

    class_statement             go to state 801
    trait_use_statement         go to state 802
    variable_modifiers          go to state 803
    method_modifiers            go to state 804
    non_empty_member_modifiers  go to state 805
    member_modifier             go to state 806
    class_constant_declaration  go to state 807


状態 736

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list . ')' '{' inner_statement_list '}'

    ')'  shift, and go to state 808


状態 737

  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 809

    $default  reduce using rule 361 (lexical_vars)

    lexical_vars  go to state 810


状態 738

  167 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    "identifier (T_STRING)"    shift, and go to state 120
    "array (T_ARRAY)"          shift, and go to state 656
    "callable (T_CALLABLE)"    shift, and go to state 657
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    optional_class_type         go to state 811
    fully_qualified_class_name  go to state 661


状態 739

  164 non_empty_parameter_list: optional_class_type '&' . "variable (T_VARIABLE)"
  165                         | optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 812


状態 740

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" .
  166                         | optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 813

    $default  reduce using rule 163 (non_empty_parameter_list)


状態 741

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 function_call_parameter_list . ')'

    ')'  shift, and go to state 814


状態 742

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 function_call_parameter_list . ')'

    ')'  shift, and go to state 815


状態 743

  337 expr_without_variable: expr '?' $@53 expr ':' $@54 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 816
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 744

  270 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@47 . ctor_arguments

    '('  shift, and go to state 475

    $default  reduce using rule 405 (ctor_arguments)

    ctor_arguments  go to state 817


状態 745

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 function_call_parameter_list . ')'

    ')'  shift, and go to state 818


状態 746

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 function_call_parameter_list . ')'

    ')'  shift, and go to state 819


状態 747

  463 method: '(' . $@72 function_call_parameter_list ')'

    $default  reduce using rule 462 ($@72)

    $@72  go to state 820


状態 748

  460 array_method_dereference: array_method_dereference . '[' dim_offset ']'
  465 method_or_not: array_method_dereference .

    '['  shift, and go to state 821

    $default  reduce using rule 465 (method_or_not)


状態 749

  461 array_method_dereference: method . '[' dim_offset ']'
  464 method_or_not: method .

    '['  shift, and go to state 822

    $default  reduce using rule 464 (method_or_not)


状態 750

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 object_property $@70 method_or_not . variable_properties

    $default  reduce using rule 457 (variable_properties)

    variable_properties  go to state 823


状態 751

  492 object_dim_list: object_dim_list '[' dim_offset . ']'

    ']'  shift, and go to state 824


状態 752

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr
  493 object_dim_list: object_dim_list '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    '}'                           shift, and go to state 825


状態 753

  513 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 513 (non_empty_array_pair_list)


状態 754

  394 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@67 object_property $@68 dynamic_class_name_variable_properties .
  396 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 826

    $default  reduce using rule 394 (dynamic_class_name_reference)

    dynamic_class_name_variable_property  go to state 827


状態 755

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list . $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  reduce using rule 40 ($@8)
    "else (T_ELSE)"      reduce using rule 40 ($@8)
    "endif (T_ENDIF)"    reduce using rule 40 ($@8)
    $default             reduce using rule 26 ($@4)

    $@4  go to state 390
    $@8  go to state 828


状態 756

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 statement $@6 . elseif_list else_single

    $default  reduce using rule 149 (elseif_list)

    elseif_list  go to state 829


状態 757

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' $@16 expr . ')' ';'
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 830


状態 758

   47 unticked_statement: "while (T_WHILE)" '(' $@11 expr ')' $@12 while_statement .

    $default  reduce using rule 47 (unticked_statement)


状態 759

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' . $@18 for_expr ')' $@19 for_statement

    $default  reduce using rule 55 ($@18)

    $@18  go to state 831


状態 760

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" . foreach_variable

    '&'                        shift, and go to state 687
    "identifier (T_STRING)"    shift, and go to state 120
    "variable (T_VARIABLE)"    shift, and go to state 34
    "static (T_STATIC)"        shift, and go to state 142
    "namespace (T_NAMESPACE)"  shift, and go to state 143
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 144
    T_HENSU                    shift, and go to state 80
    '$'                        shift, and go to state 84

    namespace_name                     go to state 145
    foreach_variable                   go to state 832
    function_call                      go to state 101
    class_name                         go to state 146
    variable                           go to state 689
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 149
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117


状態 761

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg . ')' $@24 foreach_statement

    ')'  shift, and go to state 833


状態 762

  127 foreach_variable: '&' variable .

    $default  reduce using rule 127 (foreach_variable)


状態 763

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg . ')' $@22 foreach_statement

    ')'  shift, and go to state 834


状態 764

  135 declare_list: declare_list ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 835
    static_class_constant  go to state 503


状態 765

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  133 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "enddeclare (T_ENDDECLARE)"  shift, and go to state 836

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 766

  139 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $default  reduce using rule 140 (case_list)

    case_list  go to state 837


状態 767

  138 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  142 case_list: case_list . "case (T_CASE)" expr case_separator $@36 inner_statement_list
  144          | case_list . "default (T_DEFAULT)" case_separator $@37 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 838
    "case (T_CASE)"            shift, and go to state 839
    "default (T_DEFAULT)"      shift, and go to state 840


状態 768

  137 switch_case_list: '{' ';' . case_list '}'

    $default  reduce using rule 140 (case_list)

    case_list  go to state 841


状態 769

  136 switch_case_list: '{' case_list . '}'
  142 case_list: case_list . "case (T_CASE)" expr case_separator $@36 inner_statement_list
  144          | case_list . "default (T_DEFAULT)" case_separator $@37 inner_statement_list

    "case (T_CASE)"        shift, and go to state 839
    "default (T_DEFAULT)"  shift, and go to state 840
    '}'                    shift, and go to state 842


状態 770

  445 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $default  reduce using rule 445 (non_empty_static_array_pair_list)


状態 771

  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | non_empty_static_array_pair_list ',' static_scalar .

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 843

    $default  reduce using rule 444 (non_empty_static_array_pair_list)


状態 772

  425 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list ')' .

    $default  reduce using rule 425 (static_scalar)


状態 773

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' . $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 84 ($@27)

    $@27  go to state 844


状態 774

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 809

    $default  reduce using rule 361 (lexical_vars)

    lexical_vars  go to state 845


状態 775

  501 assignment_list: assignment_list . ',' assignment_list_element
  505 assignment_list_element: "list (T_LIST)" '(' $@75 assignment_list . ')'

    ','  shift, and go to state 628
    ')'  shift, and go to state 846


状態 776

  264 expr_without_variable: "list (T_LIST)" '(' $@46 assignment_list ')' '=' expr .
  288                      | expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 264 (expr_without_variable)


状態 777

  526 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $default  reduce using rule 526 (encaps_var)


状態 778

  370 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name '(' $@60 function_call_parameter_list ')' .

    $default  reduce using rule 370 (function_call)


状態 779

  158 ja_else_single: T_JA_ELSE . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 847


状態 780

   44 unticked_statement: T_JA_IF expr T_NARABA $@9 inner_statement_list $@10 ja_else_single . T_OWARI

    T_OWARI  shift, and go to state 848


状態 781

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  148 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "endwhile (T_ENDWHILE)"  shift, and go to state 849

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 782

  253 chaining_dereference: '[' dim_offset . ']'

    ']'  shift, and go to state 850


状態 783

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property . $@71 method_or_not

    $default  reduce using rule 458 ($@71)

    $@71  go to state 851


状態 784

  250 chaining_method_or_property: chaining_method_or_property variable_property .

    $default  reduce using rule 250 (chaining_method_or_property)


状態 785

  252 chaining_dereference: chaining_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 852
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 786

  255 chaining_instance_call: chaining_dereference $@43 . chaining_method_or_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 722

    chaining_method_or_property  go to state 853
    variable_property            go to state 726


状態 787

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 32 (inner_statement)


状態 788

  182 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .

    $default  reduce using rule 182 (non_empty_function_call_parameter_list)


状態 789

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 implements_list '{' class_statement_list . '}'
  194 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 791
    "use (T_USE)"              shift, and go to state 792
    "public (T_PUBLIC)"        shift, and go to state 793
    "protected (T_PROTECTED)"  shift, and go to state 794
    "private (T_PRIVATE)"      shift, and go to state 795
    "final (T_FINAL)"          shift, and go to state 796
    "abstract (T_ABSTRACT)"    shift, and go to state 797
    "static (T_STATIC)"        shift, and go to state 798
    "var (T_VAR)"              shift, and go to state 799
    '}'                        shift, and go to state 854

    $default  reduce using rule 227 (method_modifiers)

    class_statement             go to state 801
    trait_use_statement         go to state 802
    variable_modifiers          go to state 803
    method_modifiers            go to state 804
    non_empty_member_modifiers  go to state 805
    member_modifier             go to state 806
    class_constant_declaration  go to state 807


状態 790

  123 interface_list: interface_list ',' fully_qualified_class_name .

    $default  reduce using rule 123 (interface_list)


状態 791

  242 class_constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 855


状態 792

  202 trait_use_statement: "use (T_USE)" . trait_list trait_adaptations

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    trait_list                  go to state 856
    fully_qualified_class_name  go to state 857


状態 793

  231 member_modifier: "public (T_PUBLIC)" .

    $default  reduce using rule 231 (member_modifier)


状態 794

  232 member_modifier: "protected (T_PROTECTED)" .

    $default  reduce using rule 232 (member_modifier)


状態 795

  233 member_modifier: "private (T_PRIVATE)" .

    $default  reduce using rule 233 (member_modifier)


状態 796

  236 member_modifier: "final (T_FINAL)" .

    $default  reduce using rule 236 (member_modifier)


状態 797

  235 member_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 235 (member_modifier)


状態 798

  234 member_modifier: "static (T_STATIC)" .

    $default  reduce using rule 234 (member_modifier)


状態 799

  226 variable_modifiers: "var (T_VAR)" .

    $default  reduce using rule 226 (variable_modifiers)


状態 800

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@35 interface_extends_list '{' class_statement_list '}' .

    $default  reduce using rule 110 (unticked_class_declaration_statement)


状態 801

  194 class_statement_list: class_statement_list class_statement .

    $default  reduce using rule 194 (class_statement_list)


状態 802

  199 class_statement: trait_use_statement .

    $default  reduce using rule 199 (class_statement)


状態 803

  197 class_statement: variable_modifiers . $@40 class_variable_declaration ';'

    $default  reduce using rule 196 ($@40)

    $@40  go to state 858


状態 804

  201 class_statement: method_modifiers . function is_reference "identifier (T_STRING)" $@41 '(' parameter_list ')' method_body

    "function (T_FUNCTION)"  shift, and go to state 47

    function  go to state 859


状態 805

  225 variable_modifiers: non_empty_member_modifiers .
  228 method_modifiers: non_empty_member_modifiers .
  230 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 793
    "protected (T_PROTECTED)"  shift, and go to state 794
    "private (T_PRIVATE)"      shift, and go to state 795
    "final (T_FINAL)"          shift, and go to state 796
    "abstract (T_ABSTRACT)"    shift, and go to state 797
    "static (T_STATIC)"        shift, and go to state 798

    "function (T_FUNCTION)"  reduce using rule 228 (method_modifiers)
    $default                 reduce using rule 225 (variable_modifiers)

    member_modifier  go to state 860


状態 806

  229 non_empty_member_modifiers: member_modifier .

    $default  reduce using rule 229 (non_empty_member_modifiers)


状態 807

  198 class_statement: class_constant_declaration . ';'
  241 class_constant_declaration: class_constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 861
    ';'  shift, and go to state 862


状態 808

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' . '{' inner_statement_list '}'

    '{'  shift, and go to state 863


状態 809

  362 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  shift, and go to state 864


状態 810

  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 865


状態 811

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      shift, and go to state 866
    "variable (T_VARIABLE)"  shift, and go to state 867


状態 812

  164 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" .
  165                         | optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 868

    $default  reduce using rule 164 (non_empty_parameter_list)


状態 813

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 869
    static_class_constant  go to state 503


状態 814

  376 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@63 function_call_parameter_list ')' .

    $default  reduce using rule 376 (function_call)


状態 815

  374 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@62 function_call_parameter_list ')' .

    $default  reduce using rule 374 (function_call)


状態 816

  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  337                      | expr '?' $@53 expr ':' $@54 expr .
  339                      | expr . '?' ':' $@55 expr

    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275

    $default  reduce using rule 337 (expr_without_variable)


状態 817

  270 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@47 ctor_arguments .

    $default  reduce using rule 270 (expr_without_variable)


状態 818

  380 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects '(' $@65 function_call_parameter_list ')' .

    $default  reduce using rule 380 (function_call)


状態 819

  378 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name '(' $@64 function_call_parameter_list ')' .

    $default  reduce using rule 378 (function_call)


状態 820

  463 method: '(' $@72 . function_call_parameter_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '&'                                           shift, and go to state 544
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 176 (function_call_parameter_list)

    namespace_name                          go to state 87
    function_call_parameter_list            go to state 870
    non_empty_function_call_parameter_list  go to state 546
    new_expr                                go to state 98
    expr_without_variable                   go to state 547
    function                                go to state 123
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 186
    r_variable                              go to state 106
    rw_variable                             go to state 107
    variable                                go to state 548
    variable_without_objects                go to state 109
    static_member                           go to state 110
    variable_class_name                     go to state 111
    array_function_dereference              go to state 112
    base_variable_with_function_calls       go to state 113
    base_variable                           go to state 114
    reference_variable                      go to state 115
    compound_variable                       go to state 116
    simple_indirect_reference               go to state 117
    internal_functions_in_yacc              go to state 118
    class_constant                          go to state 119


状態 821

  460 array_method_dereference: array_method_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 871
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 822

  461 array_method_dereference: method '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 487 (dim_offset)

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 461
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    dim_offset                         go to state 872
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 823

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@69 object_property $@70 method_or_not variable_properties .
  456 variable_properties: variable_properties . variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 722

    $default  reduce using rule 454 (variable)

    variable_property  go to state 873


状態 824

  492 object_dim_list: object_dim_list '[' dim_offset ']' .

    $default  reduce using rule 492 (object_dim_list)


状態 825

  493 object_dim_list: object_dim_list '{' expr '}' .

    $default  reduce using rule 493 (object_dim_list)


状態 826

  398 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" . object_property

    "identifier (T_STRING)"  shift, and go to state 468
    "variable (T_VARIABLE)"  shift, and go to state 34
    T_HENSU                  shift, and go to state 80
    '{'                      shift, and go to state 404
    '$'                      shift, and go to state 84

    variable_without_objects   go to state 585
    reference_variable         go to state 406
    compound_variable          go to state 116
    object_property            go to state 874
    object_dim_list            go to state 587
    variable_name              go to state 588
    simple_indirect_reference  go to state 408


状態 827

  396 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .

    $default  reduce using rule 396 (dynamic_class_name_variable_properties)


状態 828

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 . new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 152 (new_elseif_list)

    new_elseif_list  go to state 875


状態 829

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 statement $@6 elseif_list . else_single
  151 elseif_list: elseif_list . "elseif (T_ELSEIF)" '(' expr ')' $@38 statement

    "elseif (T_ELSEIF)"  shift, and go to state 876
    "else (T_ELSE)"      shift, and go to state 877

    "elseif (T_ELSEIF)"  [reduce using rule 155 (else_single)]
    "else (T_ELSE)"      [reduce using rule 155 (else_single)]
    $default             reduce using rule 155 (else_single)

    else_single  go to state 878


状態 830

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' $@16 expr ')' . ';'

    ';'  shift, and go to state 879


状態 831

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 . for_expr ')' $@19 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    $default  reduce using rule 245 (for_expr)

    namespace_name                     go to state 87
    for_expr                           go to state 880
    non_empty_for_expr                 go to state 330
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 331
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 832

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" foreach_variable .

    $default  reduce using rule 125 (foreach_optional_arg)


状態 833

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' . $@24 foreach_statement

    $default  reduce using rule 78 ($@24)

    $@24  go to state 881


状態 834

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' . $@22 foreach_statement

    $default  reduce using rule 75 ($@22)

    $@22  go to state 882


状態 835

  135 declare_list: declare_list ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 135 (declare_list)


状態 836

  133 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  shift, and go to state 883


状態 837

  139 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  142 case_list: case_list . "case (T_CASE)" expr case_separator $@36 inner_statement_list
  144          | case_list . "default (T_DEFAULT)" case_separator $@37 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 884
    "case (T_CASE)"            shift, and go to state 839
    "default (T_DEFAULT)"      shift, and go to state 840


状態 838

  138 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 885


状態 839

  142 case_list: case_list "case (T_CASE)" . expr case_separator $@36 inner_statement_list

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 886
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 840

  144 case_list: case_list "default (T_DEFAULT)" . case_separator $@37 inner_statement_list

    ':'  shift, and go to state 887
    ';'  shift, and go to state 888

    case_separator  go to state 889


状態 841

  137 switch_case_list: '{' ';' case_list . '}'
  142 case_list: case_list . "case (T_CASE)" expr case_separator $@36 inner_statement_list
  144          | case_list . "default (T_DEFAULT)" case_separator $@37 inner_statement_list

    "case (T_CASE)"        shift, and go to state 839
    "default (T_DEFAULT)"  shift, and go to state 840
    '}'                    shift, and go to state 890


状態 842

  136 switch_case_list: '{' case_list '}' .

    $default  reduce using rule 136 (switch_case_list)


状態 843

  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 891
    static_class_constant  go to state 503


状態 844

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 . fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 892


状態 845

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 893


状態 846

  505 assignment_list_element: "list (T_LIST)" '(' $@75 assignment_list ')' .

    $default  reduce using rule 505 (assignment_list_element)


状態 847

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  158 ja_else_single: T_JA_ELSE inner_statement_list .

    T_OWARI   reduce using rule 158 (ja_else_single)
    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 848

   44 unticked_statement: T_JA_IF expr T_NARABA $@9 inner_statement_list $@10 ja_else_single T_OWARI .

    $default  reduce using rule 44 (unticked_statement)


状態 849

  148 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  shift, and go to state 894


状態 850

  253 chaining_dereference: '[' dim_offset ']' .

    $default  reduce using rule 253 (chaining_dereference)


状態 851

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@71 . method_or_not

    '('  shift, and go to state 747

    $default  reduce using rule 466 (method_or_not)

    array_method_dereference  go to state 748
    method                    go to state 749
    method_or_not             go to state 895


状態 852

  252 chaining_dereference: chaining_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 896


状態 853

  250 chaining_method_or_property: chaining_method_or_property . variable_property
  255 chaining_instance_call: chaining_dereference $@43 chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 722

    $default  reduce using rule 255 (chaining_instance_call)

    variable_property  go to state 784


状態 854

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@34 implements_list '{' class_statement_list '}' .

    $default  reduce using rule 108 (unticked_class_declaration_statement)


状態 855

  242 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 897


状態 856

  202 trait_use_statement: "use (T_USE)" trait_list . trait_adaptations
  204 trait_list: trait_list . ',' fully_qualified_class_name

    ','  shift, and go to state 898
    ';'  shift, and go to state 899
    '{'  shift, and go to state 900

    trait_adaptations  go to state 901


状態 857

  203 trait_list: fully_qualified_class_name .

    $default  reduce using rule 203 (trait_list)


状態 858

  197 class_statement: variable_modifiers $@40 . class_variable_declaration ';'

    "variable (T_VARIABLE)"  shift, and go to state 902

    class_variable_declaration  go to state 903


状態 859

  201 class_statement: method_modifiers function . is_reference "identifier (T_STRING)" $@41 '(' parameter_list ')' method_body

    '&'  shift, and go to state 240

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 904


状態 860

  230 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $default  reduce using rule 230 (non_empty_member_modifiers)


状態 861

  241 class_constant_declaration: class_constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 905


状態 862

  198 class_statement: class_constant_declaration ';' .

    $default  reduce using rule 198 (class_statement)


状態 863

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 906


状態 864

  362 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      shift, and go to state 907
    "variable (T_VARIABLE)"  shift, and go to state 908

    lexical_var_list  go to state 909


状態 865

  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 910


状態 866

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 911


状態 867

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" .
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 912

    $default  reduce using rule 167 (non_empty_parameter_list)


状態 868

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 913
    static_class_constant  go to state 503


状態 869

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 166 (non_empty_parameter_list)


状態 870

  463 method: '(' $@72 function_call_parameter_list . ')'

    ')'  shift, and go to state 914


状態 871

  460 array_method_dereference: array_method_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 915


状態 872

  461 array_method_dereference: method '[' dim_offset . ']'

    ']'  shift, and go to state 916


状態 873

  456 variable_properties: variable_properties variable_property .

    $default  reduce using rule 456 (variable_properties)


状態 874

  398 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property .

    $default  reduce using rule 398 (dynamic_class_name_variable_property)


状態 875

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list . new_else_single "endif (T_ENDIF)" ';'
  154 new_elseif_list: new_elseif_list . "elseif (T_ELSEIF)" '(' expr ')' ':' $@39 inner_statement_list

    "elseif (T_ELSEIF)"  shift, and go to state 917
    "else (T_ELSE)"      shift, and go to state 918

    $default  reduce using rule 159 (new_else_single)

    new_else_single  go to state 919


状態 876

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" . '(' expr ')' $@38 statement

    '('  shift, and go to state 920


状態 877

  156 else_single: "else (T_ELSE)" . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 921
    unticked_statement                 go to state 91
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 878

   38 unticked_statement: "if (T_IF)" '(' expr ')' $@5 statement $@6 elseif_list else_single .

    $default  reduce using rule 38 (unticked_statement)


状態 879

   53 unticked_statement: "do (T_DO)" $@15 statement "while (T_WHILE)" '(' $@16 expr ')' ';' .

    $default  reduce using rule 53 (unticked_statement)


状態 880

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 for_expr . ')' $@19 for_statement

    ')'  shift, and go to state 922


状態 881

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 923
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 924
    unticked_statement                 go to state 91
    foreach_statement                  go to state 925
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 882

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 923
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 924
    unticked_statement                 go to state 91
    foreach_statement                  go to state 926
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 883

  133 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $default  reduce using rule 133 (declare_statement)


状態 884

  139 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 927


状態 885

  138 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 138 (switch_case_list)


状態 886

  142 case_list: case_list "case (T_CASE)" expr . case_separator $@36 inner_statement_list
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    ':'                           shift, and go to state 887
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ';'                           shift, and go to state 888

    case_separator  go to state 928


状態 887

  145 case_separator: ':' .

    $default  reduce using rule 145 (case_separator)


状態 888

  146 case_separator: ';' .

    $default  reduce using rule 146 (case_separator)


状態 889

  144 case_list: case_list "default (T_DEFAULT)" case_separator . $@37 inner_statement_list

    $default  reduce using rule 143 ($@37)

    $@37  go to state 929


状態 890

  137 switch_case_list: '{' ';' case_list '}' .

    $default  reduce using rule 137 (switch_case_list)


状態 891

  443 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $default  reduce using rule 443 (non_empty_static_array_pair_list)


状態 892

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name . $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 85 ($@28)

    $@28  go to state 930


状態 893

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 931


状態 894

  148 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $default  reduce using rule 148 (while_statement)


状態 895

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@71 method_or_not .

    $default  reduce using rule 459 (variable_property)


状態 896

  252 chaining_dereference: chaining_dereference '[' dim_offset ']' .

    $default  reduce using rule 252 (chaining_dereference)


状態 897

  242 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 932
    static_class_constant  go to state 503


状態 898

  204 trait_list: trait_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 933


状態 899

  205 trait_adaptations: ';' .

    $default  reduce using rule 205 (trait_adaptations)


状態 900

  206 trait_adaptations: '{' . trait_adaptation_list '}'

    "identifier (T_STRING)"    shift, and go to state 934
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 207 (trait_adaptation_list)

    namespace_name                          go to state 552
    trait_adaptation_list                   go to state 935
    non_empty_trait_adaptation_list         go to state 936
    trait_adaptation_statement              go to state 937
    trait_precedence                        go to state 938
    trait_method_reference                  go to state 939
    trait_method_reference_fully_qualified  go to state 940
    trait_alias                             go to state 941
    fully_qualified_class_name              go to state 942


状態 901

  202 trait_use_statement: "use (T_USE)" trait_list trait_adaptations .

    $default  reduce using rule 202 (trait_use_statement)


状態 902

  239 class_variable_declaration: "variable (T_VARIABLE)" .
  240                           | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 943

    $default  reduce using rule 239 (class_variable_declaration)


状態 903

  197 class_statement: variable_modifiers $@40 class_variable_declaration . ';'
  237 class_variable_declaration: class_variable_declaration . ',' "variable (T_VARIABLE)"
  238                           | class_variable_declaration . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 944
    ';'  shift, and go to state 945


状態 904

  201 class_statement: method_modifiers function is_reference . "identifier (T_STRING)" $@41 '(' parameter_list ')' method_body

    "identifier (T_STRING)"  shift, and go to state 946


状態 905

  241 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 947


状態 906

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' inner_statement_list . '}'

    '}'  shift, and go to state 948

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 907

  366 lexical_var_list: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 949


状態 908

  365 lexical_var_list: "variable (T_VARIABLE)" .

    $default  reduce using rule 365 (lexical_var_list)


状態 909

  362 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  363 lexical_var_list: lexical_var_list . ',' "variable (T_VARIABLE)"
  364                 | lexical_var_list . ',' '&' "variable (T_VARIABLE)"

    ','  shift, and go to state 950
    ')'  shift, and go to state 951


状態 910

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 952

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 911

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" .
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 953

    $default  reduce using rule 168 (non_empty_parameter_list)


状態 912

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 954
    static_class_constant  go to state 503


状態 913

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 165 (non_empty_parameter_list)


状態 914

  463 method: '(' $@72 function_call_parameter_list ')' .

    $default  reduce using rule 463 (method)


状態 915

  460 array_method_dereference: array_method_dereference '[' dim_offset ']' .

    $default  reduce using rule 460 (array_method_dereference)


状態 916

  461 array_method_dereference: method '[' dim_offset ']' .

    $default  reduce using rule 461 (array_method_dereference)


状態 917

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" . '(' expr ')' ':' $@39 inner_statement_list

    '('  shift, and go to state 955


状態 918

  160 new_else_single: "else (T_ELSE)" . ':' inner_statement_list

    ':'  shift, and go to state 956


状態 919

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single . "endif (T_ENDIF)" ';'

    "endif (T_ENDIF)"  shift, and go to state 957


状態 920

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' . expr ')' $@38 statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 958
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 921

  156 else_single: "else (T_ELSE)" statement .

    $default  reduce using rule 156 (else_single)


状態 922

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 for_expr ')' . $@19 for_statement

    $default  reduce using rule 56 ($@19)

    $@19  go to state 959


状態 923

  131 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 960


状態 924

  130 foreach_statement: statement .

    $default  reduce using rule 130 (foreach_statement)


状態 925

   79 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@23 variable foreach_optional_arg ')' $@24 foreach_statement .

    $default  reduce using rule 79 (unticked_statement)


状態 926

   76 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@21 foreach_variable foreach_optional_arg ')' $@22 foreach_statement .

    $default  reduce using rule 76 (unticked_statement)


状態 927

  139 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 139 (switch_case_list)


状態 928

  142 case_list: case_list "case (T_CASE)" expr case_separator . $@36 inner_statement_list

    $default  reduce using rule 141 ($@36)

    $@36  go to state 961


状態 929

  144 case_list: case_list "default (T_DEFAULT)" case_separator $@37 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 962


状態 930

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 . "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    "variable (T_VARIABLE)"  shift, and go to state 963


状態 931

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 964

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 932

  242 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 242 (class_constant_declaration)


状態 933

  204 trait_list: trait_list ',' fully_qualified_class_name .

    $default  reduce using rule 204 (trait_list)


状態 934

    5 namespace_name: "identifier (T_STRING)" .
  216 trait_method_reference: "identifier (T_STRING)" .

    "as (T_AS)"  reduce using rule 216 (trait_method_reference)
    $default     reduce using rule 5 (namespace_name)


状態 935

  206 trait_adaptations: '{' trait_adaptation_list . '}'

    '}'  shift, and go to state 965


状態 936

  208 trait_adaptation_list: non_empty_trait_adaptation_list .
  210 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list . trait_adaptation_statement

    "identifier (T_STRING)"    shift, and go to state 934
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 208 (trait_adaptation_list)

    namespace_name                          go to state 552
    trait_adaptation_statement              go to state 966
    trait_precedence                        go to state 938
    trait_method_reference                  go to state 939
    trait_method_reference_fully_qualified  go to state 940
    trait_alias                             go to state 941
    fully_qualified_class_name              go to state 942


状態 937

  209 non_empty_trait_adaptation_list: trait_adaptation_statement .

    $default  reduce using rule 209 (non_empty_trait_adaptation_list)


状態 938

  211 trait_adaptation_statement: trait_precedence . ';'

    ';'  shift, and go to state 967


状態 939

  219 trait_alias: trait_method_reference . "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  220            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  shift, and go to state 968


状態 940

  213 trait_precedence: trait_method_reference_fully_qualified . "insteadof (T_INSTEADOF)" trait_reference_list
  217 trait_method_reference: trait_method_reference_fully_qualified .

    "insteadof (T_INSTEADOF)"  shift, and go to state 969

    $default  reduce using rule 217 (trait_method_reference)


状態 941

  212 trait_adaptation_statement: trait_alias . ';'

    ';'  shift, and go to state 970


状態 942

  218 trait_method_reference_fully_qualified: fully_qualified_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 971


状態 943

  240 class_variable_declaration: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 972
    static_class_constant  go to state 503


状態 944

  237 class_variable_declaration: class_variable_declaration ',' . "variable (T_VARIABLE)"
  238                           | class_variable_declaration ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 973


状態 945

  197 class_statement: variable_modifiers $@40 class_variable_declaration ';' .

    $default  reduce using rule 197 (class_statement)


状態 946

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" . $@41 '(' parameter_list ')' method_body

    $default  reduce using rule 200 ($@41)

    $@41  go to state 974


状態 947

  241 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 975
    static_class_constant  go to state 503


状態 948

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@33 '(' parameter_list ')' '{' inner_statement_list '}' .

    $default  reduce using rule 106 (unticked_function_declaration_statement)


状態 949

  366 lexical_var_list: '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 366 (lexical_var_list)


状態 950

  363 lexical_var_list: lexical_var_list ',' . "variable (T_VARIABLE)"
  364                 | lexical_var_list ',' . '&' "variable (T_VARIABLE)"

    '&'                      shift, and go to state 976
    "variable (T_VARIABLE)"  shift, and go to state 977


状態 951

  362 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $default  reduce using rule 362 (lexical_vars)


状態 952

  357 expr_without_variable: function is_reference '(' @57 parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 357 (expr_without_variable)


状態 953

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 978
    static_class_constant  go to state 503


状態 954

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 170 (non_empty_parameter_list)


状態 955

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' . expr ')' ':' $@39 inner_statement_list

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "function (T_FUNCTION)"                       shift, and go to state 47
    "static (T_STATIC)"                           shift, and go to state 121
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 979
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 956

  160 new_else_single: "else (T_ELSE)" ':' . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 980


状態 957

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 981


状態 958

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' expr . ')' $@38 statement
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 982


状態 959

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 for_expr ')' $@19 . for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    ':'                                           shift, and go to state 983
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 984
    unticked_statement                 go to state 91
    for_statement                      go to state 985
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 960

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  131 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "endforeach (T_ENDFOREACH)"  shift, and go to state 986

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 961

  142 case_list: case_list "case (T_CASE)" expr case_separator $@36 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 987


状態 962

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  144 case_list: case_list "default (T_DEFAULT)" case_separator $@37 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 144 (case_list)
    "case (T_CASE)"            reduce using rule 144 (case_list)
    "default (T_DEFAULT)"      reduce using rule 144 (case_list)
    '}'                        reduce using rule 144 (case_list)
    $default                   reduce using rule 26 ($@4)

    $@4  go to state 390


状態 963

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" . ')' $@29 '{' inner_statement_list '}' $@30 additional_catches

    ')'  shift, and go to state 988


状態 964

  359 expr_without_variable: "static (T_STATIC)" function is_reference '(' @58 parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 359 (expr_without_variable)


状態 965

  206 trait_adaptations: '{' trait_adaptation_list '}' .

    $default  reduce using rule 206 (trait_adaptations)


状態 966

  210 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list trait_adaptation_statement .

    $default  reduce using rule 210 (non_empty_trait_adaptation_list)


状態 967

  211 trait_adaptation_statement: trait_precedence ';' .

    $default  reduce using rule 211 (trait_adaptation_statement)


状態 968

  219 trait_alias: trait_method_reference "as (T_AS)" . trait_modifiers "identifier (T_STRING)"
  220            | trait_method_reference "as (T_AS)" . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 793
    "protected (T_PROTECTED)"  shift, and go to state 794
    "private (T_PRIVATE)"      shift, and go to state 795
    "final (T_FINAL)"          shift, and go to state 796
    "abstract (T_ABSTRACT)"    shift, and go to state 797
    "static (T_STATIC)"        shift, and go to state 798

    $default  reduce using rule 221 (trait_modifiers)

    trait_modifiers  go to state 989
    member_modifier  go to state 990


状態 969

  213 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" . trait_reference_list

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    trait_reference_list        go to state 991
    fully_qualified_class_name  go to state 992


状態 970

  212 trait_adaptation_statement: trait_alias ';' .

    $default  reduce using rule 212 (trait_adaptation_statement)


状態 971

  218 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 993


状態 972

  240 class_variable_declaration: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 240 (class_variable_declaration)


状態 973

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" .
  238                           | class_variable_declaration ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 994

    $default  reduce using rule 237 (class_variable_declaration)


状態 974

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 . '(' parameter_list ')' method_body

    '('  shift, and go to state 995


状態 975

  241 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 241 (class_constant_declaration)


状態 976

  364 lexical_var_list: lexical_var_list ',' '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 996


状態 977

  363 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)" .

    $default  reduce using rule 363 (lexical_var_list)


状態 978

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 169 (non_empty_parameter_list)


状態 979

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr . ')' ':' $@39 inner_statement_list
  288 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@48 expr
  290                      | expr . "&& (T_BOOLEAN_AND)" $@49 expr
  292                      | expr . "or (T_LOGICAL_OR)" $@50 expr
  294                      | expr . "and (T_LOGICAL_AND)" $@51 expr
  295                      | expr . "xor (T_LOGICAL_XOR)" expr
  296                      | expr . '|' expr
  297                      | expr . '&' expr
  298                      | expr . '^' expr
  299                      | expr . '.' expr
  300                      | expr . '+' expr
  301                      | expr . "+" expr
  302                      | expr . '-' expr
  303                      | expr . "-" expr
  304                      | expr . '*' expr
  305                      | expr . "*" expr
  306                      | expr . '/' expr
  307                      | expr . "/" expr
  308                      | expr . '%' expr
  309                      | expr . "T_WO" expr "%"
  310                      | expr . "<< (T_SL)" expr
  311                      | expr . ">> (T_SR)" expr
  316                      | expr . "=== (T_IS_IDENTICAL)" expr
  317                      | expr . "T_GA" expr "EQ"
  318                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  319                      | expr . "T_GA" expr "NE"
  320                      | expr . "== (T_IS_EQUAL)" expr
  321                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  322                      | expr . '<' expr
  323                      | expr . "T_GA" expr "< (T_YORI_TIISAI)"
  324                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  325                      | expr . "T_GA" expr "<= (T_IS_SMALLER_OR_EQUAL)"
  326                      | expr . '>' expr
  327                      | expr . "T_GA" expr "> (T_YORI_OOKII)"
  328                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  329                      | expr . "T_GA" expr ">= (T_IS_GREATER_OR_EQUAL)"
  330                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | expr . '?' $@53 expr ':' $@54 expr
  339                      | expr . '?' ':' $@55 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 244
    "xor (T_LOGICAL_XOR)"         shift, and go to state 245
    "and (T_LOGICAL_AND)"         shift, and go to state 246
    '?'                           shift, and go to state 247
    "|| (T_BOOLEAN_OR)"           shift, and go to state 248
    "&& (T_BOOLEAN_AND)"          shift, and go to state 249
    '|'                           shift, and go to state 250
    '^'                           shift, and go to state 251
    '&'                           shift, and go to state 252
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 253
    "=== (T_IS_IDENTICAL)"        shift, and go to state 254
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 255
    "== (T_IS_EQUAL)"             shift, and go to state 256
    '<'                           shift, and go to state 257
    '>'                           shift, and go to state 258
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 259
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 260
    ">> (T_SR)"                   shift, and go to state 261
    "<< (T_SL)"                   shift, and go to state 262
    '+'                           shift, and go to state 263
    '-'                           shift, and go to state 264
    '.'                           shift, and go to state 265
    '*'                           shift, and go to state 266
    '/'                           shift, and go to state 267
    '%'                           shift, and go to state 268
    "instanceof (T_INSTANCEOF)"   shift, and go to state 269
    "T_WO"                        shift, and go to state 270
    "/"                           shift, and go to state 271
    "*"                           shift, and go to state 272
    "-"                           shift, and go to state 273
    "+"                           shift, and go to state 274
    "T_GA"                        shift, and go to state 275
    ')'                           shift, and go to state 997


状態 980

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  160 new_else_single: "else (T_ELSE)" ':' inner_statement_list .

    "endif (T_ENDIF)"  reduce using rule 160 (new_else_single)
    $default           reduce using rule 26 ($@4)

    $@4  go to state 390


状態 981

   41 unticked_statement: "if (T_IF)" '(' expr ')' ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';' .

    $default  reduce using rule 41 (unticked_statement)


状態 982

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' expr ')' . $@38 statement

    $default  reduce using rule 150 ($@38)

    $@38  go to state 998


状態 983

  129 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 999


状態 984

  128 for_statement: statement .

    $default  reduce using rule 128 (for_statement)


状態 985

   57 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@17 for_expr ';' $@18 for_expr ')' $@19 for_statement .

    $default  reduce using rule 57 (unticked_statement)


状態 986

  131 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  shift, and go to state 1000


状態 987

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  142 case_list: case_list "case (T_CASE)" expr case_separator $@36 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 142 (case_list)
    "case (T_CASE)"            reduce using rule 142 (case_list)
    "default (T_DEFAULT)"      reduce using rule 142 (case_list)
    '}'                        reduce using rule 142 (case_list)
    $default                   reduce using rule 26 ($@4)

    $@4  go to state 390


状態 988

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' . $@29 '{' inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 86 ($@29)

    $@29  go to state 1001


状態 989

  219 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 1002


状態 990

  220 trait_alias: trait_method_reference "as (T_AS)" member_modifier .
  222 trait_modifiers: member_modifier .

    "identifier (T_STRING)"  reduce using rule 222 (trait_modifiers)
    $default                 reduce using rule 220 (trait_alias)


状態 991

  213 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list .
  215 trait_reference_list: trait_reference_list . ',' fully_qualified_class_name

    ','  shift, and go to state 1003

    $default  reduce using rule 213 (trait_precedence)


状態 992

  214 trait_reference_list: fully_qualified_class_name .

    $default  reduce using rule 214 (trait_reference_list)


状態 993

  218 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 218 (trait_method_reference_fully_qualified)


状態 994

  238 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 120
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "static (T_STATIC)"                           shift, and go to state 142
    "array (T_ARRAY)"                             shift, and go to state 494
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 495
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 496
    "namespace (T_NAMESPACE)"                     shift, and go to state 497
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 498

    namespace_name         go to state 499
    class_name             go to state 500
    common_scalar          go to state 501
    static_scalar          go to state 1004
    static_class_constant  go to state 503


状態 995

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 '(' . parameter_list ')' method_body

    "identifier (T_STRING)"    shift, and go to state 120
    "array (T_ARRAY)"          shift, and go to state 656
    "callable (T_CALLABLE)"    shift, and go to state 657
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 1005
    non_empty_parameter_list    go to state 659
    optional_class_type         go to state 660
    fully_qualified_class_name  go to state 661


状態 996

  364 lexical_var_list: lexical_var_list ',' '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 364 (lexical_var_list)


状態 997

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr ')' . ':' $@39 inner_statement_list

    ':'  shift, and go to state 1006


状態 998

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' expr ')' $@38 . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    '+'                                           shift, and go to state 11
    '-'                                           shift, and go to state 12
    '!'                                           shift, and go to state 13
    '~'                                           shift, and go to state 14
    '@'                                           shift, and go to state 15
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 16
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 17
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 18
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 21
    "(int) (T_INT_CAST)"                          shift, and go to state 22
    "-- (T_DEC)"                                  shift, and go to state 23
    "++ (T_INC)"                                  shift, and go to state 24
    '['                                           shift, and go to state 25
    "clone (T_CLONE)"                             shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "exit (T_EXIT)"                               shift, and go to state 28
    "if (T_IF)"                                   shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 30
    "floating-point number (T_DNUMBER)"           shift, and go to state 31
    "identifier (T_STRING)"                       shift, and go to state 32
    "variable name (T_STRING_VARNAME)"            shift, and go to state 33
    "variable (T_VARIABLE)"                       shift, and go to state 34
    T_INLINE_HTML                                 shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 36
    "echo (T_ECHO)"                               shift, and go to state 37
    "do (T_DO)"                                   shift, and go to state 38
    "while (T_WHILE)"                             shift, and go to state 39
    "for (T_FOR)"                                 shift, and go to state 40
    "foreach (T_FOREACH)"                         shift, and go to state 41
    "declare (T_DECLARE)"                         shift, and go to state 42
    "switch (T_SWITCH)"                           shift, and go to state 43
    "break (T_BREAK)"                             shift, and go to state 44
    "continue (T_CONTINUE)"                       shift, and go to state 45
    "goto (T_GOTO)"                               shift, and go to state 46
    "function (T_FUNCTION)"                       shift, and go to state 47
    "return (T_RETURN)"                           shift, and go to state 49
    "try (T_TRY)"                                 shift, and go to state 50
    "throw (T_THROW)"                             shift, and go to state 51
    "global (T_GLOBAL)"                           shift, and go to state 53
    "static (T_STATIC)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 66
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 67
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 68
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 69
    "__LINE__ (T_LINE)"                           shift, and go to state 70
    "__FILE__ (T_FILE)"                           shift, and go to state 71
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 72
    "namespace (T_NAMESPACE)"                     shift, and go to state 122
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 74
    "__DIR__ (T_DIR)"                             shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    T_OPEN_OUTPUT                                 shift, and go to state 77
    T_JA_IF                                       shift, and go to state 78
    T_KURIKAESI                                   shift, and go to state 79
    T_HENSU                                       shift, and go to state 80
    '('                                           shift, and go to state 81
    ';'                                           shift, and go to state 82
    '{'                                           shift, and go to state 83
    '$'                                           shift, and go to state 84
    '`'                                           shift, and go to state 85
    '"'                                           shift, and go to state 86

    namespace_name                     go to state 87
    statement                          go to state 1007
    unticked_statement                 go to state 91
    new_expr                           go to state 98
    expr_without_variable              go to state 99
    function                           go to state 123
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    r_variable                         go to state 106
    rw_variable                        go to state 107
    variable                           go to state 108
    variable_without_objects           go to state 109
    static_member                      go to state 110
    variable_class_name                go to state 111
    array_function_dereference         go to state 112
    base_variable_with_function_calls  go to state 113
    base_variable                      go to state 114
    reference_variable                 go to state 115
    compound_variable                  go to state 116
    simple_indirect_reference          go to state 117
    internal_functions_in_yacc         go to state 118
    class_constant                     go to state 119


状態 999

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  129 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "endfor (T_ENDFOR)"  shift, and go to state 1008

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 1000

  131 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $default  reduce using rule 131 (foreach_statement)


状態 1001

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 . '{' inner_statement_list '}' $@30 additional_catches

    '{'  shift, and go to state 1009


状態 1002

  219 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)" .

    $default  reduce using rule 219 (trait_alias)


状態 1003

  215 trait_reference_list: trait_reference_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 1010


状態 1004

  238 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 238 (class_variable_declaration)


状態 1005

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 '(' parameter_list . ')' method_body

    ')'  shift, and go to state 1011


状態 1006

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr ')' ':' . $@39 inner_statement_list

    $default  reduce using rule 153 ($@39)

    $@39  go to state 1012


状態 1007

  151 elseif_list: elseif_list "elseif (T_ELSEIF)" '(' expr ')' $@38 statement .

    $default  reduce using rule 151 (elseif_list)


状態 1008

  129 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  shift, and go to state 1013


状態 1009

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' . inner_statement_list '}' $@30 additional_catches

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 1014


状態 1010

  215 trait_reference_list: trait_reference_list ',' fully_qualified_class_name .

    $default  reduce using rule 215 (trait_reference_list)


状態 1011

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 '(' parameter_list ')' . method_body

    ';'  shift, and go to state 1015
    '{'  shift, and go to state 1016

    method_body  go to state 1017


状態 1012

  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr ')' ':' $@39 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 1018


状態 1013

  129 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $default  reduce using rule 129 (for_statement)


状態 1014

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list . '}' $@30 additional_catches

    '}'  shift, and go to state 1019

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 1015

  223 method_body: ';' .

    $default  reduce using rule 223 (method_body)


状態 1016

  224 method_body: '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 1020


状態 1017

  201 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@41 '(' parameter_list ')' method_body .

    $default  reduce using rule 201 (class_statement)


状態 1018

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  154 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" '(' expr ')' ':' $@39 inner_statement_list .

    "elseif (T_ELSEIF)"  reduce using rule 154 (new_elseif_list)
    "else (T_ELSE)"      reduce using rule 154 (new_elseif_list)
    "endif (T_ENDIF)"    reduce using rule 154 (new_elseif_list)
    $default             reduce using rule 26 ($@4)

    $@4  go to state 390


状態 1019

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' . $@30 additional_catches

    $default  reduce using rule 87 ($@30)

    $@30  go to state 1021


状態 1020

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  224 method_body: '{' inner_statement_list . '}'

    '}'  shift, and go to state 1022

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 1021

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 . additional_catches

    "catch (T_CATCH)"  shift, and go to state 1023

    $default  reduce using rule 92 (additional_catches)

    additional_catches            go to state 1024
    non_empty_additional_catches  go to state 1025
    additional_catch              go to state 1026


状態 1022

  224 method_body: '{' inner_statement_list '}' .

    $default  reduce using rule 224 (method_body)


状態 1023

   97 additional_catch: "catch (T_CATCH)" . '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}'

    '('  shift, and go to state 1027


状態 1024

   88 unticked_statement: "try (T_TRY)" $@26 '{' inner_statement_list '}' "catch (T_CATCH)" '(' $@27 fully_qualified_class_name $@28 "variable (T_VARIABLE)" ')' $@29 '{' inner_statement_list '}' $@30 additional_catches .

    $default  reduce using rule 88 (unticked_statement)


状態 1025

   91 additional_catches: non_empty_additional_catches .
   94 non_empty_additional_catches: non_empty_additional_catches . additional_catch

    "catch (T_CATCH)"  shift, and go to state 1023

    $default  reduce using rule 91 (additional_catches)

    additional_catch  go to state 1028


状態 1026

   93 non_empty_additional_catches: additional_catch .

    $default  reduce using rule 93 (non_empty_additional_catches)


状態 1027

   97 additional_catch: "catch (T_CATCH)" '(' . fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 120
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 1029


状態 1028

   94 non_empty_additional_catches: non_empty_additional_catches additional_catch .

    $default  reduce using rule 94 (non_empty_additional_catches)


状態 1029

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name . @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}'

    $default  reduce using rule 95 (@31)

    @31  go to state 1030


状態 1030

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 . "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  shift, and go to state 1031


状態 1031

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" . ')' $@32 '{' inner_statement_list '}'

    ')'  shift, and go to state 1032


状態 1032

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' . $@32 '{' inner_statement_list '}'

    $default  reduce using rule 96 ($@32)

    $@32  go to state 1033


状態 1033

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 . '{' inner_statement_list '}'

    '{'  shift, and go to state 1034


状態 1034

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 1035


状態 1035

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list . '}'

    '}'  shift, and go to state 1036

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


状態 1036

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @31 "variable (T_VARIABLE)" ')' $@32 '{' inner_statement_list '}' .

    $default  reduce using rule 97 (additional_catch)
